/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 455.0, "minX": 0.0, "maxY": 55296.0, "series": [{"data": [[0.0, 455.0], [0.1, 455.0], [0.2, 455.0], [0.3, 455.0], [0.4, 455.0], [0.5, 455.0], [0.6, 455.0], [0.7, 455.0], [0.8, 455.0], [0.9, 460.0], [1.0, 460.0], [1.1, 460.0], [1.2, 460.0], [1.3, 460.0], [1.4, 460.0], [1.5, 460.0], [1.6, 460.0], [1.7, 466.0], [1.8, 466.0], [1.9, 466.0], [2.0, 466.0], [2.1, 466.0], [2.2, 466.0], [2.3, 466.0], [2.4, 466.0], [2.5, 473.0], [2.6, 473.0], [2.7, 473.0], [2.8, 473.0], [2.9, 473.0], [3.0, 473.0], [3.1, 473.0], [3.2, 473.0], [3.3, 473.0], [3.4, 473.0], [3.5, 473.0], [3.6, 473.0], [3.7, 473.0], [3.8, 473.0], [3.9, 473.0], [4.0, 473.0], [4.1, 473.0], [4.2, 475.0], [4.3, 475.0], [4.4, 475.0], [4.5, 475.0], [4.6, 475.0], [4.7, 475.0], [4.8, 475.0], [4.9, 475.0], [5.0, 475.0], [5.1, 475.0], [5.2, 475.0], [5.3, 475.0], [5.4, 475.0], [5.5, 475.0], [5.6, 475.0], [5.7, 475.0], [5.8, 475.0], [5.9, 483.0], [6.0, 483.0], [6.1, 483.0], [6.2, 483.0], [6.3, 483.0], [6.4, 483.0], [6.5, 483.0], [6.6, 483.0], [6.7, 485.0], [6.8, 485.0], [6.9, 485.0], [7.0, 485.0], [7.1, 485.0], [7.2, 485.0], [7.3, 485.0], [7.4, 485.0], [7.5, 492.0], [7.6, 492.0], [7.7, 492.0], [7.8, 492.0], [7.9, 492.0], [8.0, 492.0], [8.1, 492.0], [8.2, 492.0], [8.3, 492.0], [8.4, 493.0], [8.5, 493.0], [8.6, 493.0], [8.7, 493.0], [8.8, 493.0], [8.9, 493.0], [9.0, 493.0], [9.1, 493.0], [9.2, 493.0], [9.3, 493.0], [9.4, 493.0], [9.5, 493.0], [9.6, 493.0], [9.7, 493.0], [9.8, 493.0], [9.9, 493.0], [10.0, 494.0], [10.1, 494.0], [10.2, 494.0], [10.3, 494.0], [10.4, 494.0], [10.5, 494.0], [10.6, 494.0], [10.7, 494.0], [10.8, 494.0], [10.9, 498.0], [11.0, 498.0], [11.1, 498.0], [11.2, 498.0], [11.3, 498.0], [11.4, 498.0], [11.5, 498.0], [11.6, 498.0], [11.7, 500.0], [11.8, 500.0], [11.9, 500.0], [12.0, 500.0], [12.1, 500.0], [12.2, 500.0], [12.3, 500.0], [12.4, 500.0], [12.5, 500.0], [12.6, 500.0], [12.7, 500.0], [12.8, 500.0], [12.9, 500.0], [13.0, 500.0], [13.1, 500.0], [13.2, 500.0], [13.3, 500.0], [13.4, 500.0], [13.5, 500.0], [13.6, 500.0], [13.7, 500.0], [13.8, 500.0], [13.9, 500.0], [14.0, 500.0], [14.1, 500.0], [14.2, 501.0], [14.3, 501.0], [14.4, 501.0], [14.5, 501.0], [14.6, 501.0], [14.7, 501.0], [14.8, 501.0], [14.9, 501.0], [15.0, 501.0], [15.1, 501.0], [15.2, 501.0], [15.3, 501.0], [15.4, 501.0], [15.5, 501.0], [15.6, 501.0], [15.7, 501.0], [15.8, 501.0], [15.9, 509.0], [16.0, 509.0], [16.1, 509.0], [16.2, 509.0], [16.3, 509.0], [16.4, 509.0], [16.5, 509.0], [16.6, 509.0], [16.7, 514.0], [16.8, 514.0], [16.9, 514.0], [17.0, 514.0], [17.1, 514.0], [17.2, 514.0], [17.3, 514.0], [17.4, 514.0], [17.5, 530.0], [17.6, 530.0], [17.7, 530.0], [17.8, 530.0], [17.9, 530.0], [18.0, 530.0], [18.1, 530.0], [18.2, 530.0], [18.3, 530.0], [18.4, 534.0], [18.5, 534.0], [18.6, 534.0], [18.7, 534.0], [18.8, 534.0], [18.9, 534.0], [19.0, 534.0], [19.1, 534.0], [19.2, 544.0], [19.3, 544.0], [19.4, 544.0], [19.5, 544.0], [19.6, 544.0], [19.7, 544.0], [19.8, 544.0], [19.9, 544.0], [20.0, 550.0], [20.1, 550.0], [20.2, 550.0], [20.3, 550.0], [20.4, 550.0], [20.5, 550.0], [20.6, 550.0], [20.7, 550.0], [20.8, 550.0], [20.9, 552.0], [21.0, 552.0], [21.1, 552.0], [21.2, 552.0], [21.3, 552.0], [21.4, 552.0], [21.5, 552.0], [21.6, 552.0], [21.7, 577.0], [21.8, 577.0], [21.9, 577.0], [22.0, 577.0], [22.1, 577.0], [22.2, 577.0], [22.3, 577.0], [22.4, 577.0], [22.5, 585.0], [22.6, 585.0], [22.7, 585.0], [22.8, 585.0], [22.9, 585.0], [23.0, 585.0], [23.1, 585.0], [23.2, 585.0], [23.3, 585.0], [23.4, 585.0], [23.5, 585.0], [23.6, 585.0], [23.7, 585.0], [23.8, 585.0], [23.9, 585.0], [24.0, 585.0], [24.1, 585.0], [24.2, 592.0], [24.3, 592.0], [24.4, 592.0], [24.5, 592.0], [24.6, 592.0], [24.7, 592.0], [24.8, 592.0], [24.9, 592.0], [25.0, 593.0], [25.1, 593.0], [25.2, 593.0], [25.3, 593.0], [25.4, 593.0], [25.5, 593.0], [25.6, 593.0], [25.7, 593.0], [25.8, 593.0], [25.9, 594.0], [26.0, 594.0], [26.1, 594.0], [26.2, 594.0], [26.3, 594.0], [26.4, 594.0], [26.5, 594.0], [26.6, 594.0], [26.7, 600.0], [26.8, 600.0], [26.9, 600.0], [27.0, 600.0], [27.1, 600.0], [27.2, 600.0], [27.3, 600.0], [27.4, 600.0], [27.5, 604.0], [27.6, 604.0], [27.7, 604.0], [27.8, 604.0], [27.9, 604.0], [28.0, 604.0], [28.1, 604.0], [28.2, 604.0], [28.3, 604.0], [28.4, 621.0], [28.5, 621.0], [28.6, 621.0], [28.7, 621.0], [28.8, 621.0], [28.9, 621.0], [29.0, 621.0], [29.1, 621.0], [29.2, 635.0], [29.3, 635.0], [29.4, 635.0], [29.5, 635.0], [29.6, 635.0], [29.7, 635.0], [29.8, 635.0], [29.9, 635.0], [30.0, 639.0], [30.1, 639.0], [30.2, 639.0], [30.3, 639.0], [30.4, 639.0], [30.5, 639.0], [30.6, 639.0], [30.7, 639.0], [30.8, 639.0], [30.9, 646.0], [31.0, 646.0], [31.1, 646.0], [31.2, 646.0], [31.3, 646.0], [31.4, 646.0], [31.5, 646.0], [31.6, 646.0], [31.7, 653.0], [31.8, 653.0], [31.9, 653.0], [32.0, 653.0], [32.1, 653.0], [32.2, 653.0], [32.3, 653.0], [32.4, 653.0], [32.5, 667.0], [32.6, 667.0], [32.7, 667.0], [32.8, 667.0], [32.9, 667.0], [33.0, 667.0], [33.1, 667.0], [33.2, 667.0], [33.3, 667.0], [33.4, 670.0], [33.5, 670.0], [33.6, 670.0], [33.7, 670.0], [33.8, 670.0], [33.9, 670.0], [34.0, 670.0], [34.1, 670.0], [34.2, 678.0], [34.3, 678.0], [34.4, 678.0], [34.5, 678.0], [34.6, 678.0], [34.7, 678.0], [34.8, 678.0], [34.9, 678.0], [35.0, 680.0], [35.1, 680.0], [35.2, 680.0], [35.3, 680.0], [35.4, 680.0], [35.5, 680.0], [35.6, 680.0], [35.7, 680.0], [35.8, 680.0], [35.9, 686.0], [36.0, 686.0], [36.1, 686.0], [36.2, 686.0], [36.3, 686.0], [36.4, 686.0], [36.5, 686.0], [36.6, 686.0], [36.7, 687.0], [36.8, 687.0], [36.9, 687.0], [37.0, 687.0], [37.1, 687.0], [37.2, 687.0], [37.3, 687.0], [37.4, 687.0], [37.5, 691.0], [37.6, 691.0], [37.7, 691.0], [37.8, 691.0], [37.9, 691.0], [38.0, 691.0], [38.1, 691.0], [38.2, 691.0], [38.3, 691.0], [38.4, 701.0], [38.5, 701.0], [38.6, 701.0], [38.7, 701.0], [38.8, 701.0], [38.9, 701.0], [39.0, 701.0], [39.1, 701.0], [39.2, 713.0], [39.3, 713.0], [39.4, 713.0], [39.5, 713.0], [39.6, 713.0], [39.7, 713.0], [39.8, 713.0], [39.9, 713.0], [40.0, 713.0], [40.1, 723.0], [40.2, 723.0], [40.3, 723.0], [40.4, 723.0], [40.5, 723.0], [40.6, 723.0], [40.7, 723.0], [40.8, 723.0], [40.9, 724.0], [41.0, 724.0], [41.1, 724.0], [41.2, 724.0], [41.3, 724.0], [41.4, 724.0], [41.5, 724.0], [41.6, 724.0], [41.7, 726.0], [41.8, 726.0], [41.9, 726.0], [42.0, 726.0], [42.1, 726.0], [42.2, 726.0], [42.3, 726.0], [42.4, 726.0], [42.5, 726.0], [42.6, 736.0], [42.7, 736.0], [42.8, 736.0], [42.9, 736.0], [43.0, 736.0], [43.1, 736.0], [43.2, 736.0], [43.3, 736.0], [43.4, 744.0], [43.5, 744.0], [43.6, 744.0], [43.7, 744.0], [43.8, 744.0], [43.9, 744.0], [44.0, 744.0], [44.1, 744.0], [44.2, 757.0], [44.3, 757.0], [44.4, 757.0], [44.5, 757.0], [44.6, 757.0], [44.7, 757.0], [44.8, 757.0], [44.9, 757.0], [45.0, 757.0], [45.1, 788.0], [45.2, 788.0], [45.3, 788.0], [45.4, 788.0], [45.5, 788.0], [45.6, 788.0], [45.7, 788.0], [45.8, 788.0], [45.9, 789.0], [46.0, 789.0], [46.1, 789.0], [46.2, 789.0], [46.3, 789.0], [46.4, 789.0], [46.5, 789.0], [46.6, 789.0], [46.7, 794.0], [46.8, 794.0], [46.9, 794.0], [47.0, 794.0], [47.1, 794.0], [47.2, 794.0], [47.3, 794.0], [47.4, 794.0], [47.5, 794.0], [47.6, 794.0], [47.7, 794.0], [47.8, 794.0], [47.9, 794.0], [48.0, 794.0], [48.1, 794.0], [48.2, 794.0], [48.3, 794.0], [48.4, 794.0], [48.5, 794.0], [48.6, 794.0], [48.7, 794.0], [48.8, 794.0], [48.9, 794.0], [49.0, 794.0], [49.1, 794.0], [49.2, 799.0], [49.3, 799.0], [49.4, 799.0], [49.5, 799.0], [49.6, 799.0], [49.7, 799.0], [49.8, 799.0], [49.9, 799.0], [50.0, 799.0], [50.1, 810.0], [50.2, 810.0], [50.3, 810.0], [50.4, 810.0], [50.5, 810.0], [50.6, 810.0], [50.7, 810.0], [50.8, 810.0], [50.9, 821.0], [51.0, 821.0], [51.1, 821.0], [51.2, 821.0], [51.3, 821.0], [51.4, 821.0], [51.5, 821.0], [51.6, 821.0], [51.7, 822.0], [51.8, 822.0], [51.9, 822.0], [52.0, 822.0], [52.1, 822.0], [52.2, 822.0], [52.3, 822.0], [52.4, 822.0], [52.5, 822.0], [52.6, 844.0], [52.7, 844.0], [52.8, 844.0], [52.9, 844.0], [53.0, 844.0], [53.1, 844.0], [53.2, 844.0], [53.3, 844.0], [53.4, 867.0], [53.5, 867.0], [53.6, 867.0], [53.7, 867.0], [53.8, 867.0], [53.9, 867.0], [54.0, 867.0], [54.1, 867.0], [54.2, 876.0], [54.3, 876.0], [54.4, 876.0], [54.5, 876.0], [54.6, 876.0], [54.7, 876.0], [54.8, 876.0], [54.9, 876.0], [55.0, 876.0], [55.1, 879.0], [55.2, 879.0], [55.3, 879.0], [55.4, 879.0], [55.5, 879.0], [55.6, 879.0], [55.7, 879.0], [55.8, 879.0], [55.9, 924.0], [56.0, 924.0], [56.1, 924.0], [56.2, 924.0], [56.3, 924.0], [56.4, 924.0], [56.5, 924.0], [56.6, 924.0], [56.7, 938.0], [56.8, 938.0], [56.9, 938.0], [57.0, 938.0], [57.1, 938.0], [57.2, 938.0], [57.3, 938.0], [57.4, 938.0], [57.5, 938.0], [57.6, 950.0], [57.7, 950.0], [57.8, 950.0], [57.9, 950.0], [58.0, 950.0], [58.1, 950.0], [58.2, 950.0], [58.3, 950.0], [58.4, 953.0], [58.5, 953.0], [58.6, 953.0], [58.7, 953.0], [58.8, 953.0], [58.9, 953.0], [59.0, 953.0], [59.1, 953.0], [59.2, 990.0], [59.3, 990.0], [59.4, 990.0], [59.5, 990.0], [59.6, 990.0], [59.7, 990.0], [59.8, 990.0], [59.9, 990.0], [60.0, 990.0], [60.1, 1003.0], [60.2, 1003.0], [60.3, 1003.0], [60.4, 1003.0], [60.5, 1003.0], [60.6, 1003.0], [60.7, 1003.0], [60.8, 1003.0], [60.9, 1088.0], [61.0, 1088.0], [61.1, 1088.0], [61.2, 1088.0], [61.3, 1088.0], [61.4, 1088.0], [61.5, 1088.0], [61.6, 1088.0], [61.7, 1090.0], [61.8, 1090.0], [61.9, 1090.0], [62.0, 1090.0], [62.1, 1090.0], [62.2, 1090.0], [62.3, 1090.0], [62.4, 1090.0], [62.5, 1090.0], [62.6, 1097.0], [62.7, 1097.0], [62.8, 1097.0], [62.9, 1097.0], [63.0, 1097.0], [63.1, 1097.0], [63.2, 1097.0], [63.3, 1097.0], [63.4, 1101.0], [63.5, 1101.0], [63.6, 1101.0], [63.7, 1101.0], [63.8, 1101.0], [63.9, 1101.0], [64.0, 1101.0], [64.1, 1101.0], [64.2, 1103.0], [64.3, 1103.0], [64.4, 1103.0], [64.5, 1103.0], [64.6, 1103.0], [64.7, 1103.0], [64.8, 1103.0], [64.9, 1103.0], [65.0, 1103.0], [65.1, 1142.0], [65.2, 1142.0], [65.3, 1142.0], [65.4, 1142.0], [65.5, 1142.0], [65.6, 1142.0], [65.7, 1142.0], [65.8, 1142.0], [65.9, 1165.0], [66.0, 1165.0], [66.1, 1165.0], [66.2, 1165.0], [66.3, 1165.0], [66.4, 1165.0], [66.5, 1165.0], [66.6, 1165.0], [66.7, 1193.0], [66.8, 1193.0], [66.9, 1193.0], [67.0, 1193.0], [67.1, 1193.0], [67.2, 1193.0], [67.3, 1193.0], [67.4, 1193.0], [67.5, 1193.0], [67.6, 1195.0], [67.7, 1195.0], [67.8, 1195.0], [67.9, 1195.0], [68.0, 1195.0], [68.1, 1195.0], [68.2, 1195.0], [68.3, 1195.0], [68.4, 1205.0], [68.5, 1205.0], [68.6, 1205.0], [68.7, 1205.0], [68.8, 1205.0], [68.9, 1205.0], [69.0, 1205.0], [69.1, 1205.0], [69.2, 1228.0], [69.3, 1228.0], [69.4, 1228.0], [69.5, 1228.0], [69.6, 1228.0], [69.7, 1228.0], [69.8, 1228.0], [69.9, 1228.0], [70.0, 1228.0], [70.1, 1230.0], [70.2, 1230.0], [70.3, 1230.0], [70.4, 1230.0], [70.5, 1230.0], [70.6, 1230.0], [70.7, 1230.0], [70.8, 1230.0], [70.9, 1235.0], [71.0, 1235.0], [71.1, 1235.0], [71.2, 1235.0], [71.3, 1235.0], [71.4, 1235.0], [71.5, 1235.0], [71.6, 1235.0], [71.7, 1249.0], [71.8, 1249.0], [71.9, 1249.0], [72.0, 1249.0], [72.1, 1249.0], [72.2, 1249.0], [72.3, 1249.0], [72.4, 1249.0], [72.5, 1249.0], [72.6, 1249.0], [72.7, 1249.0], [72.8, 1249.0], [72.9, 1249.0], [73.0, 1249.0], [73.1, 1249.0], [73.2, 1249.0], [73.3, 1249.0], [73.4, 1256.0], [73.5, 1256.0], [73.6, 1256.0], [73.7, 1256.0], [73.8, 1256.0], [73.9, 1256.0], [74.0, 1256.0], [74.1, 1256.0], [74.2, 1264.0], [74.3, 1264.0], [74.4, 1264.0], [74.5, 1264.0], [74.6, 1264.0], [74.7, 1264.0], [74.8, 1264.0], [74.9, 1264.0], [75.0, 1264.0], [75.1, 1383.0], [75.2, 1383.0], [75.3, 1383.0], [75.4, 1383.0], [75.5, 1383.0], [75.6, 1383.0], [75.7, 1383.0], [75.8, 1383.0], [75.9, 1409.0], [76.0, 1409.0], [76.1, 1409.0], [76.2, 1409.0], [76.3, 1409.0], [76.4, 1409.0], [76.5, 1409.0], [76.6, 1409.0], [76.7, 1476.0], [76.8, 1476.0], [76.9, 1476.0], [77.0, 1476.0], [77.1, 1476.0], [77.2, 1476.0], [77.3, 1476.0], [77.4, 1476.0], [77.5, 1476.0], [77.6, 1476.0], [77.7, 1476.0], [77.8, 1476.0], [77.9, 1476.0], [78.0, 1476.0], [78.1, 1476.0], [78.2, 1476.0], [78.3, 1476.0], [78.4, 1505.0], [78.5, 1505.0], [78.6, 1505.0], [78.7, 1505.0], [78.8, 1505.0], [78.9, 1505.0], [79.0, 1505.0], [79.1, 1505.0], [79.2, 1633.0], [79.3, 1633.0], [79.4, 1633.0], [79.5, 1633.0], [79.6, 1633.0], [79.7, 1633.0], [79.8, 1633.0], [79.9, 1633.0], [80.0, 1666.0], [80.1, 1666.0], [80.2, 1666.0], [80.3, 1666.0], [80.4, 1666.0], [80.5, 1666.0], [80.6, 1666.0], [80.7, 1666.0], [80.8, 1666.0], [80.9, 1805.0], [81.0, 1805.0], [81.1, 1805.0], [81.2, 1805.0], [81.3, 1805.0], [81.4, 1805.0], [81.5, 1805.0], [81.6, 1805.0], [81.7, 1832.0], [81.8, 1832.0], [81.9, 1832.0], [82.0, 1832.0], [82.1, 1832.0], [82.2, 1832.0], [82.3, 1832.0], [82.4, 1832.0], [82.5, 1933.0], [82.6, 1933.0], [82.7, 1933.0], [82.8, 1933.0], [82.9, 1933.0], [83.0, 1933.0], [83.1, 1933.0], [83.2, 1933.0], [83.3, 1933.0], [83.4, 2092.0], [83.5, 2092.0], [83.6, 2092.0], [83.7, 2092.0], [83.8, 2092.0], [83.9, 2092.0], [84.0, 2092.0], [84.1, 2092.0], [84.2, 2137.0], [84.3, 2137.0], [84.4, 2137.0], [84.5, 2137.0], [84.6, 2137.0], [84.7, 2137.0], [84.8, 2137.0], [84.9, 2137.0], [85.0, 2153.0], [85.1, 2153.0], [85.2, 2153.0], [85.3, 2153.0], [85.4, 2153.0], [85.5, 2153.0], [85.6, 2153.0], [85.7, 2153.0], [85.8, 2153.0], [85.9, 2196.0], [86.0, 2196.0], [86.1, 2196.0], [86.2, 2196.0], [86.3, 2196.0], [86.4, 2196.0], [86.5, 2196.0], [86.6, 2196.0], [86.7, 2276.0], [86.8, 2276.0], [86.9, 2276.0], [87.0, 2276.0], [87.1, 2276.0], [87.2, 2276.0], [87.3, 2276.0], [87.4, 2276.0], [87.5, 2338.0], [87.6, 2338.0], [87.7, 2338.0], [87.8, 2338.0], [87.9, 2338.0], [88.0, 2338.0], [88.1, 2338.0], [88.2, 2338.0], [88.3, 2338.0], [88.4, 2370.0], [88.5, 2370.0], [88.6, 2370.0], [88.7, 2370.0], [88.8, 2370.0], [88.9, 2370.0], [89.0, 2370.0], [89.1, 2370.0], [89.2, 2492.0], [89.3, 2492.0], [89.4, 2492.0], [89.5, 2492.0], [89.6, 2492.0], [89.7, 2492.0], [89.8, 2492.0], [89.9, 2492.0], [90.0, 2548.0], [90.1, 2548.0], [90.2, 2548.0], [90.3, 2548.0], [90.4, 2548.0], [90.5, 2548.0], [90.6, 2548.0], [90.7, 2548.0], [90.8, 2548.0], [90.9, 2565.0], [91.0, 2565.0], [91.1, 2565.0], [91.2, 2565.0], [91.3, 2565.0], [91.4, 2565.0], [91.5, 2565.0], [91.6, 2565.0], [91.7, 2593.0], [91.8, 2593.0], [91.9, 2593.0], [92.0, 2593.0], [92.1, 2593.0], [92.2, 2593.0], [92.3, 2593.0], [92.4, 2593.0], [92.5, 2593.0], [92.6, 2593.0], [92.7, 2593.0], [92.8, 2593.0], [92.9, 2593.0], [93.0, 2593.0], [93.1, 2593.0], [93.2, 2593.0], [93.3, 2593.0], [93.4, 2731.0], [93.5, 2731.0], [93.6, 2731.0], [93.7, 2731.0], [93.8, 2731.0], [93.9, 2731.0], [94.0, 2731.0], [94.1, 2731.0], [94.2, 2732.0], [94.3, 2732.0], [94.4, 2732.0], [94.5, 2732.0], [94.6, 2732.0], [94.7, 2732.0], [94.8, 2732.0], [94.9, 2732.0], [95.0, 2973.0], [95.1, 2973.0], [95.2, 2973.0], [95.3, 2973.0], [95.4, 2973.0], [95.5, 2973.0], [95.6, 2973.0], [95.7, 2973.0], [95.8, 2973.0], [95.9, 3093.0], [96.0, 3093.0], [96.1, 3093.0], [96.2, 3093.0], [96.3, 3093.0], [96.4, 3093.0], [96.5, 3093.0], [96.6, 3093.0], [96.7, 3116.0], [96.8, 3116.0], [96.9, 3116.0], [97.0, 3116.0], [97.1, 3116.0], [97.2, 3116.0], [97.3, 3116.0], [97.4, 3116.0], [97.5, 3247.0], [97.6, 3247.0], [97.7, 3247.0], [97.8, 3247.0], [97.9, 3247.0], [98.0, 3247.0], [98.1, 3247.0], [98.2, 3247.0], [98.3, 3247.0], [98.4, 3301.0], [98.5, 3301.0], [98.6, 3301.0], [98.7, 3301.0], [98.8, 3301.0], [98.9, 3301.0], [99.0, 3301.0], [99.1, 3301.0], [99.2, 33190.0], [99.3, 33190.0], [99.4, 33190.0], [99.5, 33190.0], [99.6, 33190.0], [99.7, 33190.0], [99.8, 33190.0], [99.9, 33190.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[0.0, 1794.0], [0.1, 1794.0], [0.2, 1794.0], [0.3, 1794.0], [0.4, 1794.0], [0.5, 1794.0], [0.6, 1794.0], [0.7, 1794.0], [0.8, 1794.0], [0.9, 1929.0], [1.0, 1929.0], [1.1, 1929.0], [1.2, 1929.0], [1.3, 1929.0], [1.4, 1929.0], [1.5, 1929.0], [1.6, 1929.0], [1.7, 2213.0], [1.8, 2213.0], [1.9, 2213.0], [2.0, 2213.0], [2.1, 2213.0], [2.2, 2213.0], [2.3, 2213.0], [2.4, 2213.0], [2.5, 2361.0], [2.6, 2361.0], [2.7, 2361.0], [2.8, 2361.0], [2.9, 2361.0], [3.0, 2361.0], [3.1, 2361.0], [3.2, 2361.0], [3.3, 2361.0], [3.4, 2630.0], [3.5, 2630.0], [3.6, 2630.0], [3.7, 2630.0], [3.8, 2630.0], [3.9, 2630.0], [4.0, 2630.0], [4.1, 2630.0], [4.2, 2718.0], [4.3, 2718.0], [4.4, 2718.0], [4.5, 2718.0], [4.6, 2718.0], [4.7, 2718.0], [4.8, 2718.0], [4.9, 2718.0], [5.0, 2847.0], [5.1, 2847.0], [5.2, 2847.0], [5.3, 2847.0], [5.4, 2847.0], [5.5, 2847.0], [5.6, 2847.0], [5.7, 2847.0], [5.8, 2847.0], [5.9, 3044.0], [6.0, 3044.0], [6.1, 3044.0], [6.2, 3044.0], [6.3, 3044.0], [6.4, 3044.0], [6.5, 3044.0], [6.6, 3044.0], [6.7, 3158.0], [6.8, 3158.0], [6.9, 3158.0], [7.0, 3158.0], [7.1, 3158.0], [7.2, 3158.0], [7.3, 3158.0], [7.4, 3158.0], [7.5, 3233.0], [7.6, 3233.0], [7.7, 3233.0], [7.8, 3233.0], [7.9, 3233.0], [8.0, 3233.0], [8.1, 3233.0], [8.2, 3233.0], [8.3, 3233.0], [8.4, 3253.0], [8.5, 3253.0], [8.6, 3253.0], [8.7, 3253.0], [8.8, 3253.0], [8.9, 3253.0], [9.0, 3253.0], [9.1, 3253.0], [9.2, 3595.0], [9.3, 3595.0], [9.4, 3595.0], [9.5, 3595.0], [9.6, 3595.0], [9.7, 3595.0], [9.8, 3595.0], [9.9, 3595.0], [10.0, 3700.0], [10.1, 3700.0], [10.2, 3700.0], [10.3, 3700.0], [10.4, 3700.0], [10.5, 3700.0], [10.6, 3700.0], [10.7, 3700.0], [10.8, 3700.0], [10.9, 3723.0], [11.0, 3723.0], [11.1, 3723.0], [11.2, 3723.0], [11.3, 3723.0], [11.4, 3723.0], [11.5, 3723.0], [11.6, 3723.0], [11.7, 3898.0], [11.8, 3898.0], [11.9, 3898.0], [12.0, 3898.0], [12.1, 3898.0], [12.2, 3898.0], [12.3, 3898.0], [12.4, 3898.0], [12.5, 3898.0], [12.6, 4014.0], [12.7, 4014.0], [12.8, 4014.0], [12.9, 4014.0], [13.0, 4014.0], [13.1, 4014.0], [13.2, 4014.0], [13.3, 4014.0], [13.4, 4050.0], [13.5, 4050.0], [13.6, 4050.0], [13.7, 4050.0], [13.8, 4050.0], [13.9, 4050.0], [14.0, 4050.0], [14.1, 4050.0], [14.2, 4060.0], [14.3, 4060.0], [14.4, 4060.0], [14.5, 4060.0], [14.6, 4060.0], [14.7, 4060.0], [14.8, 4060.0], [14.9, 4060.0], [15.0, 4060.0], [15.1, 4102.0], [15.2, 4102.0], [15.3, 4102.0], [15.4, 4102.0], [15.5, 4102.0], [15.6, 4102.0], [15.7, 4102.0], [15.8, 4102.0], [15.9, 4197.0], [16.0, 4197.0], [16.1, 4197.0], [16.2, 4197.0], [16.3, 4197.0], [16.4, 4197.0], [16.5, 4197.0], [16.6, 4197.0], [16.7, 4199.0], [16.8, 4199.0], [16.9, 4199.0], [17.0, 4199.0], [17.1, 4199.0], [17.2, 4199.0], [17.3, 4199.0], [17.4, 4199.0], [17.5, 4199.0], [17.6, 4451.0], [17.7, 4451.0], [17.8, 4451.0], [17.9, 4451.0], [18.0, 4451.0], [18.1, 4451.0], [18.2, 4451.0], [18.3, 4451.0], [18.4, 4558.0], [18.5, 4558.0], [18.6, 4558.0], [18.7, 4558.0], [18.8, 4558.0], [18.9, 4558.0], [19.0, 4558.0], [19.1, 4558.0], [19.2, 4564.0], [19.3, 4564.0], [19.4, 4564.0], [19.5, 4564.0], [19.6, 4564.0], [19.7, 4564.0], [19.8, 4564.0], [19.9, 4564.0], [20.0, 4756.0], [20.1, 4756.0], [20.2, 4756.0], [20.3, 4756.0], [20.4, 4756.0], [20.5, 4756.0], [20.6, 4756.0], [20.7, 4756.0], [20.8, 4756.0], [20.9, 4798.0], [21.0, 4798.0], [21.1, 4798.0], [21.2, 4798.0], [21.3, 4798.0], [21.4, 4798.0], [21.5, 4798.0], [21.6, 4798.0], [21.7, 4976.0], [21.8, 4976.0], [21.9, 4976.0], [22.0, 4976.0], [22.1, 4976.0], [22.2, 4976.0], [22.3, 4976.0], [22.4, 4976.0], [22.5, 4993.0], [22.6, 4993.0], [22.7, 4993.0], [22.8, 4993.0], [22.9, 4993.0], [23.0, 4993.0], [23.1, 4993.0], [23.2, 4993.0], [23.3, 4993.0], [23.4, 5015.0], [23.5, 5015.0], [23.6, 5015.0], [23.7, 5015.0], [23.8, 5015.0], [23.9, 5015.0], [24.0, 5015.0], [24.1, 5015.0], [24.2, 5299.0], [24.3, 5299.0], [24.4, 5299.0], [24.5, 5299.0], [24.6, 5299.0], [24.7, 5299.0], [24.8, 5299.0], [24.9, 5299.0], [25.0, 5446.0], [25.1, 5446.0], [25.2, 5446.0], [25.3, 5446.0], [25.4, 5446.0], [25.5, 5446.0], [25.6, 5446.0], [25.7, 5446.0], [25.8, 5446.0], [25.9, 5511.0], [26.0, 5511.0], [26.1, 5511.0], [26.2, 5511.0], [26.3, 5511.0], [26.4, 5511.0], [26.5, 5511.0], [26.6, 5511.0], [26.7, 5533.0], [26.8, 5533.0], [26.9, 5533.0], [27.0, 5533.0], [27.1, 5533.0], [27.2, 5533.0], [27.3, 5533.0], [27.4, 5533.0], [27.5, 5600.0], [27.6, 5600.0], [27.7, 5600.0], [27.8, 5600.0], [27.9, 5600.0], [28.0, 5600.0], [28.1, 5600.0], [28.2, 5600.0], [28.3, 5600.0], [28.4, 5627.0], [28.5, 5627.0], [28.6, 5627.0], [28.7, 5627.0], [28.8, 5627.0], [28.9, 5627.0], [29.0, 5627.0], [29.1, 5627.0], [29.2, 5651.0], [29.3, 5651.0], [29.4, 5651.0], [29.5, 5651.0], [29.6, 5651.0], [29.7, 5651.0], [29.8, 5651.0], [29.9, 5651.0], [30.0, 5751.0], [30.1, 5751.0], [30.2, 5751.0], [30.3, 5751.0], [30.4, 5751.0], [30.5, 5751.0], [30.6, 5751.0], [30.7, 5751.0], [30.8, 5751.0], [30.9, 5773.0], [31.0, 5773.0], [31.1, 5773.0], [31.2, 5773.0], [31.3, 5773.0], [31.4, 5773.0], [31.5, 5773.0], [31.6, 5773.0], [31.7, 5837.0], [31.8, 5837.0], [31.9, 5837.0], [32.0, 5837.0], [32.1, 5837.0], [32.2, 5837.0], [32.3, 5837.0], [32.4, 5837.0], [32.5, 5976.0], [32.6, 5976.0], [32.7, 5976.0], [32.8, 5976.0], [32.9, 5976.0], [33.0, 5976.0], [33.1, 5976.0], [33.2, 5976.0], [33.3, 5976.0], [33.4, 6005.0], [33.5, 6005.0], [33.6, 6005.0], [33.7, 6005.0], [33.8, 6005.0], [33.9, 6005.0], [34.0, 6005.0], [34.1, 6005.0], [34.2, 6108.0], [34.3, 6108.0], [34.4, 6108.0], [34.5, 6108.0], [34.6, 6108.0], [34.7, 6108.0], [34.8, 6108.0], [34.9, 6108.0], [35.0, 6249.0], [35.1, 6249.0], [35.2, 6249.0], [35.3, 6249.0], [35.4, 6249.0], [35.5, 6249.0], [35.6, 6249.0], [35.7, 6249.0], [35.8, 6249.0], [35.9, 6315.0], [36.0, 6315.0], [36.1, 6315.0], [36.2, 6315.0], [36.3, 6315.0], [36.4, 6315.0], [36.5, 6315.0], [36.6, 6315.0], [36.7, 6337.0], [36.8, 6337.0], [36.9, 6337.0], [37.0, 6337.0], [37.1, 6337.0], [37.2, 6337.0], [37.3, 6337.0], [37.4, 6337.0], [37.5, 6453.0], [37.6, 6453.0], [37.7, 6453.0], [37.8, 6453.0], [37.9, 6453.0], [38.0, 6453.0], [38.1, 6453.0], [38.2, 6453.0], [38.3, 6453.0], [38.4, 6471.0], [38.5, 6471.0], [38.6, 6471.0], [38.7, 6471.0], [38.8, 6471.0], [38.9, 6471.0], [39.0, 6471.0], [39.1, 6471.0], [39.2, 6489.0], [39.3, 6489.0], [39.4, 6489.0], [39.5, 6489.0], [39.6, 6489.0], [39.7, 6489.0], [39.8, 6489.0], [39.9, 6489.0], [40.0, 6489.0], [40.1, 6684.0], [40.2, 6684.0], [40.3, 6684.0], [40.4, 6684.0], [40.5, 6684.0], [40.6, 6684.0], [40.7, 6684.0], [40.8, 6684.0], [40.9, 6740.0], [41.0, 6740.0], [41.1, 6740.0], [41.2, 6740.0], [41.3, 6740.0], [41.4, 6740.0], [41.5, 6740.0], [41.6, 6740.0], [41.7, 6854.0], [41.8, 6854.0], [41.9, 6854.0], [42.0, 6854.0], [42.1, 6854.0], [42.2, 6854.0], [42.3, 6854.0], [42.4, 6854.0], [42.5, 6854.0], [42.6, 7049.0], [42.7, 7049.0], [42.8, 7049.0], [42.9, 7049.0], [43.0, 7049.0], [43.1, 7049.0], [43.2, 7049.0], [43.3, 7049.0], [43.4, 7277.0], [43.5, 7277.0], [43.6, 7277.0], [43.7, 7277.0], [43.8, 7277.0], [43.9, 7277.0], [44.0, 7277.0], [44.1, 7277.0], [44.2, 7311.0], [44.3, 7311.0], [44.4, 7311.0], [44.5, 7311.0], [44.6, 7311.0], [44.7, 7311.0], [44.8, 7311.0], [44.9, 7311.0], [45.0, 7311.0], [45.1, 7488.0], [45.2, 7488.0], [45.3, 7488.0], [45.4, 7488.0], [45.5, 7488.0], [45.6, 7488.0], [45.7, 7488.0], [45.8, 7488.0], [45.9, 7575.0], [46.0, 7575.0], [46.1, 7575.0], [46.2, 7575.0], [46.3, 7575.0], [46.4, 7575.0], [46.5, 7575.0], [46.6, 7575.0], [46.7, 7628.0], [46.8, 7628.0], [46.9, 7628.0], [47.0, 7628.0], [47.1, 7628.0], [47.2, 7628.0], [47.3, 7628.0], [47.4, 7628.0], [47.5, 7628.0], [47.6, 7710.0], [47.7, 7710.0], [47.8, 7710.0], [47.9, 7710.0], [48.0, 7710.0], [48.1, 7710.0], [48.2, 7710.0], [48.3, 7710.0], [48.4, 7899.0], [48.5, 7899.0], [48.6, 7899.0], [48.7, 7899.0], [48.8, 7899.0], [48.9, 7899.0], [49.0, 7899.0], [49.1, 7899.0], [49.2, 7935.0], [49.3, 7935.0], [49.4, 7935.0], [49.5, 7935.0], [49.6, 7935.0], [49.7, 7935.0], [49.8, 7935.0], [49.9, 7935.0], [50.0, 7935.0], [50.1, 7985.0], [50.2, 7985.0], [50.3, 7985.0], [50.4, 7985.0], [50.5, 7985.0], [50.6, 7985.0], [50.7, 7985.0], [50.8, 7985.0], [50.9, 8034.0], [51.0, 8034.0], [51.1, 8034.0], [51.2, 8034.0], [51.3, 8034.0], [51.4, 8034.0], [51.5, 8034.0], [51.6, 8034.0], [51.7, 8056.0], [51.8, 8056.0], [51.9, 8056.0], [52.0, 8056.0], [52.1, 8056.0], [52.2, 8056.0], [52.3, 8056.0], [52.4, 8056.0], [52.5, 8056.0], [52.6, 8066.0], [52.7, 8066.0], [52.8, 8066.0], [52.9, 8066.0], [53.0, 8066.0], [53.1, 8066.0], [53.2, 8066.0], [53.3, 8066.0], [53.4, 8123.0], [53.5, 8123.0], [53.6, 8123.0], [53.7, 8123.0], [53.8, 8123.0], [53.9, 8123.0], [54.0, 8123.0], [54.1, 8123.0], [54.2, 8145.0], [54.3, 8145.0], [54.4, 8145.0], [54.5, 8145.0], [54.6, 8145.0], [54.7, 8145.0], [54.8, 8145.0], [54.9, 8145.0], [55.0, 8145.0], [55.1, 8342.0], [55.2, 8342.0], [55.3, 8342.0], [55.4, 8342.0], [55.5, 8342.0], [55.6, 8342.0], [55.7, 8342.0], [55.8, 8342.0], [55.9, 8357.0], [56.0, 8357.0], [56.1, 8357.0], [56.2, 8357.0], [56.3, 8357.0], [56.4, 8357.0], [56.5, 8357.0], [56.6, 8357.0], [56.7, 8627.0], [56.8, 8627.0], [56.9, 8627.0], [57.0, 8627.0], [57.1, 8627.0], [57.2, 8627.0], [57.3, 8627.0], [57.4, 8627.0], [57.5, 8627.0], [57.6, 8692.0], [57.7, 8692.0], [57.8, 8692.0], [57.9, 8692.0], [58.0, 8692.0], [58.1, 8692.0], [58.2, 8692.0], [58.3, 8692.0], [58.4, 8752.0], [58.5, 8752.0], [58.6, 8752.0], [58.7, 8752.0], [58.8, 8752.0], [58.9, 8752.0], [59.0, 8752.0], [59.1, 8752.0], [59.2, 8857.0], [59.3, 8857.0], [59.4, 8857.0], [59.5, 8857.0], [59.6, 8857.0], [59.7, 8857.0], [59.8, 8857.0], [59.9, 8857.0], [60.0, 8857.0], [60.1, 8870.0], [60.2, 8870.0], [60.3, 8870.0], [60.4, 8870.0], [60.5, 8870.0], [60.6, 8870.0], [60.7, 8870.0], [60.8, 8870.0], [60.9, 8890.0], [61.0, 8890.0], [61.1, 8890.0], [61.2, 8890.0], [61.3, 8890.0], [61.4, 8890.0], [61.5, 8890.0], [61.6, 8890.0], [61.7, 8916.0], [61.8, 8916.0], [61.9, 8916.0], [62.0, 8916.0], [62.1, 8916.0], [62.2, 8916.0], [62.3, 8916.0], [62.4, 8916.0], [62.5, 8916.0], [62.6, 9109.0], [62.7, 9109.0], [62.8, 9109.0], [62.9, 9109.0], [63.0, 9109.0], [63.1, 9109.0], [63.2, 9109.0], [63.3, 9109.0], [63.4, 9252.0], [63.5, 9252.0], [63.6, 9252.0], [63.7, 9252.0], [63.8, 9252.0], [63.9, 9252.0], [64.0, 9252.0], [64.1, 9252.0], [64.2, 9338.0], [64.3, 9338.0], [64.4, 9338.0], [64.5, 9338.0], [64.6, 9338.0], [64.7, 9338.0], [64.8, 9338.0], [64.9, 9338.0], [65.0, 9338.0], [65.1, 9379.0], [65.2, 9379.0], [65.3, 9379.0], [65.4, 9379.0], [65.5, 9379.0], [65.6, 9379.0], [65.7, 9379.0], [65.8, 9379.0], [65.9, 9435.0], [66.0, 9435.0], [66.1, 9435.0], [66.2, 9435.0], [66.3, 9435.0], [66.4, 9435.0], [66.5, 9435.0], [66.6, 9435.0], [66.7, 9571.0], [66.8, 9571.0], [66.9, 9571.0], [67.0, 9571.0], [67.1, 9571.0], [67.2, 9571.0], [67.3, 9571.0], [67.4, 9571.0], [67.5, 9571.0], [67.6, 9643.0], [67.7, 9643.0], [67.8, 9643.0], [67.9, 9643.0], [68.0, 9643.0], [68.1, 9643.0], [68.2, 9643.0], [68.3, 9643.0], [68.4, 9715.0], [68.5, 9715.0], [68.6, 9715.0], [68.7, 9715.0], [68.8, 9715.0], [68.9, 9715.0], [69.0, 9715.0], [69.1, 9715.0], [69.2, 9939.0], [69.3, 9939.0], [69.4, 9939.0], [69.5, 9939.0], [69.6, 9939.0], [69.7, 9939.0], [69.8, 9939.0], [69.9, 9939.0], [70.0, 9939.0], [70.1, 9997.0], [70.2, 9997.0], [70.3, 9997.0], [70.4, 9997.0], [70.5, 9997.0], [70.6, 9997.0], [70.7, 9997.0], [70.8, 9997.0], [70.9, 10080.0], [71.0, 10080.0], [71.1, 10080.0], [71.2, 10080.0], [71.3, 10080.0], [71.4, 10080.0], [71.5, 10080.0], [71.6, 10080.0], [71.7, 10170.0], [71.8, 10170.0], [71.9, 10170.0], [72.0, 10170.0], [72.1, 10170.0], [72.2, 10170.0], [72.3, 10170.0], [72.4, 10170.0], [72.5, 10170.0], [72.6, 10182.0], [72.7, 10182.0], [72.8, 10182.0], [72.9, 10182.0], [73.0, 10182.0], [73.1, 10182.0], [73.2, 10182.0], [73.3, 10182.0], [73.4, 10195.0], [73.5, 10195.0], [73.6, 10195.0], [73.7, 10195.0], [73.8, 10195.0], [73.9, 10195.0], [74.0, 10195.0], [74.1, 10195.0], [74.2, 10210.0], [74.3, 10210.0], [74.4, 10210.0], [74.5, 10210.0], [74.6, 10210.0], [74.7, 10210.0], [74.8, 10210.0], [74.9, 10210.0], [75.0, 10210.0], [75.1, 10343.0], [75.2, 10343.0], [75.3, 10343.0], [75.4, 10343.0], [75.5, 10343.0], [75.6, 10343.0], [75.7, 10343.0], [75.8, 10343.0], [75.9, 10365.0], [76.0, 10365.0], [76.1, 10365.0], [76.2, 10365.0], [76.3, 10365.0], [76.4, 10365.0], [76.5, 10365.0], [76.6, 10365.0], [76.7, 10503.0], [76.8, 10503.0], [76.9, 10503.0], [77.0, 10503.0], [77.1, 10503.0], [77.2, 10503.0], [77.3, 10503.0], [77.4, 10503.0], [77.5, 10549.0], [77.6, 10549.0], [77.7, 10549.0], [77.8, 10549.0], [77.9, 10549.0], [78.0, 10549.0], [78.1, 10549.0], [78.2, 10549.0], [78.3, 10549.0], [78.4, 10645.0], [78.5, 10645.0], [78.6, 10645.0], [78.7, 10645.0], [78.8, 10645.0], [78.9, 10645.0], [79.0, 10645.0], [79.1, 10645.0], [79.2, 10706.0], [79.3, 10706.0], [79.4, 10706.0], [79.5, 10706.0], [79.6, 10706.0], [79.7, 10706.0], [79.8, 10706.0], [79.9, 10706.0], [80.0, 10707.0], [80.1, 10707.0], [80.2, 10707.0], [80.3, 10707.0], [80.4, 10707.0], [80.5, 10707.0], [80.6, 10707.0], [80.7, 10707.0], [80.8, 10707.0], [80.9, 11010.0], [81.0, 11010.0], [81.1, 11010.0], [81.2, 11010.0], [81.3, 11010.0], [81.4, 11010.0], [81.5, 11010.0], [81.6, 11010.0], [81.7, 11113.0], [81.8, 11113.0], [81.9, 11113.0], [82.0, 11113.0], [82.1, 11113.0], [82.2, 11113.0], [82.3, 11113.0], [82.4, 11113.0], [82.5, 11592.0], [82.6, 11592.0], [82.7, 11592.0], [82.8, 11592.0], [82.9, 11592.0], [83.0, 11592.0], [83.1, 11592.0], [83.2, 11592.0], [83.3, 11592.0], [83.4, 12020.0], [83.5, 12020.0], [83.6, 12020.0], [83.7, 12020.0], [83.8, 12020.0], [83.9, 12020.0], [84.0, 12020.0], [84.1, 12020.0], [84.2, 12185.0], [84.3, 12185.0], [84.4, 12185.0], [84.5, 12185.0], [84.6, 12185.0], [84.7, 12185.0], [84.8, 12185.0], [84.9, 12185.0], [85.0, 12191.0], [85.1, 12191.0], [85.2, 12191.0], [85.3, 12191.0], [85.4, 12191.0], [85.5, 12191.0], [85.6, 12191.0], [85.7, 12191.0], [85.8, 12191.0], [85.9, 12347.0], [86.0, 12347.0], [86.1, 12347.0], [86.2, 12347.0], [86.3, 12347.0], [86.4, 12347.0], [86.5, 12347.0], [86.6, 12347.0], [86.7, 12560.0], [86.8, 12560.0], [86.9, 12560.0], [87.0, 12560.0], [87.1, 12560.0], [87.2, 12560.0], [87.3, 12560.0], [87.4, 12560.0], [87.5, 12750.0], [87.6, 12750.0], [87.7, 12750.0], [87.8, 12750.0], [87.9, 12750.0], [88.0, 12750.0], [88.1, 12750.0], [88.2, 12750.0], [88.3, 12750.0], [88.4, 12996.0], [88.5, 12996.0], [88.6, 12996.0], [88.7, 12996.0], [88.8, 12996.0], [88.9, 12996.0], [89.0, 12996.0], [89.1, 12996.0], [89.2, 14823.0], [89.3, 14823.0], [89.4, 14823.0], [89.5, 14823.0], [89.6, 14823.0], [89.7, 14823.0], [89.8, 14823.0], [89.9, 14823.0], [90.0, 14852.0], [90.1, 14852.0], [90.2, 14852.0], [90.3, 14852.0], [90.4, 14852.0], [90.5, 14852.0], [90.6, 14852.0], [90.7, 14852.0], [90.8, 14852.0], [90.9, 15494.0], [91.0, 15494.0], [91.1, 15494.0], [91.2, 15494.0], [91.3, 15494.0], [91.4, 15494.0], [91.5, 15494.0], [91.6, 15494.0], [91.7, 15839.0], [91.8, 15839.0], [91.9, 15839.0], [92.0, 15839.0], [92.1, 15839.0], [92.2, 15839.0], [92.3, 15839.0], [92.4, 15839.0], [92.5, 18211.0], [92.6, 18211.0], [92.7, 18211.0], [92.8, 18211.0], [92.9, 18211.0], [93.0, 18211.0], [93.1, 18211.0], [93.2, 18211.0], [93.3, 18211.0], [93.4, 18747.0], [93.5, 18747.0], [93.6, 18747.0], [93.7, 18747.0], [93.8, 18747.0], [93.9, 18747.0], [94.0, 18747.0], [94.1, 18747.0], [94.2, 21371.0], [94.3, 21371.0], [94.4, 21371.0], [94.5, 21371.0], [94.6, 21371.0], [94.7, 21371.0], [94.8, 21371.0], [94.9, 21371.0], [95.0, 22469.0], [95.1, 22469.0], [95.2, 22469.0], [95.3, 22469.0], [95.4, 22469.0], [95.5, 22469.0], [95.6, 22469.0], [95.7, 22469.0], [95.8, 22469.0], [95.9, 28605.0], [96.0, 28605.0], [96.1, 28605.0], [96.2, 28605.0], [96.3, 28605.0], [96.4, 28605.0], [96.5, 28605.0], [96.6, 28605.0], [96.7, 29313.0], [96.8, 29313.0], [96.9, 29313.0], [97.0, 29313.0], [97.1, 29313.0], [97.2, 29313.0], [97.3, 29313.0], [97.4, 29313.0], [97.5, 33207.0], [97.6, 33207.0], [97.7, 33207.0], [97.8, 33207.0], [97.9, 33207.0], [98.0, 33207.0], [98.1, 33207.0], [98.2, 33207.0], [98.3, 33207.0], [98.4, 42746.0], [98.5, 42746.0], [98.6, 42746.0], [98.7, 42746.0], [98.8, 42746.0], [98.9, 42746.0], [99.0, 42746.0], [99.1, 42746.0], [99.2, 55296.0], [99.3, 55296.0], [99.4, 55296.0], [99.5, 55296.0], [99.6, 55296.0], [99.7, 55296.0], [99.8, 55296.0], [99.9, 55296.0]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[0.0, 455.0], [0.1, 455.0], [0.2, 455.0], [0.3, 455.0], [0.4, 455.0], [0.5, 455.0], [0.6, 455.0], [0.7, 455.0], [0.8, 455.0], [0.9, 460.0], [1.0, 460.0], [1.1, 460.0], [1.2, 460.0], [1.3, 460.0], [1.4, 460.0], [1.5, 460.0], [1.6, 460.0], [1.7, 466.0], [1.8, 466.0], [1.9, 466.0], [2.0, 466.0], [2.1, 466.0], [2.2, 466.0], [2.3, 466.0], [2.4, 466.0], [2.5, 473.0], [2.6, 473.0], [2.7, 473.0], [2.8, 473.0], [2.9, 473.0], [3.0, 473.0], [3.1, 473.0], [3.2, 473.0], [3.3, 473.0], [3.4, 473.0], [3.5, 473.0], [3.6, 473.0], [3.7, 473.0], [3.8, 473.0], [3.9, 473.0], [4.0, 473.0], [4.1, 473.0], [4.2, 475.0], [4.3, 475.0], [4.4, 475.0], [4.5, 475.0], [4.6, 475.0], [4.7, 475.0], [4.8, 475.0], [4.9, 475.0], [5.0, 475.0], [5.1, 475.0], [5.2, 475.0], [5.3, 475.0], [5.4, 475.0], [5.5, 475.0], [5.6, 475.0], [5.7, 475.0], [5.8, 475.0], [5.9, 483.0], [6.0, 483.0], [6.1, 483.0], [6.2, 483.0], [6.3, 483.0], [6.4, 483.0], [6.5, 483.0], [6.6, 483.0], [6.7, 485.0], [6.8, 485.0], [6.9, 485.0], [7.0, 485.0], [7.1, 485.0], [7.2, 485.0], [7.3, 485.0], [7.4, 485.0], [7.5, 492.0], [7.6, 492.0], [7.7, 492.0], [7.8, 492.0], [7.9, 492.0], [8.0, 492.0], [8.1, 492.0], [8.2, 492.0], [8.3, 492.0], [8.4, 493.0], [8.5, 493.0], [8.6, 493.0], [8.7, 493.0], [8.8, 493.0], [8.9, 493.0], [9.0, 493.0], [9.1, 493.0], [9.2, 493.0], [9.3, 493.0], [9.4, 493.0], [9.5, 493.0], [9.6, 493.0], [9.7, 493.0], [9.8, 493.0], [9.9, 493.0], [10.0, 494.0], [10.1, 494.0], [10.2, 494.0], [10.3, 494.0], [10.4, 494.0], [10.5, 494.0], [10.6, 494.0], [10.7, 494.0], [10.8, 494.0], [10.9, 498.0], [11.0, 498.0], [11.1, 498.0], [11.2, 498.0], [11.3, 498.0], [11.4, 498.0], [11.5, 498.0], [11.6, 498.0], [11.7, 500.0], [11.8, 500.0], [11.9, 500.0], [12.0, 500.0], [12.1, 500.0], [12.2, 500.0], [12.3, 500.0], [12.4, 500.0], [12.5, 500.0], [12.6, 500.0], [12.7, 500.0], [12.8, 500.0], [12.9, 500.0], [13.0, 500.0], [13.1, 500.0], [13.2, 500.0], [13.3, 500.0], [13.4, 500.0], [13.5, 500.0], [13.6, 500.0], [13.7, 500.0], [13.8, 500.0], [13.9, 500.0], [14.0, 500.0], [14.1, 500.0], [14.2, 501.0], [14.3, 501.0], [14.4, 501.0], [14.5, 501.0], [14.6, 501.0], [14.7, 501.0], [14.8, 501.0], [14.9, 501.0], [15.0, 501.0], [15.1, 501.0], [15.2, 501.0], [15.3, 501.0], [15.4, 501.0], [15.5, 501.0], [15.6, 501.0], [15.7, 501.0], [15.8, 501.0], [15.9, 509.0], [16.0, 509.0], [16.1, 509.0], [16.2, 509.0], [16.3, 509.0], [16.4, 509.0], [16.5, 509.0], [16.6, 509.0], [16.7, 514.0], [16.8, 514.0], [16.9, 514.0], [17.0, 514.0], [17.1, 514.0], [17.2, 514.0], [17.3, 514.0], [17.4, 514.0], [17.5, 530.0], [17.6, 530.0], [17.7, 530.0], [17.8, 530.0], [17.9, 530.0], [18.0, 530.0], [18.1, 530.0], [18.2, 530.0], [18.3, 530.0], [18.4, 534.0], [18.5, 534.0], [18.6, 534.0], [18.7, 534.0], [18.8, 534.0], [18.9, 534.0], [19.0, 534.0], [19.1, 534.0], [19.2, 544.0], [19.3, 544.0], [19.4, 544.0], [19.5, 544.0], [19.6, 544.0], [19.7, 544.0], [19.8, 544.0], [19.9, 544.0], [20.0, 550.0], [20.1, 550.0], [20.2, 550.0], [20.3, 550.0], [20.4, 550.0], [20.5, 550.0], [20.6, 550.0], [20.7, 550.0], [20.8, 550.0], [20.9, 552.0], [21.0, 552.0], [21.1, 552.0], [21.2, 552.0], [21.3, 552.0], [21.4, 552.0], [21.5, 552.0], [21.6, 552.0], [21.7, 577.0], [21.8, 577.0], [21.9, 577.0], [22.0, 577.0], [22.1, 577.0], [22.2, 577.0], [22.3, 577.0], [22.4, 577.0], [22.5, 585.0], [22.6, 585.0], [22.7, 585.0], [22.8, 585.0], [22.9, 585.0], [23.0, 585.0], [23.1, 585.0], [23.2, 585.0], [23.3, 585.0], [23.4, 585.0], [23.5, 585.0], [23.6, 585.0], [23.7, 585.0], [23.8, 585.0], [23.9, 585.0], [24.0, 585.0], [24.1, 585.0], [24.2, 592.0], [24.3, 592.0], [24.4, 592.0], [24.5, 592.0], [24.6, 592.0], [24.7, 592.0], [24.8, 592.0], [24.9, 592.0], [25.0, 593.0], [25.1, 593.0], [25.2, 593.0], [25.3, 593.0], [25.4, 593.0], [25.5, 593.0], [25.6, 593.0], [25.7, 593.0], [25.8, 593.0], [25.9, 594.0], [26.0, 594.0], [26.1, 594.0], [26.2, 594.0], [26.3, 594.0], [26.4, 594.0], [26.5, 594.0], [26.6, 594.0], [26.7, 600.0], [26.8, 600.0], [26.9, 600.0], [27.0, 600.0], [27.1, 600.0], [27.2, 600.0], [27.3, 600.0], [27.4, 600.0], [27.5, 604.0], [27.6, 604.0], [27.7, 604.0], [27.8, 604.0], [27.9, 604.0], [28.0, 604.0], [28.1, 604.0], [28.2, 604.0], [28.3, 604.0], [28.4, 621.0], [28.5, 621.0], [28.6, 621.0], [28.7, 621.0], [28.8, 621.0], [28.9, 621.0], [29.0, 621.0], [29.1, 621.0], [29.2, 635.0], [29.3, 635.0], [29.4, 635.0], [29.5, 635.0], [29.6, 635.0], [29.7, 635.0], [29.8, 635.0], [29.9, 635.0], [30.0, 639.0], [30.1, 639.0], [30.2, 639.0], [30.3, 639.0], [30.4, 639.0], [30.5, 639.0], [30.6, 639.0], [30.7, 639.0], [30.8, 639.0], [30.9, 646.0], [31.0, 646.0], [31.1, 646.0], [31.2, 646.0], [31.3, 646.0], [31.4, 646.0], [31.5, 646.0], [31.6, 646.0], [31.7, 653.0], [31.8, 653.0], [31.9, 653.0], [32.0, 653.0], [32.1, 653.0], [32.2, 653.0], [32.3, 653.0], [32.4, 653.0], [32.5, 667.0], [32.6, 667.0], [32.7, 667.0], [32.8, 667.0], [32.9, 667.0], [33.0, 667.0], [33.1, 667.0], [33.2, 667.0], [33.3, 667.0], [33.4, 670.0], [33.5, 670.0], [33.6, 670.0], [33.7, 670.0], [33.8, 670.0], [33.9, 670.0], [34.0, 670.0], [34.1, 670.0], [34.2, 678.0], [34.3, 678.0], [34.4, 678.0], [34.5, 678.0], [34.6, 678.0], [34.7, 678.0], [34.8, 678.0], [34.9, 678.0], [35.0, 680.0], [35.1, 680.0], [35.2, 680.0], [35.3, 680.0], [35.4, 680.0], [35.5, 680.0], [35.6, 680.0], [35.7, 680.0], [35.8, 680.0], [35.9, 686.0], [36.0, 686.0], [36.1, 686.0], [36.2, 686.0], [36.3, 686.0], [36.4, 686.0], [36.5, 686.0], [36.6, 686.0], [36.7, 687.0], [36.8, 687.0], [36.9, 687.0], [37.0, 687.0], [37.1, 687.0], [37.2, 687.0], [37.3, 687.0], [37.4, 687.0], [37.5, 691.0], [37.6, 691.0], [37.7, 691.0], [37.8, 691.0], [37.9, 691.0], [38.0, 691.0], [38.1, 691.0], [38.2, 691.0], [38.3, 691.0], [38.4, 701.0], [38.5, 701.0], [38.6, 701.0], [38.7, 701.0], [38.8, 701.0], [38.9, 701.0], [39.0, 701.0], [39.1, 701.0], [39.2, 713.0], [39.3, 713.0], [39.4, 713.0], [39.5, 713.0], [39.6, 713.0], [39.7, 713.0], [39.8, 713.0], [39.9, 713.0], [40.0, 713.0], [40.1, 723.0], [40.2, 723.0], [40.3, 723.0], [40.4, 723.0], [40.5, 723.0], [40.6, 723.0], [40.7, 723.0], [40.8, 723.0], [40.9, 724.0], [41.0, 724.0], [41.1, 724.0], [41.2, 724.0], [41.3, 724.0], [41.4, 724.0], [41.5, 724.0], [41.6, 724.0], [41.7, 726.0], [41.8, 726.0], [41.9, 726.0], [42.0, 726.0], [42.1, 726.0], [42.2, 726.0], [42.3, 726.0], [42.4, 726.0], [42.5, 726.0], [42.6, 736.0], [42.7, 736.0], [42.8, 736.0], [42.9, 736.0], [43.0, 736.0], [43.1, 736.0], [43.2, 736.0], [43.3, 736.0], [43.4, 744.0], [43.5, 744.0], [43.6, 744.0], [43.7, 744.0], [43.8, 744.0], [43.9, 744.0], [44.0, 744.0], [44.1, 744.0], [44.2, 757.0], [44.3, 757.0], [44.4, 757.0], [44.5, 757.0], [44.6, 757.0], [44.7, 757.0], [44.8, 757.0], [44.9, 757.0], [45.0, 757.0], [45.1, 788.0], [45.2, 788.0], [45.3, 788.0], [45.4, 788.0], [45.5, 788.0], [45.6, 788.0], [45.7, 788.0], [45.8, 788.0], [45.9, 789.0], [46.0, 789.0], [46.1, 789.0], [46.2, 789.0], [46.3, 789.0], [46.4, 789.0], [46.5, 789.0], [46.6, 789.0], [46.7, 794.0], [46.8, 794.0], [46.9, 794.0], [47.0, 794.0], [47.1, 794.0], [47.2, 794.0], [47.3, 794.0], [47.4, 794.0], [47.5, 794.0], [47.6, 794.0], [47.7, 794.0], [47.8, 794.0], [47.9, 794.0], [48.0, 794.0], [48.1, 794.0], [48.2, 794.0], [48.3, 794.0], [48.4, 794.0], [48.5, 794.0], [48.6, 794.0], [48.7, 794.0], [48.8, 794.0], [48.9, 794.0], [49.0, 794.0], [49.1, 794.0], [49.2, 799.0], [49.3, 799.0], [49.4, 799.0], [49.5, 799.0], [49.6, 799.0], [49.7, 799.0], [49.8, 799.0], [49.9, 799.0], [50.0, 799.0], [50.1, 810.0], [50.2, 810.0], [50.3, 810.0], [50.4, 810.0], [50.5, 810.0], [50.6, 810.0], [50.7, 810.0], [50.8, 810.0], [50.9, 821.0], [51.0, 821.0], [51.1, 821.0], [51.2, 821.0], [51.3, 821.0], [51.4, 821.0], [51.5, 821.0], [51.6, 821.0], [51.7, 822.0], [51.8, 822.0], [51.9, 822.0], [52.0, 822.0], [52.1, 822.0], [52.2, 822.0], [52.3, 822.0], [52.4, 822.0], [52.5, 822.0], [52.6, 844.0], [52.7, 844.0], [52.8, 844.0], [52.9, 844.0], [53.0, 844.0], [53.1, 844.0], [53.2, 844.0], [53.3, 844.0], [53.4, 867.0], [53.5, 867.0], [53.6, 867.0], [53.7, 867.0], [53.8, 867.0], [53.9, 867.0], [54.0, 867.0], [54.1, 867.0], [54.2, 876.0], [54.3, 876.0], [54.4, 876.0], [54.5, 876.0], [54.6, 876.0], [54.7, 876.0], [54.8, 876.0], [54.9, 876.0], [55.0, 876.0], [55.1, 879.0], [55.2, 879.0], [55.3, 879.0], [55.4, 879.0], [55.5, 879.0], [55.6, 879.0], [55.7, 879.0], [55.8, 879.0], [55.9, 924.0], [56.0, 924.0], [56.1, 924.0], [56.2, 924.0], [56.3, 924.0], [56.4, 924.0], [56.5, 924.0], [56.6, 924.0], [56.7, 938.0], [56.8, 938.0], [56.9, 938.0], [57.0, 938.0], [57.1, 938.0], [57.2, 938.0], [57.3, 938.0], [57.4, 938.0], [57.5, 938.0], [57.6, 950.0], [57.7, 950.0], [57.8, 950.0], [57.9, 950.0], [58.0, 950.0], [58.1, 950.0], [58.2, 950.0], [58.3, 950.0], [58.4, 953.0], [58.5, 953.0], [58.6, 953.0], [58.7, 953.0], [58.8, 953.0], [58.9, 953.0], [59.0, 953.0], [59.1, 953.0], [59.2, 990.0], [59.3, 990.0], [59.4, 990.0], [59.5, 990.0], [59.6, 990.0], [59.7, 990.0], [59.8, 990.0], [59.9, 990.0], [60.0, 990.0], [60.1, 1003.0], [60.2, 1003.0], [60.3, 1003.0], [60.4, 1003.0], [60.5, 1003.0], [60.6, 1003.0], [60.7, 1003.0], [60.8, 1003.0], [60.9, 1088.0], [61.0, 1088.0], [61.1, 1088.0], [61.2, 1088.0], [61.3, 1088.0], [61.4, 1088.0], [61.5, 1088.0], [61.6, 1088.0], [61.7, 1090.0], [61.8, 1090.0], [61.9, 1090.0], [62.0, 1090.0], [62.1, 1090.0], [62.2, 1090.0], [62.3, 1090.0], [62.4, 1090.0], [62.5, 1090.0], [62.6, 1097.0], [62.7, 1097.0], [62.8, 1097.0], [62.9, 1097.0], [63.0, 1097.0], [63.1, 1097.0], [63.2, 1097.0], [63.3, 1097.0], [63.4, 1101.0], [63.5, 1101.0], [63.6, 1101.0], [63.7, 1101.0], [63.8, 1101.0], [63.9, 1101.0], [64.0, 1101.0], [64.1, 1101.0], [64.2, 1103.0], [64.3, 1103.0], [64.4, 1103.0], [64.5, 1103.0], [64.6, 1103.0], [64.7, 1103.0], [64.8, 1103.0], [64.9, 1103.0], [65.0, 1103.0], [65.1, 1142.0], [65.2, 1142.0], [65.3, 1142.0], [65.4, 1142.0], [65.5, 1142.0], [65.6, 1142.0], [65.7, 1142.0], [65.8, 1142.0], [65.9, 1165.0], [66.0, 1165.0], [66.1, 1165.0], [66.2, 1165.0], [66.3, 1165.0], [66.4, 1165.0], [66.5, 1165.0], [66.6, 1165.0], [66.7, 1193.0], [66.8, 1193.0], [66.9, 1193.0], [67.0, 1193.0], [67.1, 1193.0], [67.2, 1193.0], [67.3, 1193.0], [67.4, 1193.0], [67.5, 1193.0], [67.6, 1195.0], [67.7, 1195.0], [67.8, 1195.0], [67.9, 1195.0], [68.0, 1195.0], [68.1, 1195.0], [68.2, 1195.0], [68.3, 1195.0], [68.4, 1205.0], [68.5, 1205.0], [68.6, 1205.0], [68.7, 1205.0], [68.8, 1205.0], [68.9, 1205.0], [69.0, 1205.0], [69.1, 1205.0], [69.2, 1228.0], [69.3, 1228.0], [69.4, 1228.0], [69.5, 1228.0], [69.6, 1228.0], [69.7, 1228.0], [69.8, 1228.0], [69.9, 1228.0], [70.0, 1228.0], [70.1, 1230.0], [70.2, 1230.0], [70.3, 1230.0], [70.4, 1230.0], [70.5, 1230.0], [70.6, 1230.0], [70.7, 1230.0], [70.8, 1230.0], [70.9, 1235.0], [71.0, 1235.0], [71.1, 1235.0], [71.2, 1235.0], [71.3, 1235.0], [71.4, 1235.0], [71.5, 1235.0], [71.6, 1235.0], [71.7, 1249.0], [71.8, 1249.0], [71.9, 1249.0], [72.0, 1249.0], [72.1, 1249.0], [72.2, 1249.0], [72.3, 1249.0], [72.4, 1249.0], [72.5, 1249.0], [72.6, 1249.0], [72.7, 1249.0], [72.8, 1249.0], [72.9, 1249.0], [73.0, 1249.0], [73.1, 1249.0], [73.2, 1249.0], [73.3, 1249.0], [73.4, 1256.0], [73.5, 1256.0], [73.6, 1256.0], [73.7, 1256.0], [73.8, 1256.0], [73.9, 1256.0], [74.0, 1256.0], [74.1, 1256.0], [74.2, 1264.0], [74.3, 1264.0], [74.4, 1264.0], [74.5, 1264.0], [74.6, 1264.0], [74.7, 1264.0], [74.8, 1264.0], [74.9, 1264.0], [75.0, 1264.0], [75.1, 1383.0], [75.2, 1383.0], [75.3, 1383.0], [75.4, 1383.0], [75.5, 1383.0], [75.6, 1383.0], [75.7, 1383.0], [75.8, 1383.0], [75.9, 1409.0], [76.0, 1409.0], [76.1, 1409.0], [76.2, 1409.0], [76.3, 1409.0], [76.4, 1409.0], [76.5, 1409.0], [76.6, 1409.0], [76.7, 1476.0], [76.8, 1476.0], [76.9, 1476.0], [77.0, 1476.0], [77.1, 1476.0], [77.2, 1476.0], [77.3, 1476.0], [77.4, 1476.0], [77.5, 1476.0], [77.6, 1476.0], [77.7, 1476.0], [77.8, 1476.0], [77.9, 1476.0], [78.0, 1476.0], [78.1, 1476.0], [78.2, 1476.0], [78.3, 1476.0], [78.4, 1505.0], [78.5, 1505.0], [78.6, 1505.0], [78.7, 1505.0], [78.8, 1505.0], [78.9, 1505.0], [79.0, 1505.0], [79.1, 1505.0], [79.2, 1633.0], [79.3, 1633.0], [79.4, 1633.0], [79.5, 1633.0], [79.6, 1633.0], [79.7, 1633.0], [79.8, 1633.0], [79.9, 1633.0], [80.0, 1666.0], [80.1, 1666.0], [80.2, 1666.0], [80.3, 1666.0], [80.4, 1666.0], [80.5, 1666.0], [80.6, 1666.0], [80.7, 1666.0], [80.8, 1666.0], [80.9, 1805.0], [81.0, 1805.0], [81.1, 1805.0], [81.2, 1805.0], [81.3, 1805.0], [81.4, 1805.0], [81.5, 1805.0], [81.6, 1805.0], [81.7, 1832.0], [81.8, 1832.0], [81.9, 1832.0], [82.0, 1832.0], [82.1, 1832.0], [82.2, 1832.0], [82.3, 1832.0], [82.4, 1832.0], [82.5, 1933.0], [82.6, 1933.0], [82.7, 1933.0], [82.8, 1933.0], [82.9, 1933.0], [83.0, 1933.0], [83.1, 1933.0], [83.2, 1933.0], [83.3, 1933.0], [83.4, 2092.0], [83.5, 2092.0], [83.6, 2092.0], [83.7, 2092.0], [83.8, 2092.0], [83.9, 2092.0], [84.0, 2092.0], [84.1, 2092.0], [84.2, 2137.0], [84.3, 2137.0], [84.4, 2137.0], [84.5, 2137.0], [84.6, 2137.0], [84.7, 2137.0], [84.8, 2137.0], [84.9, 2137.0], [85.0, 2153.0], [85.1, 2153.0], [85.2, 2153.0], [85.3, 2153.0], [85.4, 2153.0], [85.5, 2153.0], [85.6, 2153.0], [85.7, 2153.0], [85.8, 2153.0], [85.9, 2196.0], [86.0, 2196.0], [86.1, 2196.0], [86.2, 2196.0], [86.3, 2196.0], [86.4, 2196.0], [86.5, 2196.0], [86.6, 2196.0], [86.7, 2276.0], [86.8, 2276.0], [86.9, 2276.0], [87.0, 2276.0], [87.1, 2276.0], [87.2, 2276.0], [87.3, 2276.0], [87.4, 2276.0], [87.5, 2338.0], [87.6, 2338.0], [87.7, 2338.0], [87.8, 2338.0], [87.9, 2338.0], [88.0, 2338.0], [88.1, 2338.0], [88.2, 2338.0], [88.3, 2338.0], [88.4, 2370.0], [88.5, 2370.0], [88.6, 2370.0], [88.7, 2370.0], [88.8, 2370.0], [88.9, 2370.0], [89.0, 2370.0], [89.1, 2370.0], [89.2, 2492.0], [89.3, 2492.0], [89.4, 2492.0], [89.5, 2492.0], [89.6, 2492.0], [89.7, 2492.0], [89.8, 2492.0], [89.9, 2492.0], [90.0, 2548.0], [90.1, 2548.0], [90.2, 2548.0], [90.3, 2548.0], [90.4, 2548.0], [90.5, 2548.0], [90.6, 2548.0], [90.7, 2548.0], [90.8, 2548.0], [90.9, 2565.0], [91.0, 2565.0], [91.1, 2565.0], [91.2, 2565.0], [91.3, 2565.0], [91.4, 2565.0], [91.5, 2565.0], [91.6, 2565.0], [91.7, 2593.0], [91.8, 2593.0], [91.9, 2593.0], [92.0, 2593.0], [92.1, 2593.0], [92.2, 2593.0], [92.3, 2593.0], [92.4, 2593.0], [92.5, 2593.0], [92.6, 2593.0], [92.7, 2593.0], [92.8, 2593.0], [92.9, 2593.0], [93.0, 2593.0], [93.1, 2593.0], [93.2, 2593.0], [93.3, 2593.0], [93.4, 2731.0], [93.5, 2731.0], [93.6, 2731.0], [93.7, 2731.0], [93.8, 2731.0], [93.9, 2731.0], [94.0, 2731.0], [94.1, 2731.0], [94.2, 2732.0], [94.3, 2732.0], [94.4, 2732.0], [94.5, 2732.0], [94.6, 2732.0], [94.7, 2732.0], [94.8, 2732.0], [94.9, 2732.0], [95.0, 2973.0], [95.1, 2973.0], [95.2, 2973.0], [95.3, 2973.0], [95.4, 2973.0], [95.5, 2973.0], [95.6, 2973.0], [95.7, 2973.0], [95.8, 2973.0], [95.9, 3093.0], [96.0, 3093.0], [96.1, 3093.0], [96.2, 3093.0], [96.3, 3093.0], [96.4, 3093.0], [96.5, 3093.0], [96.6, 3093.0], [96.7, 3116.0], [96.8, 3116.0], [96.9, 3116.0], [97.0, 3116.0], [97.1, 3116.0], [97.2, 3116.0], [97.3, 3116.0], [97.4, 3116.0], [97.5, 3247.0], [97.6, 3247.0], [97.7, 3247.0], [97.8, 3247.0], [97.9, 3247.0], [98.0, 3247.0], [98.1, 3247.0], [98.2, 3247.0], [98.3, 3247.0], [98.4, 3301.0], [98.5, 3301.0], [98.6, 3301.0], [98.7, 3301.0], [98.8, 3301.0], [98.9, 3301.0], [99.0, 3301.0], [99.1, 3301.0], [99.2, 33190.0], [99.3, 33190.0], [99.4, 33190.0], [99.5, 33190.0], [99.6, 33190.0], [99.7, 33190.0], [99.8, 33190.0], [99.9, 33190.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[0.0, 1794.0], [0.1, 1794.0], [0.2, 1794.0], [0.3, 1794.0], [0.4, 1794.0], [0.5, 1794.0], [0.6, 1794.0], [0.7, 1794.0], [0.8, 1794.0], [0.9, 1929.0], [1.0, 1929.0], [1.1, 1929.0], [1.2, 1929.0], [1.3, 1929.0], [1.4, 1929.0], [1.5, 1929.0], [1.6, 1929.0], [1.7, 2213.0], [1.8, 2213.0], [1.9, 2213.0], [2.0, 2213.0], [2.1, 2213.0], [2.2, 2213.0], [2.3, 2213.0], [2.4, 2213.0], [2.5, 2361.0], [2.6, 2361.0], [2.7, 2361.0], [2.8, 2361.0], [2.9, 2361.0], [3.0, 2361.0], [3.1, 2361.0], [3.2, 2361.0], [3.3, 2361.0], [3.4, 2630.0], [3.5, 2630.0], [3.6, 2630.0], [3.7, 2630.0], [3.8, 2630.0], [3.9, 2630.0], [4.0, 2630.0], [4.1, 2630.0], [4.2, 2718.0], [4.3, 2718.0], [4.4, 2718.0], [4.5, 2718.0], [4.6, 2718.0], [4.7, 2718.0], [4.8, 2718.0], [4.9, 2718.0], [5.0, 2847.0], [5.1, 2847.0], [5.2, 2847.0], [5.3, 2847.0], [5.4, 2847.0], [5.5, 2847.0], [5.6, 2847.0], [5.7, 2847.0], [5.8, 2847.0], [5.9, 3044.0], [6.0, 3044.0], [6.1, 3044.0], [6.2, 3044.0], [6.3, 3044.0], [6.4, 3044.0], [6.5, 3044.0], [6.6, 3044.0], [6.7, 3158.0], [6.8, 3158.0], [6.9, 3158.0], [7.0, 3158.0], [7.1, 3158.0], [7.2, 3158.0], [7.3, 3158.0], [7.4, 3158.0], [7.5, 3233.0], [7.6, 3233.0], [7.7, 3233.0], [7.8, 3233.0], [7.9, 3233.0], [8.0, 3233.0], [8.1, 3233.0], [8.2, 3233.0], [8.3, 3233.0], [8.4, 3253.0], [8.5, 3253.0], [8.6, 3253.0], [8.7, 3253.0], [8.8, 3253.0], [8.9, 3253.0], [9.0, 3253.0], [9.1, 3253.0], [9.2, 3595.0], [9.3, 3595.0], [9.4, 3595.0], [9.5, 3595.0], [9.6, 3595.0], [9.7, 3595.0], [9.8, 3595.0], [9.9, 3595.0], [10.0, 3700.0], [10.1, 3700.0], [10.2, 3700.0], [10.3, 3700.0], [10.4, 3700.0], [10.5, 3700.0], [10.6, 3700.0], [10.7, 3700.0], [10.8, 3700.0], [10.9, 3723.0], [11.0, 3723.0], [11.1, 3723.0], [11.2, 3723.0], [11.3, 3723.0], [11.4, 3723.0], [11.5, 3723.0], [11.6, 3723.0], [11.7, 3898.0], [11.8, 3898.0], [11.9, 3898.0], [12.0, 3898.0], [12.1, 3898.0], [12.2, 3898.0], [12.3, 3898.0], [12.4, 3898.0], [12.5, 3898.0], [12.6, 4014.0], [12.7, 4014.0], [12.8, 4014.0], [12.9, 4014.0], [13.0, 4014.0], [13.1, 4014.0], [13.2, 4014.0], [13.3, 4014.0], [13.4, 4050.0], [13.5, 4050.0], [13.6, 4050.0], [13.7, 4050.0], [13.8, 4050.0], [13.9, 4050.0], [14.0, 4050.0], [14.1, 4050.0], [14.2, 4060.0], [14.3, 4060.0], [14.4, 4060.0], [14.5, 4060.0], [14.6, 4060.0], [14.7, 4060.0], [14.8, 4060.0], [14.9, 4060.0], [15.0, 4060.0], [15.1, 4102.0], [15.2, 4102.0], [15.3, 4102.0], [15.4, 4102.0], [15.5, 4102.0], [15.6, 4102.0], [15.7, 4102.0], [15.8, 4102.0], [15.9, 4197.0], [16.0, 4197.0], [16.1, 4197.0], [16.2, 4197.0], [16.3, 4197.0], [16.4, 4197.0], [16.5, 4197.0], [16.6, 4197.0], [16.7, 4199.0], [16.8, 4199.0], [16.9, 4199.0], [17.0, 4199.0], [17.1, 4199.0], [17.2, 4199.0], [17.3, 4199.0], [17.4, 4199.0], [17.5, 4199.0], [17.6, 4451.0], [17.7, 4451.0], [17.8, 4451.0], [17.9, 4451.0], [18.0, 4451.0], [18.1, 4451.0], [18.2, 4451.0], [18.3, 4451.0], [18.4, 4558.0], [18.5, 4558.0], [18.6, 4558.0], [18.7, 4558.0], [18.8, 4558.0], [18.9, 4558.0], [19.0, 4558.0], [19.1, 4558.0], [19.2, 4564.0], [19.3, 4564.0], [19.4, 4564.0], [19.5, 4564.0], [19.6, 4564.0], [19.7, 4564.0], [19.8, 4564.0], [19.9, 4564.0], [20.0, 4756.0], [20.1, 4756.0], [20.2, 4756.0], [20.3, 4756.0], [20.4, 4756.0], [20.5, 4756.0], [20.6, 4756.0], [20.7, 4756.0], [20.8, 4756.0], [20.9, 4798.0], [21.0, 4798.0], [21.1, 4798.0], [21.2, 4798.0], [21.3, 4798.0], [21.4, 4798.0], [21.5, 4798.0], [21.6, 4798.0], [21.7, 4976.0], [21.8, 4976.0], [21.9, 4976.0], [22.0, 4976.0], [22.1, 4976.0], [22.2, 4976.0], [22.3, 4976.0], [22.4, 4976.0], [22.5, 4993.0], [22.6, 4993.0], [22.7, 4993.0], [22.8, 4993.0], [22.9, 4993.0], [23.0, 4993.0], [23.1, 4993.0], [23.2, 4993.0], [23.3, 4993.0], [23.4, 5015.0], [23.5, 5015.0], [23.6, 5015.0], [23.7, 5015.0], [23.8, 5015.0], [23.9, 5015.0], [24.0, 5015.0], [24.1, 5015.0], [24.2, 5299.0], [24.3, 5299.0], [24.4, 5299.0], [24.5, 5299.0], [24.6, 5299.0], [24.7, 5299.0], [24.8, 5299.0], [24.9, 5299.0], [25.0, 5446.0], [25.1, 5446.0], [25.2, 5446.0], [25.3, 5446.0], [25.4, 5446.0], [25.5, 5446.0], [25.6, 5446.0], [25.7, 5446.0], [25.8, 5446.0], [25.9, 5511.0], [26.0, 5511.0], [26.1, 5511.0], [26.2, 5511.0], [26.3, 5511.0], [26.4, 5511.0], [26.5, 5511.0], [26.6, 5511.0], [26.7, 5533.0], [26.8, 5533.0], [26.9, 5533.0], [27.0, 5533.0], [27.1, 5533.0], [27.2, 5533.0], [27.3, 5533.0], [27.4, 5533.0], [27.5, 5600.0], [27.6, 5600.0], [27.7, 5600.0], [27.8, 5600.0], [27.9, 5600.0], [28.0, 5600.0], [28.1, 5600.0], [28.2, 5600.0], [28.3, 5600.0], [28.4, 5627.0], [28.5, 5627.0], [28.6, 5627.0], [28.7, 5627.0], [28.8, 5627.0], [28.9, 5627.0], [29.0, 5627.0], [29.1, 5627.0], [29.2, 5651.0], [29.3, 5651.0], [29.4, 5651.0], [29.5, 5651.0], [29.6, 5651.0], [29.7, 5651.0], [29.8, 5651.0], [29.9, 5651.0], [30.0, 5751.0], [30.1, 5751.0], [30.2, 5751.0], [30.3, 5751.0], [30.4, 5751.0], [30.5, 5751.0], [30.6, 5751.0], [30.7, 5751.0], [30.8, 5751.0], [30.9, 5773.0], [31.0, 5773.0], [31.1, 5773.0], [31.2, 5773.0], [31.3, 5773.0], [31.4, 5773.0], [31.5, 5773.0], [31.6, 5773.0], [31.7, 5837.0], [31.8, 5837.0], [31.9, 5837.0], [32.0, 5837.0], [32.1, 5837.0], [32.2, 5837.0], [32.3, 5837.0], [32.4, 5837.0], [32.5, 5976.0], [32.6, 5976.0], [32.7, 5976.0], [32.8, 5976.0], [32.9, 5976.0], [33.0, 5976.0], [33.1, 5976.0], [33.2, 5976.0], [33.3, 5976.0], [33.4, 6005.0], [33.5, 6005.0], [33.6, 6005.0], [33.7, 6005.0], [33.8, 6005.0], [33.9, 6005.0], [34.0, 6005.0], [34.1, 6005.0], [34.2, 6108.0], [34.3, 6108.0], [34.4, 6108.0], [34.5, 6108.0], [34.6, 6108.0], [34.7, 6108.0], [34.8, 6108.0], [34.9, 6108.0], [35.0, 6249.0], [35.1, 6249.0], [35.2, 6249.0], [35.3, 6249.0], [35.4, 6249.0], [35.5, 6249.0], [35.6, 6249.0], [35.7, 6249.0], [35.8, 6249.0], [35.9, 6315.0], [36.0, 6315.0], [36.1, 6315.0], [36.2, 6315.0], [36.3, 6315.0], [36.4, 6315.0], [36.5, 6315.0], [36.6, 6315.0], [36.7, 6337.0], [36.8, 6337.0], [36.9, 6337.0], [37.0, 6337.0], [37.1, 6337.0], [37.2, 6337.0], [37.3, 6337.0], [37.4, 6337.0], [37.5, 6453.0], [37.6, 6453.0], [37.7, 6453.0], [37.8, 6453.0], [37.9, 6453.0], [38.0, 6453.0], [38.1, 6453.0], [38.2, 6453.0], [38.3, 6453.0], [38.4, 6471.0], [38.5, 6471.0], [38.6, 6471.0], [38.7, 6471.0], [38.8, 6471.0], [38.9, 6471.0], [39.0, 6471.0], [39.1, 6471.0], [39.2, 6489.0], [39.3, 6489.0], [39.4, 6489.0], [39.5, 6489.0], [39.6, 6489.0], [39.7, 6489.0], [39.8, 6489.0], [39.9, 6489.0], [40.0, 6489.0], [40.1, 6684.0], [40.2, 6684.0], [40.3, 6684.0], [40.4, 6684.0], [40.5, 6684.0], [40.6, 6684.0], [40.7, 6684.0], [40.8, 6684.0], [40.9, 6740.0], [41.0, 6740.0], [41.1, 6740.0], [41.2, 6740.0], [41.3, 6740.0], [41.4, 6740.0], [41.5, 6740.0], [41.6, 6740.0], [41.7, 6854.0], [41.8, 6854.0], [41.9, 6854.0], [42.0, 6854.0], [42.1, 6854.0], [42.2, 6854.0], [42.3, 6854.0], [42.4, 6854.0], [42.5, 6854.0], [42.6, 7049.0], [42.7, 7049.0], [42.8, 7049.0], [42.9, 7049.0], [43.0, 7049.0], [43.1, 7049.0], [43.2, 7049.0], [43.3, 7049.0], [43.4, 7277.0], [43.5, 7277.0], [43.6, 7277.0], [43.7, 7277.0], [43.8, 7277.0], [43.9, 7277.0], [44.0, 7277.0], [44.1, 7277.0], [44.2, 7311.0], [44.3, 7311.0], [44.4, 7311.0], [44.5, 7311.0], [44.6, 7311.0], [44.7, 7311.0], [44.8, 7311.0], [44.9, 7311.0], [45.0, 7311.0], [45.1, 7488.0], [45.2, 7488.0], [45.3, 7488.0], [45.4, 7488.0], [45.5, 7488.0], [45.6, 7488.0], [45.7, 7488.0], [45.8, 7488.0], [45.9, 7575.0], [46.0, 7575.0], [46.1, 7575.0], [46.2, 7575.0], [46.3, 7575.0], [46.4, 7575.0], [46.5, 7575.0], [46.6, 7575.0], [46.7, 7628.0], [46.8, 7628.0], [46.9, 7628.0], [47.0, 7628.0], [47.1, 7628.0], [47.2, 7628.0], [47.3, 7628.0], [47.4, 7628.0], [47.5, 7628.0], [47.6, 7710.0], [47.7, 7710.0], [47.8, 7710.0], [47.9, 7710.0], [48.0, 7710.0], [48.1, 7710.0], [48.2, 7710.0], [48.3, 7710.0], [48.4, 7899.0], [48.5, 7899.0], [48.6, 7899.0], [48.7, 7899.0], [48.8, 7899.0], [48.9, 7899.0], [49.0, 7899.0], [49.1, 7899.0], [49.2, 7935.0], [49.3, 7935.0], [49.4, 7935.0], [49.5, 7935.0], [49.6, 7935.0], [49.7, 7935.0], [49.8, 7935.0], [49.9, 7935.0], [50.0, 7935.0], [50.1, 7985.0], [50.2, 7985.0], [50.3, 7985.0], [50.4, 7985.0], [50.5, 7985.0], [50.6, 7985.0], [50.7, 7985.0], [50.8, 7985.0], [50.9, 8034.0], [51.0, 8034.0], [51.1, 8034.0], [51.2, 8034.0], [51.3, 8034.0], [51.4, 8034.0], [51.5, 8034.0], [51.6, 8034.0], [51.7, 8056.0], [51.8, 8056.0], [51.9, 8056.0], [52.0, 8056.0], [52.1, 8056.0], [52.2, 8056.0], [52.3, 8056.0], [52.4, 8056.0], [52.5, 8056.0], [52.6, 8066.0], [52.7, 8066.0], [52.8, 8066.0], [52.9, 8066.0], [53.0, 8066.0], [53.1, 8066.0], [53.2, 8066.0], [53.3, 8066.0], [53.4, 8123.0], [53.5, 8123.0], [53.6, 8123.0], [53.7, 8123.0], [53.8, 8123.0], [53.9, 8123.0], [54.0, 8123.0], [54.1, 8123.0], [54.2, 8145.0], [54.3, 8145.0], [54.4, 8145.0], [54.5, 8145.0], [54.6, 8145.0], [54.7, 8145.0], [54.8, 8145.0], [54.9, 8145.0], [55.0, 8145.0], [55.1, 8342.0], [55.2, 8342.0], [55.3, 8342.0], [55.4, 8342.0], [55.5, 8342.0], [55.6, 8342.0], [55.7, 8342.0], [55.8, 8342.0], [55.9, 8357.0], [56.0, 8357.0], [56.1, 8357.0], [56.2, 8357.0], [56.3, 8357.0], [56.4, 8357.0], [56.5, 8357.0], [56.6, 8357.0], [56.7, 8627.0], [56.8, 8627.0], [56.9, 8627.0], [57.0, 8627.0], [57.1, 8627.0], [57.2, 8627.0], [57.3, 8627.0], [57.4, 8627.0], [57.5, 8627.0], [57.6, 8692.0], [57.7, 8692.0], [57.8, 8692.0], [57.9, 8692.0], [58.0, 8692.0], [58.1, 8692.0], [58.2, 8692.0], [58.3, 8692.0], [58.4, 8752.0], [58.5, 8752.0], [58.6, 8752.0], [58.7, 8752.0], [58.8, 8752.0], [58.9, 8752.0], [59.0, 8752.0], [59.1, 8752.0], [59.2, 8857.0], [59.3, 8857.0], [59.4, 8857.0], [59.5, 8857.0], [59.6, 8857.0], [59.7, 8857.0], [59.8, 8857.0], [59.9, 8857.0], [60.0, 8857.0], [60.1, 8870.0], [60.2, 8870.0], [60.3, 8870.0], [60.4, 8870.0], [60.5, 8870.0], [60.6, 8870.0], [60.7, 8870.0], [60.8, 8870.0], [60.9, 8890.0], [61.0, 8890.0], [61.1, 8890.0], [61.2, 8890.0], [61.3, 8890.0], [61.4, 8890.0], [61.5, 8890.0], [61.6, 8890.0], [61.7, 8916.0], [61.8, 8916.0], [61.9, 8916.0], [62.0, 8916.0], [62.1, 8916.0], [62.2, 8916.0], [62.3, 8916.0], [62.4, 8916.0], [62.5, 8916.0], [62.6, 9109.0], [62.7, 9109.0], [62.8, 9109.0], [62.9, 9109.0], [63.0, 9109.0], [63.1, 9109.0], [63.2, 9109.0], [63.3, 9109.0], [63.4, 9252.0], [63.5, 9252.0], [63.6, 9252.0], [63.7, 9252.0], [63.8, 9252.0], [63.9, 9252.0], [64.0, 9252.0], [64.1, 9252.0], [64.2, 9338.0], [64.3, 9338.0], [64.4, 9338.0], [64.5, 9338.0], [64.6, 9338.0], [64.7, 9338.0], [64.8, 9338.0], [64.9, 9338.0], [65.0, 9338.0], [65.1, 9379.0], [65.2, 9379.0], [65.3, 9379.0], [65.4, 9379.0], [65.5, 9379.0], [65.6, 9379.0], [65.7, 9379.0], [65.8, 9379.0], [65.9, 9435.0], [66.0, 9435.0], [66.1, 9435.0], [66.2, 9435.0], [66.3, 9435.0], [66.4, 9435.0], [66.5, 9435.0], [66.6, 9435.0], [66.7, 9571.0], [66.8, 9571.0], [66.9, 9571.0], [67.0, 9571.0], [67.1, 9571.0], [67.2, 9571.0], [67.3, 9571.0], [67.4, 9571.0], [67.5, 9571.0], [67.6, 9643.0], [67.7, 9643.0], [67.8, 9643.0], [67.9, 9643.0], [68.0, 9643.0], [68.1, 9643.0], [68.2, 9643.0], [68.3, 9643.0], [68.4, 9715.0], [68.5, 9715.0], [68.6, 9715.0], [68.7, 9715.0], [68.8, 9715.0], [68.9, 9715.0], [69.0, 9715.0], [69.1, 9715.0], [69.2, 9939.0], [69.3, 9939.0], [69.4, 9939.0], [69.5, 9939.0], [69.6, 9939.0], [69.7, 9939.0], [69.8, 9939.0], [69.9, 9939.0], [70.0, 9939.0], [70.1, 9997.0], [70.2, 9997.0], [70.3, 9997.0], [70.4, 9997.0], [70.5, 9997.0], [70.6, 9997.0], [70.7, 9997.0], [70.8, 9997.0], [70.9, 10080.0], [71.0, 10080.0], [71.1, 10080.0], [71.2, 10080.0], [71.3, 10080.0], [71.4, 10080.0], [71.5, 10080.0], [71.6, 10080.0], [71.7, 10170.0], [71.8, 10170.0], [71.9, 10170.0], [72.0, 10170.0], [72.1, 10170.0], [72.2, 10170.0], [72.3, 10170.0], [72.4, 10170.0], [72.5, 10170.0], [72.6, 10182.0], [72.7, 10182.0], [72.8, 10182.0], [72.9, 10182.0], [73.0, 10182.0], [73.1, 10182.0], [73.2, 10182.0], [73.3, 10182.0], [73.4, 10195.0], [73.5, 10195.0], [73.6, 10195.0], [73.7, 10195.0], [73.8, 10195.0], [73.9, 10195.0], [74.0, 10195.0], [74.1, 10195.0], [74.2, 10210.0], [74.3, 10210.0], [74.4, 10210.0], [74.5, 10210.0], [74.6, 10210.0], [74.7, 10210.0], [74.8, 10210.0], [74.9, 10210.0], [75.0, 10210.0], [75.1, 10343.0], [75.2, 10343.0], [75.3, 10343.0], [75.4, 10343.0], [75.5, 10343.0], [75.6, 10343.0], [75.7, 10343.0], [75.8, 10343.0], [75.9, 10365.0], [76.0, 10365.0], [76.1, 10365.0], [76.2, 10365.0], [76.3, 10365.0], [76.4, 10365.0], [76.5, 10365.0], [76.6, 10365.0], [76.7, 10503.0], [76.8, 10503.0], [76.9, 10503.0], [77.0, 10503.0], [77.1, 10503.0], [77.2, 10503.0], [77.3, 10503.0], [77.4, 10503.0], [77.5, 10549.0], [77.6, 10549.0], [77.7, 10549.0], [77.8, 10549.0], [77.9, 10549.0], [78.0, 10549.0], [78.1, 10549.0], [78.2, 10549.0], [78.3, 10549.0], [78.4, 10645.0], [78.5, 10645.0], [78.6, 10645.0], [78.7, 10645.0], [78.8, 10645.0], [78.9, 10645.0], [79.0, 10645.0], [79.1, 10645.0], [79.2, 10706.0], [79.3, 10706.0], [79.4, 10706.0], [79.5, 10706.0], [79.6, 10706.0], [79.7, 10706.0], [79.8, 10706.0], [79.9, 10706.0], [80.0, 10707.0], [80.1, 10707.0], [80.2, 10707.0], [80.3, 10707.0], [80.4, 10707.0], [80.5, 10707.0], [80.6, 10707.0], [80.7, 10707.0], [80.8, 10707.0], [80.9, 11010.0], [81.0, 11010.0], [81.1, 11010.0], [81.2, 11010.0], [81.3, 11010.0], [81.4, 11010.0], [81.5, 11010.0], [81.6, 11010.0], [81.7, 11113.0], [81.8, 11113.0], [81.9, 11113.0], [82.0, 11113.0], [82.1, 11113.0], [82.2, 11113.0], [82.3, 11113.0], [82.4, 11113.0], [82.5, 11592.0], [82.6, 11592.0], [82.7, 11592.0], [82.8, 11592.0], [82.9, 11592.0], [83.0, 11592.0], [83.1, 11592.0], [83.2, 11592.0], [83.3, 11592.0], [83.4, 12020.0], [83.5, 12020.0], [83.6, 12020.0], [83.7, 12020.0], [83.8, 12020.0], [83.9, 12020.0], [84.0, 12020.0], [84.1, 12020.0], [84.2, 12185.0], [84.3, 12185.0], [84.4, 12185.0], [84.5, 12185.0], [84.6, 12185.0], [84.7, 12185.0], [84.8, 12185.0], [84.9, 12185.0], [85.0, 12191.0], [85.1, 12191.0], [85.2, 12191.0], [85.3, 12191.0], [85.4, 12191.0], [85.5, 12191.0], [85.6, 12191.0], [85.7, 12191.0], [85.8, 12191.0], [85.9, 12347.0], [86.0, 12347.0], [86.1, 12347.0], [86.2, 12347.0], [86.3, 12347.0], [86.4, 12347.0], [86.5, 12347.0], [86.6, 12347.0], [86.7, 12560.0], [86.8, 12560.0], [86.9, 12560.0], [87.0, 12560.0], [87.1, 12560.0], [87.2, 12560.0], [87.3, 12560.0], [87.4, 12560.0], [87.5, 12750.0], [87.6, 12750.0], [87.7, 12750.0], [87.8, 12750.0], [87.9, 12750.0], [88.0, 12750.0], [88.1, 12750.0], [88.2, 12750.0], [88.3, 12750.0], [88.4, 12996.0], [88.5, 12996.0], [88.6, 12996.0], [88.7, 12996.0], [88.8, 12996.0], [88.9, 12996.0], [89.0, 12996.0], [89.1, 12996.0], [89.2, 14823.0], [89.3, 14823.0], [89.4, 14823.0], [89.5, 14823.0], [89.6, 14823.0], [89.7, 14823.0], [89.8, 14823.0], [89.9, 14823.0], [90.0, 14852.0], [90.1, 14852.0], [90.2, 14852.0], [90.3, 14852.0], [90.4, 14852.0], [90.5, 14852.0], [90.6, 14852.0], [90.7, 14852.0], [90.8, 14852.0], [90.9, 15494.0], [91.0, 15494.0], [91.1, 15494.0], [91.2, 15494.0], [91.3, 15494.0], [91.4, 15494.0], [91.5, 15494.0], [91.6, 15494.0], [91.7, 15839.0], [91.8, 15839.0], [91.9, 15839.0], [92.0, 15839.0], [92.1, 15839.0], [92.2, 15839.0], [92.3, 15839.0], [92.4, 15839.0], [92.5, 18211.0], [92.6, 18211.0], [92.7, 18211.0], [92.8, 18211.0], [92.9, 18211.0], [93.0, 18211.0], [93.1, 18211.0], [93.2, 18211.0], [93.3, 18211.0], [93.4, 18747.0], [93.5, 18747.0], [93.6, 18747.0], [93.7, 18747.0], [93.8, 18747.0], [93.9, 18747.0], [94.0, 18747.0], [94.1, 18747.0], [94.2, 21371.0], [94.3, 21371.0], [94.4, 21371.0], [94.5, 21371.0], [94.6, 21371.0], [94.7, 21371.0], [94.8, 21371.0], [94.9, 21371.0], [95.0, 22469.0], [95.1, 22469.0], [95.2, 22469.0], [95.3, 22469.0], [95.4, 22469.0], [95.5, 22469.0], [95.6, 22469.0], [95.7, 22469.0], [95.8, 22469.0], [95.9, 28605.0], [96.0, 28605.0], [96.1, 28605.0], [96.2, 28605.0], [96.3, 28605.0], [96.4, 28605.0], [96.5, 28605.0], [96.6, 28605.0], [96.7, 29313.0], [96.8, 29313.0], [96.9, 29313.0], [97.0, 29313.0], [97.1, 29313.0], [97.2, 29313.0], [97.3, 29313.0], [97.4, 29313.0], [97.5, 33207.0], [97.6, 33207.0], [97.7, 33207.0], [97.8, 33207.0], [97.9, 33207.0], [98.0, 33207.0], [98.1, 33207.0], [98.2, 33207.0], [98.3, 33207.0], [98.4, 42746.0], [98.5, 42746.0], [98.6, 42746.0], [98.7, 42746.0], [98.8, 42746.0], [98.9, 42746.0], [99.0, 42746.0], [99.1, 42746.0], [99.2, 55296.0], [99.3, 55296.0], [99.4, 55296.0], [99.5, 55296.0], [99.6, 55296.0], [99.7, 55296.0], [99.8, 55296.0], [99.9, 55296.0]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 18.0, "series": [{"data": [[600.0, 14.0], [700.0, 14.0], [800.0, 7.0], [900.0, 5.0], [1000.0, 4.0], [1100.0, 6.0], [1200.0, 8.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [33100.0, 1.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 4.0], [2700.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [400.0, 14.0], [500.0, 18.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1700.0, 1.0], [1900.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 1.0], [4000.0, 3.0], [4100.0, 3.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 2.0], [5000.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5600.0, 3.0], [5500.0, 2.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 3.0], [6600.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 1.0], [7900.0, 2.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 2.0], [8600.0, 2.0], [8700.0, 1.0], [8300.0, 2.0], [8900.0, 1.0], [9200.0, 1.0], [8800.0, 3.0], [9100.0, 1.0], [9400.0, 1.0], [9300.0, 2.0], [9600.0, 1.0], [9500.0, 1.0], [9700.0, 1.0], [10200.0, 1.0], [9900.0, 2.0], [10100.0, 3.0], [10000.0, 1.0], [10500.0, 2.0], [10300.0, 2.0], [10700.0, 2.0], [10600.0, 1.0], [11000.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [12000.0, 1.0], [12100.0, 2.0], [12700.0, 1.0], [12300.0, 1.0], [12500.0, 1.0], [12900.0, 1.0], [14800.0, 2.0], [15800.0, 1.0], [15400.0, 1.0], [18200.0, 1.0], [18700.0, 1.0], [21300.0, 1.0], [22400.0, 1.0], [28600.0, 1.0], [29300.0, 1.0], [33200.0, 1.0], [42700.0, 1.0], [55200.0, 1.0]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[600.0, 14.0], [700.0, 14.0], [800.0, 7.0], [900.0, 5.0], [1000.0, 4.0], [1100.0, 6.0], [1200.0, 8.0], [1300.0, 1.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 2.0], [1800.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [33100.0, 1.0], [2300.0, 2.0], [2200.0, 1.0], [2400.0, 1.0], [2500.0, 4.0], [2700.0, 2.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 1.0], [3200.0, 1.0], [400.0, 14.0], [500.0, 18.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1700.0, 1.0], [1900.0, 1.0], [2300.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [2800.0, 1.0], [2700.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [3200.0, 2.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 1.0], [4000.0, 3.0], [4100.0, 3.0], [4500.0, 2.0], [4400.0, 1.0], [4700.0, 2.0], [5000.0, 1.0], [4900.0, 2.0], [5200.0, 1.0], [5600.0, 3.0], [5500.0, 2.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [5900.0, 1.0], [6000.0, 1.0], [6100.0, 1.0], [6300.0, 2.0], [6200.0, 1.0], [6400.0, 3.0], [6600.0, 1.0], [6800.0, 1.0], [6700.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 1.0], [7900.0, 2.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 2.0], [8600.0, 2.0], [8700.0, 1.0], [8300.0, 2.0], [8900.0, 1.0], [9200.0, 1.0], [8800.0, 3.0], [9100.0, 1.0], [9400.0, 1.0], [9300.0, 2.0], [9600.0, 1.0], [9500.0, 1.0], [9700.0, 1.0], [10200.0, 1.0], [9900.0, 2.0], [10100.0, 3.0], [10000.0, 1.0], [10500.0, 2.0], [10300.0, 2.0], [10700.0, 2.0], [10600.0, 1.0], [11000.0, 1.0], [11100.0, 1.0], [11500.0, 1.0], [12000.0, 1.0], [12100.0, 2.0], [12700.0, 1.0], [12300.0, 1.0], [12500.0, 1.0], [12900.0, 1.0], [14800.0, 2.0], [15800.0, 1.0], [15400.0, 1.0], [18200.0, 1.0], [18700.0, 1.0], [21300.0, 1.0], [22400.0, 1.0], [28600.0, 1.0], [29300.0, 1.0], [33200.0, 1.0], [42700.0, 1.0], [55200.0, 1.0]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 55200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 145.0, "series": [{"data": [[0.0, 17.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 77.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 145.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 3.692307692307693, "minX": 1.69527666E12, "maxY": 90.26980728051402, "series": [{"data": [[1.69527672E12, 3.692307692307693], [1.69527666E12, 90.26980728051402]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527672E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 455.0, "minX": 1.0, "maxY": 55296.0, "series": [{"data": [[2.0, 794.0], [3.0, 475.0], [4.0, 726.0], [5.0, 501.0], [6.0, 713.0], [7.0, 473.0], [8.0, 736.0], [9.0, 1249.0], [10.0, 530.0], [11.0, 460.0], [12.0, 473.0], [13.0, 3247.0], [14.0, 3301.0], [15.0, 3093.0], [16.0, 544.0], [17.0, 493.0], [18.0, 3116.0], [19.0, 2973.0], [21.0, 2292.0], [22.0, 2732.0], [23.0, 1476.0], [24.0, 2548.0], [25.0, 2565.0], [26.0, 1205.0], [27.0, 2731.0], [28.0, 2593.0], [29.0, 2276.0], [30.0, 2370.0], [31.0, 2153.0], [32.0, 1097.0], [35.0, 1476.0], [34.0, 1850.5], [37.0, 1933.0], [36.0, 1383.0], [39.0, 1228.0], [38.0, 1409.0], [41.0, 1264.0], [40.0, 1832.0], [43.0, 1165.0], [42.0, 2593.0], [45.0, 1103.0], [44.0, 1101.0], [47.0, 1235.0], [46.0, 990.0], [49.0, 1249.0], [48.0, 1666.0], [51.0, 1003.0], [50.0, 938.0], [53.0, 953.0], [52.0, 1633.0], [55.0, 639.0], [54.0, 822.0], [57.0, 500.0], [56.0, 2137.0], [59.0, 1090.0], [58.0, 1088.0], [61.0, 810.0], [60.0, 1193.0], [63.0, 844.0], [62.0, 794.0], [67.0, 701.0], [66.0, 670.0], [65.0, 744.0], [64.0, 799.0], [71.0, 600.0], [70.0, 2338.0], [69.0, 879.0], [68.0, 724.0], [75.0, 1256.0], [74.0, 494.0], [73.0, 1142.0], [72.0, 788.0], [79.0, 593.0], [78.0, 585.0], [77.0, 687.0], [76.0, 794.0], [83.0, 646.0], [82.0, 500.0], [81.0, 757.0], [80.0, 686.0], [87.0, 635.0], [86.0, 680.0], [85.0, 498.0], [84.0, 604.0], [91.0, 552.0], [90.0, 500.0], [89.0, 592.0], [88.0, 585.0], [94.0, 493.0], [93.0, 924.0], [92.0, 466.0], [99.0, 821.0], [98.0, 534.0], [97.0, 483.0], [96.0, 692.5], [103.0, 1230.0], [102.0, 667.0], [101.0, 867.0], [100.0, 1805.0], [107.0, 950.0], [106.0, 691.0], [105.0, 789.0], [104.0, 1195.0], [111.0, 501.0], [110.0, 492.0], [109.0, 594.0], [108.0, 723.0], [115.0, 514.0], [114.0, 577.0], [113.0, 475.0], [112.0, 621.0], [119.0, 550.0], [118.0, 678.0], [117.0, 653.0], [116.0, 485.0], [120.0, 455.0], [1.0, 33190.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[60.525000000000034, 1390.2999999999997]], "isOverall": false, "label": "HTTP Request - Carrer-Aggregated", "isController": false}, {"data": [[2.0, 55296.0], [17.0, 33207.0], [37.0, 28605.0], [5.0, 42746.0], [47.0, 29313.0], [98.0, 21371.0], [100.0, 22469.0], [109.0, 18211.0], [119.0, 17293.0], [118.0, 9715.0], [116.0, 13467.0], [120.0, 7263.886792452829]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[115.32499999999999, 9215.766666666665]], "isOverall": false, "label": "HTTP Request - About Us-Aggregated", "isController": false}, {"data": [[2.0, 794.0], [3.0, 475.0], [4.0, 726.0], [5.0, 501.0], [6.0, 713.0], [7.0, 473.0], [8.0, 736.0], [9.0, 1249.0], [10.0, 530.0], [11.0, 460.0], [12.0, 473.0], [13.0, 3247.0], [14.0, 3301.0], [15.0, 3093.0], [16.0, 544.0], [17.0, 493.0], [18.0, 3116.0], [19.0, 2973.0], [21.0, 2292.0], [22.0, 2732.0], [23.0, 1476.0], [24.0, 2548.0], [25.0, 2565.0], [26.0, 1205.0], [27.0, 2731.0], [28.0, 2593.0], [29.0, 2276.0], [30.0, 2370.0], [31.0, 2153.0], [32.0, 1097.0], [35.0, 1476.0], [34.0, 1850.5], [37.0, 1933.0], [36.0, 1383.0], [39.0, 1228.0], [38.0, 1409.0], [41.0, 1264.0], [40.0, 1832.0], [43.0, 1165.0], [42.0, 2593.0], [45.0, 1103.0], [44.0, 1101.0], [47.0, 1235.0], [46.0, 990.0], [49.0, 1249.0], [48.0, 1666.0], [51.0, 1003.0], [50.0, 938.0], [53.0, 953.0], [52.0, 1633.0], [55.0, 639.0], [54.0, 822.0], [57.0, 500.0], [56.0, 2137.0], [59.0, 1090.0], [58.0, 1088.0], [61.0, 810.0], [60.0, 1193.0], [63.0, 844.0], [62.0, 794.0], [67.0, 701.0], [66.0, 670.0], [65.0, 744.0], [64.0, 799.0], [71.0, 600.0], [70.0, 2338.0], [69.0, 879.0], [68.0, 724.0], [75.0, 1256.0], [74.0, 494.0], [73.0, 1142.0], [72.0, 788.0], [79.0, 593.0], [78.0, 585.0], [77.0, 687.0], [76.0, 794.0], [83.0, 646.0], [82.0, 500.0], [81.0, 757.0], [80.0, 686.0], [87.0, 635.0], [86.0, 680.0], [85.0, 498.0], [84.0, 604.0], [91.0, 552.0], [90.0, 500.0], [89.0, 592.0], [88.0, 585.0], [94.0, 493.0], [93.0, 924.0], [92.0, 466.0], [99.0, 821.0], [98.0, 534.0], [97.0, 483.0], [96.0, 692.5], [103.0, 1230.0], [102.0, 667.0], [101.0, 867.0], [100.0, 1805.0], [107.0, 950.0], [106.0, 691.0], [105.0, 789.0], [104.0, 1195.0], [111.0, 501.0], [110.0, 492.0], [109.0, 594.0], [108.0, 723.0], [115.0, 514.0], [114.0, 577.0], [113.0, 475.0], [112.0, 621.0], [119.0, 550.0], [118.0, 678.0], [117.0, 653.0], [116.0, 485.0], [120.0, 455.0], [1.0, 33190.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[60.525000000000034, 1390.2999999999997]], "isOverall": false, "label": "Career-Aggregated", "isController": true}, {"data": [[2.0, 55296.0], [17.0, 33207.0], [37.0, 28605.0], [5.0, 42746.0], [47.0, 29313.0], [98.0, 21371.0], [100.0, 22469.0], [109.0, 18211.0], [119.0, 17293.0], [118.0, 9715.0], [116.0, 13467.0], [120.0, 7263.886792452829]], "isOverall": false, "label": "About Us", "isController": true}, {"data": [[115.32499999999999, 9215.766666666665]], "isOverall": false, "label": "About Us-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 120.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 195.83333333333334, "minX": 1.69527666E12, "maxY": 211611.81666666668, "series": [{"data": [[1.69527672E12, 8165.316666666667], [1.69527666E12, 211611.81666666668]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69527672E12, 195.83333333333334], [1.69527666E12, 3642.266666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527672E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1125.8644067796608, "minX": 1.69527666E12, "maxY": 55296.0, "series": [{"data": [[1.69527672E12, 4701.0], [1.69527666E12, 1153.8214285714284]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.69527672E12, 49021.0], [1.69527666E12, 8541.101694915253]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.69527672E12, 16992.0], [1.69527666E12, 1125.8644067796608]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.69527672E12, 55296.0], [1.69527666E12, 8828.537815126048]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527672E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 806.8305084745762, "minX": 1.69527666E12, "maxY": 3647.0, "series": [{"data": [[1.69527672E12, 1018.5], [1.69527666E12, 823.3749999999999]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.69527672E12, 2480.0], [1.69527666E12, 3586.322033898304]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.69527672E12, 2580.0], [1.69527666E12, 806.8305084745762]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.69527672E12, 3647.0], [1.69527666E12, 3567.2184873949573]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527672E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.19491525423728814, "minX": 1.69527666E12, "maxY": 2581.0, "series": [{"data": [[1.69527672E12, 4.625], [1.69527666E12, 0.20535714285714288]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.69527672E12, 1537.0], [1.69527666E12, 2232.9915254237285]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.69527672E12, 18.5], [1.69527666E12, 0.19491525423728814]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.69527672E12, 2581.0], [1.69527666E12, 2218.3697478991594]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527672E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 455.0, "minX": 1.69527666E12, "maxY": 55296.0, "series": [{"data": [[1.69527672E12, 55296.0], [1.69527666E12, 33207.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69527672E12, 54041.0], [1.69527666E12, 10645.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69527672E12, 55296.0], [1.69527666E12, 29100.59999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69527672E12, 55296.0], [1.69527666E12, 12873.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69527672E12, 473.0], [1.69527666E12, 455.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69527672E12, 731.0], [1.69527666E12, 2973.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527672E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 552.0, "minX": 1.0, "maxY": 15839.0, "series": [{"data": [[2.0, 889.5], [8.0, 756.0], [9.0, 794.0], [10.0, 734.0], [11.0, 8145.0], [3.0, 2630.0], [12.0, 1053.0], [13.0, 3974.0], [14.0, 8009.5], [15.0, 2565.0], [1.0, 736.0], [4.0, 552.0], [5.0, 4037.0], [21.0, 9109.0], [6.0, 2982.0], [7.0, 4564.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 15839.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 3457.0, "series": [{"data": [[2.0, 446.5], [8.0, 673.0], [9.0, 643.0], [10.0, 652.5], [11.0, 3125.0], [3.0, 1237.0], [12.0, 843.5], [13.0, 1353.0], [14.0, 2943.0], [15.0, 1484.0], [1.0, 661.0], [4.0, 482.0], [5.0, 2001.0], [21.0, 3457.0], [6.0, 1572.0], [7.0, 1957.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[4.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 21.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.69527666E12, "maxY": 3.8666666666666667, "series": [{"data": [[1.69527672E12, 0.13333333333333333], [1.69527666E12, 3.8666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527672E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69527666E12, "maxY": 3.816666666666667, "series": [{"data": [[1.69527672E12, 0.16666666666666666], [1.69527666E12, 3.816666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69527666E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527672E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69527666E12, "maxY": 1.9666666666666666, "series": [{"data": [[1.69527672E12, 0.03333333333333333], [1.69527666E12, 1.9666666666666666]], "isOverall": false, "label": "Career-success", "isController": true}, {"data": [[1.69527672E12, 0.03333333333333333], [1.69527666E12, 1.95]], "isOverall": false, "label": "HTTP Request - About Us-success", "isController": false}, {"data": [[1.69527666E12, 0.016666666666666666]], "isOverall": false, "label": "HTTP Request - About Us-failure", "isController": false}, {"data": [[1.69527672E12, 0.016666666666666666], [1.69527666E12, 1.9666666666666666]], "isOverall": false, "label": "About Us-success", "isController": true}, {"data": [[1.69527672E12, 0.13333333333333333], [1.69527666E12, 1.8666666666666667]], "isOverall": false, "label": "HTTP Request - Carrer-success", "isController": false}, {"data": [[1.69527666E12, 0.016666666666666666]], "isOverall": false, "label": "About Us-failure", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527672E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.69527666E12, "maxY": 7.75, "series": [{"data": [[1.69527672E12, 0.21666666666666667], [1.69527666E12, 7.75]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69527666E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527672E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

