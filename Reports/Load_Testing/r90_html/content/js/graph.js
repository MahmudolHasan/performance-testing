/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 447.0, "minX": 0.0, "maxY": 24370.0, "series": [{"data": [[0.0, 447.0], [0.1, 447.0], [0.2, 447.0], [0.3, 447.0], [0.4, 447.0], [0.5, 447.0], [0.6, 453.0], [0.7, 453.0], [0.8, 453.0], [0.9, 453.0], [1.0, 453.0], [1.1, 453.0], [1.2, 454.0], [1.3, 454.0], [1.4, 454.0], [1.5, 454.0], [1.6, 454.0], [1.7, 455.0], [1.8, 455.0], [1.9, 455.0], [2.0, 455.0], [2.1, 455.0], [2.2, 455.0], [2.3, 458.0], [2.4, 458.0], [2.5, 458.0], [2.6, 458.0], [2.7, 458.0], [2.8, 465.0], [2.9, 465.0], [3.0, 465.0], [3.1, 465.0], [3.2, 465.0], [3.3, 465.0], [3.4, 465.0], [3.5, 465.0], [3.6, 465.0], [3.7, 465.0], [3.8, 465.0], [3.9, 465.0], [4.0, 470.0], [4.1, 470.0], [4.2, 470.0], [4.3, 470.0], [4.4, 470.0], [4.5, 474.0], [4.6, 474.0], [4.7, 474.0], [4.8, 474.0], [4.9, 474.0], [5.0, 474.0], [5.1, 476.0], [5.2, 476.0], [5.3, 476.0], [5.4, 476.0], [5.5, 476.0], [5.6, 478.0], [5.7, 478.0], [5.8, 478.0], [5.9, 478.0], [6.0, 478.0], [6.1, 478.0], [6.2, 478.0], [6.3, 478.0], [6.4, 478.0], [6.5, 478.0], [6.6, 478.0], [6.7, 478.0], [6.8, 486.0], [6.9, 486.0], [7.0, 486.0], [7.1, 486.0], [7.2, 486.0], [7.3, 487.0], [7.4, 487.0], [7.5, 487.0], [7.6, 487.0], [7.7, 487.0], [7.8, 487.0], [7.9, 488.0], [8.0, 488.0], [8.1, 488.0], [8.2, 488.0], [8.3, 488.0], [8.4, 489.0], [8.5, 489.0], [8.6, 489.0], [8.7, 489.0], [8.8, 489.0], [8.9, 489.0], [9.0, 494.0], [9.1, 494.0], [9.2, 494.0], [9.3, 494.0], [9.4, 494.0], [9.5, 496.0], [9.6, 496.0], [9.7, 496.0], [9.8, 496.0], [9.9, 496.0], [10.0, 496.0], [10.1, 499.0], [10.2, 499.0], [10.3, 499.0], [10.4, 499.0], [10.5, 499.0], [10.6, 499.0], [10.7, 500.0], [10.8, 500.0], [10.9, 500.0], [11.0, 500.0], [11.1, 500.0], [11.2, 500.0], [11.3, 500.0], [11.4, 500.0], [11.5, 500.0], [11.6, 500.0], [11.7, 500.0], [11.8, 502.0], [11.9, 502.0], [12.0, 502.0], [12.1, 502.0], [12.2, 502.0], [12.3, 506.0], [12.4, 506.0], [12.5, 506.0], [12.6, 506.0], [12.7, 506.0], [12.8, 506.0], [12.9, 510.0], [13.0, 510.0], [13.1, 510.0], [13.2, 510.0], [13.3, 510.0], [13.4, 510.0], [13.5, 511.0], [13.6, 511.0], [13.7, 511.0], [13.8, 511.0], [13.9, 511.0], [14.0, 518.0], [14.1, 518.0], [14.2, 518.0], [14.3, 518.0], [14.4, 518.0], [14.5, 518.0], [14.6, 522.0], [14.7, 522.0], [14.8, 522.0], [14.9, 522.0], [15.0, 522.0], [15.1, 523.0], [15.2, 523.0], [15.3, 523.0], [15.4, 523.0], [15.5, 523.0], [15.6, 523.0], [15.7, 524.0], [15.8, 524.0], [15.9, 524.0], [16.0, 524.0], [16.1, 524.0], [16.2, 524.0], [16.3, 525.0], [16.4, 525.0], [16.5, 525.0], [16.6, 525.0], [16.7, 525.0], [16.8, 526.0], [16.9, 526.0], [17.0, 526.0], [17.1, 526.0], [17.2, 526.0], [17.3, 526.0], [17.4, 531.0], [17.5, 531.0], [17.6, 531.0], [17.7, 531.0], [17.8, 531.0], [17.9, 536.0], [18.0, 536.0], [18.1, 536.0], [18.2, 536.0], [18.3, 536.0], [18.4, 536.0], [18.5, 536.0], [18.6, 536.0], [18.7, 536.0], [18.8, 536.0], [18.9, 536.0], [19.0, 540.0], [19.1, 540.0], [19.2, 540.0], [19.3, 540.0], [19.4, 540.0], [19.5, 540.0], [19.6, 541.0], [19.7, 541.0], [19.8, 541.0], [19.9, 541.0], [20.0, 541.0], [20.1, 541.0], [20.2, 542.0], [20.3, 542.0], [20.4, 542.0], [20.5, 542.0], [20.6, 542.0], [20.7, 546.0], [20.8, 546.0], [20.9, 546.0], [21.0, 546.0], [21.1, 546.0], [21.2, 546.0], [21.3, 551.0], [21.4, 551.0], [21.5, 551.0], [21.6, 551.0], [21.7, 551.0], [21.8, 566.0], [21.9, 566.0], [22.0, 566.0], [22.1, 566.0], [22.2, 566.0], [22.3, 566.0], [22.4, 569.0], [22.5, 569.0], [22.6, 569.0], [22.7, 569.0], [22.8, 569.0], [22.9, 569.0], [23.0, 573.0], [23.1, 573.0], [23.2, 573.0], [23.3, 573.0], [23.4, 573.0], [23.5, 575.0], [23.6, 575.0], [23.7, 575.0], [23.8, 575.0], [23.9, 575.0], [24.0, 575.0], [24.1, 581.0], [24.2, 581.0], [24.3, 581.0], [24.4, 581.0], [24.5, 581.0], [24.6, 582.0], [24.7, 582.0], [24.8, 582.0], [24.9, 582.0], [25.0, 582.0], [25.1, 582.0], [25.2, 592.0], [25.3, 592.0], [25.4, 592.0], [25.5, 592.0], [25.6, 592.0], [25.7, 595.0], [25.8, 595.0], [25.9, 595.0], [26.0, 595.0], [26.1, 595.0], [26.2, 595.0], [26.3, 595.0], [26.4, 595.0], [26.5, 595.0], [26.6, 595.0], [26.7, 595.0], [26.8, 595.0], [26.9, 598.0], [27.0, 598.0], [27.1, 598.0], [27.2, 598.0], [27.3, 598.0], [27.4, 599.0], [27.5, 599.0], [27.6, 599.0], [27.7, 599.0], [27.8, 599.0], [27.9, 599.0], [28.0, 605.0], [28.1, 605.0], [28.2, 605.0], [28.3, 605.0], [28.4, 605.0], [28.5, 607.0], [28.6, 607.0], [28.7, 607.0], [28.8, 607.0], [28.9, 607.0], [29.0, 607.0], [29.1, 639.0], [29.2, 639.0], [29.3, 639.0], [29.4, 639.0], [29.5, 639.0], [29.6, 639.0], [29.7, 642.0], [29.8, 642.0], [29.9, 642.0], [30.0, 642.0], [30.1, 642.0], [30.2, 651.0], [30.3, 651.0], [30.4, 651.0], [30.5, 651.0], [30.6, 651.0], [30.7, 651.0], [30.8, 654.0], [30.9, 654.0], [31.0, 654.0], [31.1, 654.0], [31.2, 654.0], [31.3, 654.0], [31.4, 654.0], [31.5, 654.0], [31.6, 654.0], [31.7, 654.0], [31.8, 654.0], [31.9, 657.0], [32.0, 657.0], [32.1, 657.0], [32.2, 657.0], [32.3, 657.0], [32.4, 657.0], [32.5, 659.0], [32.6, 659.0], [32.7, 659.0], [32.8, 659.0], [32.9, 659.0], [33.0, 659.0], [33.1, 659.0], [33.2, 659.0], [33.3, 659.0], [33.4, 659.0], [33.5, 659.0], [33.6, 670.0], [33.7, 670.0], [33.8, 670.0], [33.9, 670.0], [34.0, 670.0], [34.1, 675.0], [34.2, 675.0], [34.3, 675.0], [34.4, 675.0], [34.5, 675.0], [34.6, 675.0], [34.7, 676.0], [34.8, 676.0], [34.9, 676.0], [35.0, 676.0], [35.1, 676.0], [35.2, 680.0], [35.3, 680.0], [35.4, 680.0], [35.5, 680.0], [35.6, 680.0], [35.7, 680.0], [35.8, 680.0], [35.9, 680.0], [36.0, 680.0], [36.1, 680.0], [36.2, 680.0], [36.3, 680.0], [36.4, 680.0], [36.5, 680.0], [36.6, 680.0], [36.7, 680.0], [36.8, 680.0], [36.9, 680.0], [37.0, 680.0], [37.1, 680.0], [37.2, 680.0], [37.3, 680.0], [37.4, 680.0], [37.5, 684.0], [37.6, 684.0], [37.7, 684.0], [37.8, 684.0], [37.9, 684.0], [38.0, 701.0], [38.1, 701.0], [38.2, 701.0], [38.3, 701.0], [38.4, 701.0], [38.5, 701.0], [38.6, 717.0], [38.7, 717.0], [38.8, 717.0], [38.9, 717.0], [39.0, 717.0], [39.1, 717.0], [39.2, 724.0], [39.3, 724.0], [39.4, 724.0], [39.5, 724.0], [39.6, 724.0], [39.7, 727.0], [39.8, 727.0], [39.9, 727.0], [40.0, 727.0], [40.1, 727.0], [40.2, 727.0], [40.3, 731.0], [40.4, 731.0], [40.5, 731.0], [40.6, 731.0], [40.7, 731.0], [40.8, 740.0], [40.9, 740.0], [41.0, 740.0], [41.1, 740.0], [41.2, 740.0], [41.3, 740.0], [41.4, 741.0], [41.5, 741.0], [41.6, 741.0], [41.7, 741.0], [41.8, 741.0], [41.9, 747.0], [42.0, 747.0], [42.1, 747.0], [42.2, 747.0], [42.3, 747.0], [42.4, 747.0], [42.5, 747.0], [42.6, 747.0], [42.7, 747.0], [42.8, 747.0], [42.9, 747.0], [43.0, 747.0], [43.1, 751.0], [43.2, 751.0], [43.3, 751.0], [43.4, 751.0], [43.5, 751.0], [43.6, 781.0], [43.7, 781.0], [43.8, 781.0], [43.9, 781.0], [44.0, 781.0], [44.1, 781.0], [44.2, 785.0], [44.3, 785.0], [44.4, 785.0], [44.5, 785.0], [44.6, 785.0], [44.7, 789.0], [44.8, 789.0], [44.9, 789.0], [45.0, 789.0], [45.1, 789.0], [45.2, 789.0], [45.3, 793.0], [45.4, 793.0], [45.5, 793.0], [45.6, 793.0], [45.7, 793.0], [45.8, 793.0], [45.9, 796.0], [46.0, 796.0], [46.1, 796.0], [46.2, 796.0], [46.3, 796.0], [46.4, 813.0], [46.5, 813.0], [46.6, 813.0], [46.7, 813.0], [46.8, 813.0], [46.9, 813.0], [47.0, 818.0], [47.1, 818.0], [47.2, 818.0], [47.3, 818.0], [47.4, 818.0], [47.5, 818.0], [47.6, 818.0], [47.7, 818.0], [47.8, 818.0], [47.9, 818.0], [48.0, 818.0], [48.1, 819.0], [48.2, 819.0], [48.3, 819.0], [48.4, 819.0], [48.5, 819.0], [48.6, 819.0], [48.7, 822.0], [48.8, 822.0], [48.9, 822.0], [49.0, 822.0], [49.1, 822.0], [49.2, 822.0], [49.3, 822.0], [49.4, 822.0], [49.5, 822.0], [49.6, 822.0], [49.7, 822.0], [49.8, 843.0], [49.9, 843.0], [50.0, 843.0], [50.1, 843.0], [50.2, 843.0], [50.3, 853.0], [50.4, 853.0], [50.5, 853.0], [50.6, 853.0], [50.7, 853.0], [50.8, 853.0], [50.9, 864.0], [51.0, 864.0], [51.1, 864.0], [51.2, 864.0], [51.3, 864.0], [51.4, 870.0], [51.5, 870.0], [51.6, 870.0], [51.7, 870.0], [51.8, 870.0], [51.9, 870.0], [52.0, 895.0], [52.1, 895.0], [52.2, 895.0], [52.3, 895.0], [52.4, 895.0], [52.5, 895.0], [52.6, 908.0], [52.7, 908.0], [52.8, 908.0], [52.9, 908.0], [53.0, 908.0], [53.1, 929.0], [53.2, 929.0], [53.3, 929.0], [53.4, 929.0], [53.5, 929.0], [53.6, 929.0], [53.7, 939.0], [53.8, 939.0], [53.9, 939.0], [54.0, 939.0], [54.1, 939.0], [54.2, 958.0], [54.3, 958.0], [54.4, 958.0], [54.5, 958.0], [54.6, 958.0], [54.7, 958.0], [54.8, 969.0], [54.9, 969.0], [55.0, 969.0], [55.1, 969.0], [55.2, 969.0], [55.3, 969.0], [55.4, 973.0], [55.5, 973.0], [55.6, 973.0], [55.7, 973.0], [55.8, 973.0], [55.9, 978.0], [56.0, 978.0], [56.1, 978.0], [56.2, 978.0], [56.3, 978.0], [56.4, 978.0], [56.5, 996.0], [56.6, 996.0], [56.7, 996.0], [56.8, 996.0], [56.9, 996.0], [57.0, 1017.0], [57.1, 1017.0], [57.2, 1017.0], [57.3, 1017.0], [57.4, 1017.0], [57.5, 1017.0], [57.6, 1023.0], [57.7, 1023.0], [57.8, 1023.0], [57.9, 1023.0], [58.0, 1023.0], [58.1, 1023.0], [58.2, 1027.0], [58.3, 1027.0], [58.4, 1027.0], [58.5, 1027.0], [58.6, 1027.0], [58.7, 1032.0], [58.8, 1032.0], [58.9, 1032.0], [59.0, 1032.0], [59.1, 1032.0], [59.2, 1032.0], [59.3, 1058.0], [59.4, 1058.0], [59.5, 1058.0], [59.6, 1058.0], [59.7, 1058.0], [59.8, 1065.0], [59.9, 1065.0], [60.0, 1065.0], [60.1, 1065.0], [60.2, 1065.0], [60.3, 1065.0], [60.4, 1074.0], [60.5, 1074.0], [60.6, 1074.0], [60.7, 1074.0], [60.8, 1074.0], [60.9, 1086.0], [61.0, 1086.0], [61.1, 1086.0], [61.2, 1086.0], [61.3, 1086.0], [61.4, 1086.0], [61.5, 1089.0], [61.6, 1089.0], [61.7, 1089.0], [61.8, 1089.0], [61.9, 1089.0], [62.0, 1089.0], [62.1, 1091.0], [62.2, 1091.0], [62.3, 1091.0], [62.4, 1091.0], [62.5, 1091.0], [62.6, 1099.0], [62.7, 1099.0], [62.8, 1099.0], [62.9, 1099.0], [63.0, 1099.0], [63.1, 1099.0], [63.2, 1111.0], [63.3, 1111.0], [63.4, 1111.0], [63.5, 1111.0], [63.6, 1111.0], [63.7, 1129.0], [63.8, 1129.0], [63.9, 1129.0], [64.0, 1129.0], [64.1, 1129.0], [64.2, 1129.0], [64.3, 1132.0], [64.4, 1132.0], [64.5, 1132.0], [64.6, 1132.0], [64.7, 1132.0], [64.8, 1132.0], [64.9, 1172.0], [65.0, 1172.0], [65.1, 1172.0], [65.2, 1172.0], [65.3, 1172.0], [65.4, 1260.0], [65.5, 1260.0], [65.6, 1260.0], [65.7, 1260.0], [65.8, 1260.0], [65.9, 1260.0], [66.0, 1266.0], [66.1, 1266.0], [66.2, 1266.0], [66.3, 1266.0], [66.4, 1266.0], [66.5, 1267.0], [66.6, 1267.0], [66.7, 1267.0], [66.8, 1267.0], [66.9, 1267.0], [67.0, 1267.0], [67.1, 1283.0], [67.2, 1283.0], [67.3, 1283.0], [67.4, 1283.0], [67.5, 1283.0], [67.6, 1288.0], [67.7, 1288.0], [67.8, 1288.0], [67.9, 1288.0], [68.0, 1288.0], [68.1, 1288.0], [68.2, 1316.0], [68.3, 1316.0], [68.4, 1316.0], [68.5, 1316.0], [68.6, 1316.0], [68.7, 1316.0], [68.8, 1321.0], [68.9, 1321.0], [69.0, 1321.0], [69.1, 1321.0], [69.2, 1321.0], [69.3, 1408.0], [69.4, 1408.0], [69.5, 1408.0], [69.6, 1408.0], [69.7, 1408.0], [69.8, 1408.0], [69.9, 1422.0], [70.0, 1422.0], [70.1, 1422.0], [70.2, 1422.0], [70.3, 1422.0], [70.4, 1437.0], [70.5, 1437.0], [70.6, 1437.0], [70.7, 1437.0], [70.8, 1437.0], [70.9, 1437.0], [71.0, 1438.0], [71.1, 1438.0], [71.2, 1438.0], [71.3, 1438.0], [71.4, 1438.0], [71.5, 1438.0], [71.6, 1448.0], [71.7, 1448.0], [71.8, 1448.0], [71.9, 1448.0], [72.0, 1448.0], [72.1, 1482.0], [72.2, 1482.0], [72.3, 1482.0], [72.4, 1482.0], [72.5, 1482.0], [72.6, 1482.0], [72.7, 1506.0], [72.8, 1506.0], [72.9, 1506.0], [73.0, 1506.0], [73.1, 1506.0], [73.2, 1527.0], [73.3, 1527.0], [73.4, 1527.0], [73.5, 1527.0], [73.6, 1527.0], [73.7, 1527.0], [73.8, 1560.0], [73.9, 1560.0], [74.0, 1560.0], [74.1, 1560.0], [74.2, 1560.0], [74.3, 1560.0], [74.4, 1567.0], [74.5, 1567.0], [74.6, 1567.0], [74.7, 1567.0], [74.8, 1567.0], [74.9, 1626.0], [75.0, 1626.0], [75.1, 1626.0], [75.2, 1626.0], [75.3, 1626.0], [75.4, 1626.0], [75.5, 1664.0], [75.6, 1664.0], [75.7, 1664.0], [75.8, 1664.0], [75.9, 1664.0], [76.0, 1699.0], [76.1, 1699.0], [76.2, 1699.0], [76.3, 1699.0], [76.4, 1699.0], [76.5, 1699.0], [76.6, 1712.0], [76.7, 1712.0], [76.8, 1712.0], [76.9, 1712.0], [77.0, 1712.0], [77.1, 1742.0], [77.2, 1742.0], [77.3, 1742.0], [77.4, 1742.0], [77.5, 1742.0], [77.6, 1742.0], [77.7, 1793.0], [77.8, 1793.0], [77.9, 1793.0], [78.0, 1793.0], [78.1, 1793.0], [78.2, 1793.0], [78.3, 1823.0], [78.4, 1823.0], [78.5, 1823.0], [78.6, 1823.0], [78.7, 1823.0], [78.8, 1974.0], [78.9, 1974.0], [79.0, 1974.0], [79.1, 1974.0], [79.2, 1974.0], [79.3, 1974.0], [79.4, 2016.0], [79.5, 2016.0], [79.6, 2016.0], [79.7, 2016.0], [79.8, 2016.0], [79.9, 2144.0], [80.0, 2144.0], [80.1, 2144.0], [80.2, 2144.0], [80.3, 2144.0], [80.4, 2144.0], [80.5, 2183.0], [80.6, 2183.0], [80.7, 2183.0], [80.8, 2183.0], [80.9, 2183.0], [81.0, 2183.0], [81.1, 2235.0], [81.2, 2235.0], [81.3, 2235.0], [81.4, 2235.0], [81.5, 2235.0], [81.6, 2242.0], [81.7, 2242.0], [81.8, 2242.0], [81.9, 2242.0], [82.0, 2242.0], [82.1, 2242.0], [82.2, 2250.0], [82.3, 2250.0], [82.4, 2250.0], [82.5, 2250.0], [82.6, 2250.0], [82.7, 2287.0], [82.8, 2287.0], [82.9, 2287.0], [83.0, 2287.0], [83.1, 2287.0], [83.2, 2287.0], [83.3, 2311.0], [83.4, 2311.0], [83.5, 2311.0], [83.6, 2311.0], [83.7, 2311.0], [83.8, 2324.0], [83.9, 2324.0], [84.0, 2324.0], [84.1, 2324.0], [84.2, 2324.0], [84.3, 2324.0], [84.4, 2447.0], [84.5, 2447.0], [84.6, 2447.0], [84.7, 2447.0], [84.8, 2447.0], [84.9, 2447.0], [85.0, 2453.0], [85.1, 2453.0], [85.2, 2453.0], [85.3, 2453.0], [85.4, 2453.0], [85.5, 2459.0], [85.6, 2459.0], [85.7, 2459.0], [85.8, 2459.0], [85.9, 2459.0], [86.0, 2459.0], [86.1, 2461.0], [86.2, 2461.0], [86.3, 2461.0], [86.4, 2461.0], [86.5, 2461.0], [86.6, 2561.0], [86.7, 2561.0], [86.8, 2561.0], [86.9, 2561.0], [87.0, 2561.0], [87.1, 2561.0], [87.2, 2691.0], [87.3, 2691.0], [87.4, 2691.0], [87.5, 2691.0], [87.6, 2691.0], [87.7, 2691.0], [87.8, 2789.0], [87.9, 2789.0], [88.0, 2789.0], [88.1, 2789.0], [88.2, 2789.0], [88.3, 2843.0], [88.4, 2843.0], [88.5, 2843.0], [88.6, 2843.0], [88.7, 2843.0], [88.8, 2843.0], [88.9, 2851.0], [89.0, 2851.0], [89.1, 2851.0], [89.2, 2851.0], [89.3, 2851.0], [89.4, 2855.0], [89.5, 2855.0], [89.6, 2855.0], [89.7, 2855.0], [89.8, 2855.0], [89.9, 2855.0], [90.0, 2857.0], [90.1, 2857.0], [90.2, 2857.0], [90.3, 2857.0], [90.4, 2857.0], [90.5, 2857.0], [90.6, 2967.0], [90.7, 2967.0], [90.8, 2967.0], [90.9, 2967.0], [91.0, 2967.0], [91.1, 2968.0], [91.2, 2968.0], [91.3, 2968.0], [91.4, 2968.0], [91.5, 2968.0], [91.6, 2968.0], [91.7, 2969.0], [91.8, 2969.0], [91.9, 2969.0], [92.0, 2969.0], [92.1, 2969.0], [92.2, 3048.0], [92.3, 3048.0], [92.4, 3048.0], [92.5, 3048.0], [92.6, 3048.0], [92.7, 3048.0], [92.8, 3137.0], [92.9, 3137.0], [93.0, 3137.0], [93.1, 3137.0], [93.2, 3137.0], [93.3, 3219.0], [93.4, 3219.0], [93.5, 3219.0], [93.6, 3219.0], [93.7, 3219.0], [93.8, 3219.0], [93.9, 3388.0], [94.0, 3388.0], [94.1, 3388.0], [94.2, 3388.0], [94.3, 3388.0], [94.4, 3388.0], [94.5, 3399.0], [94.6, 3399.0], [94.7, 3399.0], [94.8, 3399.0], [94.9, 3399.0], [95.0, 3519.0], [95.1, 3519.0], [95.2, 3519.0], [95.3, 3519.0], [95.4, 3519.0], [95.5, 3519.0], [95.6, 3605.0], [95.7, 3605.0], [95.8, 3605.0], [95.9, 3605.0], [96.0, 3605.0], [96.1, 3614.0], [96.2, 3614.0], [96.3, 3614.0], [96.4, 3614.0], [96.5, 3614.0], [96.6, 3614.0], [96.7, 3823.0], [96.8, 3823.0], [96.9, 3823.0], [97.0, 3823.0], [97.1, 3823.0], [97.2, 3823.0], [97.3, 3852.0], [97.4, 3852.0], [97.5, 3852.0], [97.6, 3852.0], [97.7, 3852.0], [97.8, 3867.0], [97.9, 3867.0], [98.0, 3867.0], [98.1, 3867.0], [98.2, 3867.0], [98.3, 3867.0], [98.4, 4431.0], [98.5, 4431.0], [98.6, 4431.0], [98.7, 4431.0], [98.8, 4431.0], [98.9, 4783.0], [99.0, 4783.0], [99.1, 4783.0], [99.2, 4783.0], [99.3, 4783.0], [99.4, 4783.0], [99.5, 5259.0], [99.6, 5259.0], [99.7, 5259.0], [99.8, 5259.0], [99.9, 5259.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[0.0, 1741.0], [0.1, 1741.0], [0.2, 1741.0], [0.3, 1741.0], [0.4, 1741.0], [0.5, 1741.0], [0.6, 1753.0], [0.7, 1753.0], [0.8, 1753.0], [0.9, 1753.0], [1.0, 1753.0], [1.1, 1753.0], [1.2, 1773.0], [1.3, 1773.0], [1.4, 1773.0], [1.5, 1773.0], [1.6, 1773.0], [1.7, 1885.0], [1.8, 1885.0], [1.9, 1885.0], [2.0, 1885.0], [2.1, 1885.0], [2.2, 1885.0], [2.3, 1933.0], [2.4, 1933.0], [2.5, 1933.0], [2.6, 1933.0], [2.7, 1933.0], [2.8, 2067.0], [2.9, 2067.0], [3.0, 2067.0], [3.1, 2067.0], [3.2, 2067.0], [3.3, 2067.0], [3.4, 2080.0], [3.5, 2080.0], [3.6, 2080.0], [3.7, 2080.0], [3.8, 2080.0], [3.9, 2080.0], [4.0, 2146.0], [4.1, 2146.0], [4.2, 2146.0], [4.3, 2146.0], [4.4, 2146.0], [4.5, 2161.0], [4.6, 2161.0], [4.7, 2161.0], [4.8, 2161.0], [4.9, 2161.0], [5.0, 2161.0], [5.1, 2203.0], [5.2, 2203.0], [5.3, 2203.0], [5.4, 2203.0], [5.5, 2203.0], [5.6, 2229.0], [5.7, 2229.0], [5.8, 2229.0], [5.9, 2229.0], [6.0, 2229.0], [6.1, 2229.0], [6.2, 2232.0], [6.3, 2232.0], [6.4, 2232.0], [6.5, 2232.0], [6.6, 2232.0], [6.7, 2232.0], [6.8, 2251.0], [6.9, 2251.0], [7.0, 2251.0], [7.1, 2251.0], [7.2, 2251.0], [7.3, 2257.0], [7.4, 2257.0], [7.5, 2257.0], [7.6, 2257.0], [7.7, 2257.0], [7.8, 2257.0], [7.9, 2288.0], [8.0, 2288.0], [8.1, 2288.0], [8.2, 2288.0], [8.3, 2288.0], [8.4, 2290.0], [8.5, 2290.0], [8.6, 2290.0], [8.7, 2290.0], [8.8, 2290.0], [8.9, 2290.0], [9.0, 2324.0], [9.1, 2324.0], [9.2, 2324.0], [9.3, 2324.0], [9.4, 2324.0], [9.5, 2328.0], [9.6, 2328.0], [9.7, 2328.0], [9.8, 2328.0], [9.9, 2328.0], [10.0, 2328.0], [10.1, 2390.0], [10.2, 2390.0], [10.3, 2390.0], [10.4, 2390.0], [10.5, 2390.0], [10.6, 2390.0], [10.7, 2420.0], [10.8, 2420.0], [10.9, 2420.0], [11.0, 2420.0], [11.1, 2420.0], [11.2, 2448.0], [11.3, 2448.0], [11.4, 2448.0], [11.5, 2448.0], [11.6, 2448.0], [11.7, 2448.0], [11.8, 2458.0], [11.9, 2458.0], [12.0, 2458.0], [12.1, 2458.0], [12.2, 2458.0], [12.3, 2494.0], [12.4, 2494.0], [12.5, 2494.0], [12.6, 2494.0], [12.7, 2494.0], [12.8, 2494.0], [12.9, 2532.0], [13.0, 2532.0], [13.1, 2532.0], [13.2, 2532.0], [13.3, 2532.0], [13.4, 2532.0], [13.5, 2540.0], [13.6, 2540.0], [13.7, 2540.0], [13.8, 2540.0], [13.9, 2540.0], [14.0, 2591.0], [14.1, 2591.0], [14.2, 2591.0], [14.3, 2591.0], [14.4, 2591.0], [14.5, 2591.0], [14.6, 2640.0], [14.7, 2640.0], [14.8, 2640.0], [14.9, 2640.0], [15.0, 2640.0], [15.1, 2642.0], [15.2, 2642.0], [15.3, 2642.0], [15.4, 2642.0], [15.5, 2642.0], [15.6, 2642.0], [15.7, 2655.0], [15.8, 2655.0], [15.9, 2655.0], [16.0, 2655.0], [16.1, 2655.0], [16.2, 2655.0], [16.3, 2667.0], [16.4, 2667.0], [16.5, 2667.0], [16.6, 2667.0], [16.7, 2667.0], [16.8, 2711.0], [16.9, 2711.0], [17.0, 2711.0], [17.1, 2711.0], [17.2, 2711.0], [17.3, 2711.0], [17.4, 2715.0], [17.5, 2715.0], [17.6, 2715.0], [17.7, 2715.0], [17.8, 2715.0], [17.9, 2747.0], [18.0, 2747.0], [18.1, 2747.0], [18.2, 2747.0], [18.3, 2747.0], [18.4, 2747.0], [18.5, 2748.0], [18.6, 2748.0], [18.7, 2748.0], [18.8, 2748.0], [18.9, 2748.0], [19.0, 2795.0], [19.1, 2795.0], [19.2, 2795.0], [19.3, 2795.0], [19.4, 2795.0], [19.5, 2795.0], [19.6, 2801.0], [19.7, 2801.0], [19.8, 2801.0], [19.9, 2801.0], [20.0, 2801.0], [20.1, 2801.0], [20.2, 2833.0], [20.3, 2833.0], [20.4, 2833.0], [20.5, 2833.0], [20.6, 2833.0], [20.7, 2834.0], [20.8, 2834.0], [20.9, 2834.0], [21.0, 2834.0], [21.1, 2834.0], [21.2, 2834.0], [21.3, 2835.0], [21.4, 2835.0], [21.5, 2835.0], [21.6, 2835.0], [21.7, 2835.0], [21.8, 2848.0], [21.9, 2848.0], [22.0, 2848.0], [22.1, 2848.0], [22.2, 2848.0], [22.3, 2848.0], [22.4, 2882.0], [22.5, 2882.0], [22.6, 2882.0], [22.7, 2882.0], [22.8, 2882.0], [22.9, 2882.0], [23.0, 2906.0], [23.1, 2906.0], [23.2, 2906.0], [23.3, 2906.0], [23.4, 2906.0], [23.5, 2920.0], [23.6, 2920.0], [23.7, 2920.0], [23.8, 2920.0], [23.9, 2920.0], [24.0, 2920.0], [24.1, 2920.0], [24.2, 2920.0], [24.3, 2920.0], [24.4, 2920.0], [24.5, 2920.0], [24.6, 2934.0], [24.7, 2934.0], [24.8, 2934.0], [24.9, 2934.0], [25.0, 2934.0], [25.1, 2934.0], [25.2, 3007.0], [25.3, 3007.0], [25.4, 3007.0], [25.5, 3007.0], [25.6, 3007.0], [25.7, 3087.0], [25.8, 3087.0], [25.9, 3087.0], [26.0, 3087.0], [26.1, 3087.0], [26.2, 3087.0], [26.3, 3090.0], [26.4, 3090.0], [26.5, 3090.0], [26.6, 3090.0], [26.7, 3090.0], [26.8, 3090.0], [26.9, 3091.0], [27.0, 3091.0], [27.1, 3091.0], [27.2, 3091.0], [27.3, 3091.0], [27.4, 3102.0], [27.5, 3102.0], [27.6, 3102.0], [27.7, 3102.0], [27.8, 3102.0], [27.9, 3102.0], [28.0, 3125.0], [28.1, 3125.0], [28.2, 3125.0], [28.3, 3125.0], [28.4, 3125.0], [28.5, 3160.0], [28.6, 3160.0], [28.7, 3160.0], [28.8, 3160.0], [28.9, 3160.0], [29.0, 3160.0], [29.1, 3179.0], [29.2, 3179.0], [29.3, 3179.0], [29.4, 3179.0], [29.5, 3179.0], [29.6, 3179.0], [29.7, 3258.0], [29.8, 3258.0], [29.9, 3258.0], [30.0, 3258.0], [30.1, 3258.0], [30.2, 3278.0], [30.3, 3278.0], [30.4, 3278.0], [30.5, 3278.0], [30.6, 3278.0], [30.7, 3278.0], [30.8, 3346.0], [30.9, 3346.0], [31.0, 3346.0], [31.1, 3346.0], [31.2, 3346.0], [31.3, 3468.0], [31.4, 3468.0], [31.5, 3468.0], [31.6, 3468.0], [31.7, 3468.0], [31.8, 3468.0], [31.9, 3468.0], [32.0, 3468.0], [32.1, 3468.0], [32.2, 3468.0], [32.3, 3468.0], [32.4, 3468.0], [32.5, 3479.0], [32.6, 3479.0], [32.7, 3479.0], [32.8, 3479.0], [32.9, 3479.0], [33.0, 3515.0], [33.1, 3515.0], [33.2, 3515.0], [33.3, 3515.0], [33.4, 3515.0], [33.5, 3515.0], [33.6, 3518.0], [33.7, 3518.0], [33.8, 3518.0], [33.9, 3518.0], [34.0, 3518.0], [34.1, 3518.0], [34.2, 3518.0], [34.3, 3518.0], [34.4, 3518.0], [34.5, 3518.0], [34.6, 3518.0], [34.7, 3592.0], [34.8, 3592.0], [34.9, 3592.0], [35.0, 3592.0], [35.1, 3592.0], [35.2, 3598.0], [35.3, 3598.0], [35.4, 3598.0], [35.5, 3598.0], [35.6, 3598.0], [35.7, 3598.0], [35.8, 3613.0], [35.9, 3613.0], [36.0, 3613.0], [36.1, 3613.0], [36.2, 3613.0], [36.3, 3613.0], [36.4, 3615.0], [36.5, 3615.0], [36.6, 3615.0], [36.7, 3615.0], [36.8, 3615.0], [36.9, 3627.0], [37.0, 3627.0], [37.1, 3627.0], [37.2, 3627.0], [37.3, 3627.0], [37.4, 3627.0], [37.5, 3734.0], [37.6, 3734.0], [37.7, 3734.0], [37.8, 3734.0], [37.9, 3734.0], [38.0, 3737.0], [38.1, 3737.0], [38.2, 3737.0], [38.3, 3737.0], [38.4, 3737.0], [38.5, 3737.0], [38.6, 3747.0], [38.7, 3747.0], [38.8, 3747.0], [38.9, 3747.0], [39.0, 3747.0], [39.1, 3747.0], [39.2, 3759.0], [39.3, 3759.0], [39.4, 3759.0], [39.5, 3759.0], [39.6, 3759.0], [39.7, 3790.0], [39.8, 3790.0], [39.9, 3790.0], [40.0, 3790.0], [40.1, 3790.0], [40.2, 3790.0], [40.3, 3809.0], [40.4, 3809.0], [40.5, 3809.0], [40.6, 3809.0], [40.7, 3809.0], [40.8, 3833.0], [40.9, 3833.0], [41.0, 3833.0], [41.1, 3833.0], [41.2, 3833.0], [41.3, 3833.0], [41.4, 3877.0], [41.5, 3877.0], [41.6, 3877.0], [41.7, 3877.0], [41.8, 3877.0], [41.9, 3899.0], [42.0, 3899.0], [42.1, 3899.0], [42.2, 3899.0], [42.3, 3899.0], [42.4, 3899.0], [42.5, 3919.0], [42.6, 3919.0], [42.7, 3919.0], [42.8, 3919.0], [42.9, 3919.0], [43.0, 3919.0], [43.1, 3934.0], [43.2, 3934.0], [43.3, 3934.0], [43.4, 3934.0], [43.5, 3934.0], [43.6, 4018.0], [43.7, 4018.0], [43.8, 4018.0], [43.9, 4018.0], [44.0, 4018.0], [44.1, 4018.0], [44.2, 4048.0], [44.3, 4048.0], [44.4, 4048.0], [44.5, 4048.0], [44.6, 4048.0], [44.7, 4104.0], [44.8, 4104.0], [44.9, 4104.0], [45.0, 4104.0], [45.1, 4104.0], [45.2, 4104.0], [45.3, 4126.0], [45.4, 4126.0], [45.5, 4126.0], [45.6, 4126.0], [45.7, 4126.0], [45.8, 4126.0], [45.9, 4253.0], [46.0, 4253.0], [46.1, 4253.0], [46.2, 4253.0], [46.3, 4253.0], [46.4, 4271.0], [46.5, 4271.0], [46.6, 4271.0], [46.7, 4271.0], [46.8, 4271.0], [46.9, 4271.0], [47.0, 4305.0], [47.1, 4305.0], [47.2, 4305.0], [47.3, 4305.0], [47.4, 4305.0], [47.5, 4318.0], [47.6, 4318.0], [47.7, 4318.0], [47.8, 4318.0], [47.9, 4318.0], [48.0, 4318.0], [48.1, 4342.0], [48.2, 4342.0], [48.3, 4342.0], [48.4, 4342.0], [48.5, 4342.0], [48.6, 4342.0], [48.7, 4387.0], [48.8, 4387.0], [48.9, 4387.0], [49.0, 4387.0], [49.1, 4387.0], [49.2, 4400.0], [49.3, 4400.0], [49.4, 4400.0], [49.5, 4400.0], [49.6, 4400.0], [49.7, 4400.0], [49.8, 4419.0], [49.9, 4419.0], [50.0, 4419.0], [50.1, 4419.0], [50.2, 4419.0], [50.3, 4436.0], [50.4, 4436.0], [50.5, 4436.0], [50.6, 4436.0], [50.7, 4436.0], [50.8, 4436.0], [50.9, 4490.0], [51.0, 4490.0], [51.1, 4490.0], [51.2, 4490.0], [51.3, 4490.0], [51.4, 4554.0], [51.5, 4554.0], [51.6, 4554.0], [51.7, 4554.0], [51.8, 4554.0], [51.9, 4554.0], [52.0, 4585.0], [52.1, 4585.0], [52.2, 4585.0], [52.3, 4585.0], [52.4, 4585.0], [52.5, 4585.0], [52.6, 4644.0], [52.7, 4644.0], [52.8, 4644.0], [52.9, 4644.0], [53.0, 4644.0], [53.1, 4657.0], [53.2, 4657.0], [53.3, 4657.0], [53.4, 4657.0], [53.5, 4657.0], [53.6, 4657.0], [53.7, 4723.0], [53.8, 4723.0], [53.9, 4723.0], [54.0, 4723.0], [54.1, 4723.0], [54.2, 4734.0], [54.3, 4734.0], [54.4, 4734.0], [54.5, 4734.0], [54.6, 4734.0], [54.7, 4734.0], [54.8, 4806.0], [54.9, 4806.0], [55.0, 4806.0], [55.1, 4806.0], [55.2, 4806.0], [55.3, 4806.0], [55.4, 4807.0], [55.5, 4807.0], [55.6, 4807.0], [55.7, 4807.0], [55.8, 4807.0], [55.9, 4822.0], [56.0, 4822.0], [56.1, 4822.0], [56.2, 4822.0], [56.3, 4822.0], [56.4, 4822.0], [56.5, 4878.0], [56.6, 4878.0], [56.7, 4878.0], [56.8, 4878.0], [56.9, 4878.0], [57.0, 4880.0], [57.1, 4880.0], [57.2, 4880.0], [57.3, 4880.0], [57.4, 4880.0], [57.5, 4880.0], [57.6, 4893.0], [57.7, 4893.0], [57.8, 4893.0], [57.9, 4893.0], [58.0, 4893.0], [58.1, 4893.0], [58.2, 4929.0], [58.3, 4929.0], [58.4, 4929.0], [58.5, 4929.0], [58.6, 4929.0], [58.7, 4976.0], [58.8, 4976.0], [58.9, 4976.0], [59.0, 4976.0], [59.1, 4976.0], [59.2, 4976.0], [59.3, 5032.0], [59.4, 5032.0], [59.5, 5032.0], [59.6, 5032.0], [59.7, 5032.0], [59.8, 5036.0], [59.9, 5036.0], [60.0, 5036.0], [60.1, 5036.0], [60.2, 5036.0], [60.3, 5036.0], [60.4, 5053.0], [60.5, 5053.0], [60.6, 5053.0], [60.7, 5053.0], [60.8, 5053.0], [60.9, 5069.0], [61.0, 5069.0], [61.1, 5069.0], [61.2, 5069.0], [61.3, 5069.0], [61.4, 5069.0], [61.5, 5102.0], [61.6, 5102.0], [61.7, 5102.0], [61.8, 5102.0], [61.9, 5102.0], [62.0, 5102.0], [62.1, 5152.0], [62.2, 5152.0], [62.3, 5152.0], [62.4, 5152.0], [62.5, 5152.0], [62.6, 5162.0], [62.7, 5162.0], [62.8, 5162.0], [62.9, 5162.0], [63.0, 5162.0], [63.1, 5162.0], [63.2, 5209.0], [63.3, 5209.0], [63.4, 5209.0], [63.5, 5209.0], [63.6, 5209.0], [63.7, 5212.0], [63.8, 5212.0], [63.9, 5212.0], [64.0, 5212.0], [64.1, 5212.0], [64.2, 5212.0], [64.3, 5235.0], [64.4, 5235.0], [64.5, 5235.0], [64.6, 5235.0], [64.7, 5235.0], [64.8, 5235.0], [64.9, 5265.0], [65.0, 5265.0], [65.1, 5265.0], [65.2, 5265.0], [65.3, 5265.0], [65.4, 5280.0], [65.5, 5280.0], [65.6, 5280.0], [65.7, 5280.0], [65.8, 5280.0], [65.9, 5280.0], [66.0, 5346.0], [66.1, 5346.0], [66.2, 5346.0], [66.3, 5346.0], [66.4, 5346.0], [66.5, 5353.0], [66.6, 5353.0], [66.7, 5353.0], [66.8, 5353.0], [66.9, 5353.0], [67.0, 5353.0], [67.1, 5371.0], [67.2, 5371.0], [67.3, 5371.0], [67.4, 5371.0], [67.5, 5371.0], [67.6, 5390.0], [67.7, 5390.0], [67.8, 5390.0], [67.9, 5390.0], [68.0, 5390.0], [68.1, 5390.0], [68.2, 5401.0], [68.3, 5401.0], [68.4, 5401.0], [68.5, 5401.0], [68.6, 5401.0], [68.7, 5401.0], [68.8, 5478.0], [68.9, 5478.0], [69.0, 5478.0], [69.1, 5478.0], [69.2, 5478.0], [69.3, 5515.0], [69.4, 5515.0], [69.5, 5515.0], [69.6, 5515.0], [69.7, 5515.0], [69.8, 5515.0], [69.9, 5523.0], [70.0, 5523.0], [70.1, 5523.0], [70.2, 5523.0], [70.3, 5523.0], [70.4, 5591.0], [70.5, 5591.0], [70.6, 5591.0], [70.7, 5591.0], [70.8, 5591.0], [70.9, 5591.0], [71.0, 5609.0], [71.1, 5609.0], [71.2, 5609.0], [71.3, 5609.0], [71.4, 5609.0], [71.5, 5609.0], [71.6, 5649.0], [71.7, 5649.0], [71.8, 5649.0], [71.9, 5649.0], [72.0, 5649.0], [72.1, 5655.0], [72.2, 5655.0], [72.3, 5655.0], [72.4, 5655.0], [72.5, 5655.0], [72.6, 5655.0], [72.7, 5692.0], [72.8, 5692.0], [72.9, 5692.0], [73.0, 5692.0], [73.1, 5692.0], [73.2, 5701.0], [73.3, 5701.0], [73.4, 5701.0], [73.5, 5701.0], [73.6, 5701.0], [73.7, 5701.0], [73.8, 5701.0], [73.9, 5701.0], [74.0, 5701.0], [74.1, 5701.0], [74.2, 5701.0], [74.3, 5701.0], [74.4, 5724.0], [74.5, 5724.0], [74.6, 5724.0], [74.7, 5724.0], [74.8, 5724.0], [74.9, 5854.0], [75.0, 5854.0], [75.1, 5854.0], [75.2, 5854.0], [75.3, 5854.0], [75.4, 5854.0], [75.5, 5864.0], [75.6, 5864.0], [75.7, 5864.0], [75.8, 5864.0], [75.9, 5864.0], [76.0, 5897.0], [76.1, 5897.0], [76.2, 5897.0], [76.3, 5897.0], [76.4, 5897.0], [76.5, 5897.0], [76.6, 6010.0], [76.7, 6010.0], [76.8, 6010.0], [76.9, 6010.0], [77.0, 6010.0], [77.1, 6043.0], [77.2, 6043.0], [77.3, 6043.0], [77.4, 6043.0], [77.5, 6043.0], [77.6, 6043.0], [77.7, 6168.0], [77.8, 6168.0], [77.9, 6168.0], [78.0, 6168.0], [78.1, 6168.0], [78.2, 6168.0], [78.3, 6491.0], [78.4, 6491.0], [78.5, 6491.0], [78.6, 6491.0], [78.7, 6491.0], [78.8, 6745.0], [78.9, 6745.0], [79.0, 6745.0], [79.1, 6745.0], [79.2, 6745.0], [79.3, 6745.0], [79.4, 6770.0], [79.5, 6770.0], [79.6, 6770.0], [79.7, 6770.0], [79.8, 6770.0], [79.9, 6830.0], [80.0, 6830.0], [80.1, 6830.0], [80.2, 6830.0], [80.3, 6830.0], [80.4, 6830.0], [80.5, 7038.0], [80.6, 7038.0], [80.7, 7038.0], [80.8, 7038.0], [80.9, 7038.0], [81.0, 7038.0], [81.1, 7107.0], [81.2, 7107.0], [81.3, 7107.0], [81.4, 7107.0], [81.5, 7107.0], [81.6, 7171.0], [81.7, 7171.0], [81.8, 7171.0], [81.9, 7171.0], [82.0, 7171.0], [82.1, 7171.0], [82.2, 7191.0], [82.3, 7191.0], [82.4, 7191.0], [82.5, 7191.0], [82.6, 7191.0], [82.7, 7358.0], [82.8, 7358.0], [82.9, 7358.0], [83.0, 7358.0], [83.1, 7358.0], [83.2, 7358.0], [83.3, 7563.0], [83.4, 7563.0], [83.5, 7563.0], [83.6, 7563.0], [83.7, 7563.0], [83.8, 7571.0], [83.9, 7571.0], [84.0, 7571.0], [84.1, 7571.0], [84.2, 7571.0], [84.3, 7571.0], [84.4, 7654.0], [84.5, 7654.0], [84.6, 7654.0], [84.7, 7654.0], [84.8, 7654.0], [84.9, 7654.0], [85.0, 7861.0], [85.1, 7861.0], [85.2, 7861.0], [85.3, 7861.0], [85.4, 7861.0], [85.5, 7975.0], [85.6, 7975.0], [85.7, 7975.0], [85.8, 7975.0], [85.9, 7975.0], [86.0, 7975.0], [86.1, 8056.0], [86.2, 8056.0], [86.3, 8056.0], [86.4, 8056.0], [86.5, 8056.0], [86.6, 8403.0], [86.7, 8403.0], [86.8, 8403.0], [86.9, 8403.0], [87.0, 8403.0], [87.1, 8403.0], [87.2, 8590.0], [87.3, 8590.0], [87.4, 8590.0], [87.5, 8590.0], [87.6, 8590.0], [87.7, 8590.0], [87.8, 8616.0], [87.9, 8616.0], [88.0, 8616.0], [88.1, 8616.0], [88.2, 8616.0], [88.3, 8746.0], [88.4, 8746.0], [88.5, 8746.0], [88.6, 8746.0], [88.7, 8746.0], [88.8, 8746.0], [88.9, 8756.0], [89.0, 8756.0], [89.1, 8756.0], [89.2, 8756.0], [89.3, 8756.0], [89.4, 8849.0], [89.5, 8849.0], [89.6, 8849.0], [89.7, 8849.0], [89.8, 8849.0], [89.9, 8849.0], [90.0, 8983.0], [90.1, 8983.0], [90.2, 8983.0], [90.3, 8983.0], [90.4, 8983.0], [90.5, 8983.0], [90.6, 9530.0], [90.7, 9530.0], [90.8, 9530.0], [90.9, 9530.0], [91.0, 9530.0], [91.1, 11201.0], [91.2, 11201.0], [91.3, 11201.0], [91.4, 11201.0], [91.5, 11201.0], [91.6, 11201.0], [91.7, 11222.0], [91.8, 11222.0], [91.9, 11222.0], [92.0, 11222.0], [92.1, 11222.0], [92.2, 12381.0], [92.3, 12381.0], [92.4, 12381.0], [92.5, 12381.0], [92.6, 12381.0], [92.7, 12381.0], [92.8, 13298.0], [92.9, 13298.0], [93.0, 13298.0], [93.1, 13298.0], [93.2, 13298.0], [93.3, 13507.0], [93.4, 13507.0], [93.5, 13507.0], [93.6, 13507.0], [93.7, 13507.0], [93.8, 13507.0], [93.9, 13862.0], [94.0, 13862.0], [94.1, 13862.0], [94.2, 13862.0], [94.3, 13862.0], [94.4, 13862.0], [94.5, 14000.0], [94.6, 14000.0], [94.7, 14000.0], [94.8, 14000.0], [94.9, 14000.0], [95.0, 14733.0], [95.1, 14733.0], [95.2, 14733.0], [95.3, 14733.0], [95.4, 14733.0], [95.5, 14733.0], [95.6, 14980.0], [95.7, 14980.0], [95.8, 14980.0], [95.9, 14980.0], [96.0, 14980.0], [96.1, 15261.0], [96.2, 15261.0], [96.3, 15261.0], [96.4, 15261.0], [96.5, 15261.0], [96.6, 15261.0], [96.7, 15546.0], [96.8, 15546.0], [96.9, 15546.0], [97.0, 15546.0], [97.1, 15546.0], [97.2, 15546.0], [97.3, 15554.0], [97.4, 15554.0], [97.5, 15554.0], [97.6, 15554.0], [97.7, 15554.0], [97.8, 16138.0], [97.9, 16138.0], [98.0, 16138.0], [98.1, 16138.0], [98.2, 16138.0], [98.3, 16138.0], [98.4, 16924.0], [98.5, 16924.0], [98.6, 16924.0], [98.7, 16924.0], [98.8, 16924.0], [98.9, 17315.0], [99.0, 17315.0], [99.1, 17315.0], [99.2, 17315.0], [99.3, 17315.0], [99.4, 17315.0], [99.5, 24370.0], [99.6, 24370.0], [99.7, 24370.0], [99.8, 24370.0], [99.9, 24370.0]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[0.0, 447.0], [0.1, 447.0], [0.2, 447.0], [0.3, 447.0], [0.4, 447.0], [0.5, 447.0], [0.6, 453.0], [0.7, 453.0], [0.8, 453.0], [0.9, 453.0], [1.0, 453.0], [1.1, 453.0], [1.2, 454.0], [1.3, 454.0], [1.4, 454.0], [1.5, 454.0], [1.6, 454.0], [1.7, 455.0], [1.8, 455.0], [1.9, 455.0], [2.0, 455.0], [2.1, 455.0], [2.2, 455.0], [2.3, 458.0], [2.4, 458.0], [2.5, 458.0], [2.6, 458.0], [2.7, 458.0], [2.8, 465.0], [2.9, 465.0], [3.0, 465.0], [3.1, 465.0], [3.2, 465.0], [3.3, 465.0], [3.4, 465.0], [3.5, 465.0], [3.6, 465.0], [3.7, 465.0], [3.8, 465.0], [3.9, 465.0], [4.0, 470.0], [4.1, 470.0], [4.2, 470.0], [4.3, 470.0], [4.4, 470.0], [4.5, 474.0], [4.6, 474.0], [4.7, 474.0], [4.8, 474.0], [4.9, 474.0], [5.0, 474.0], [5.1, 476.0], [5.2, 476.0], [5.3, 476.0], [5.4, 476.0], [5.5, 476.0], [5.6, 478.0], [5.7, 478.0], [5.8, 478.0], [5.9, 478.0], [6.0, 478.0], [6.1, 478.0], [6.2, 478.0], [6.3, 478.0], [6.4, 478.0], [6.5, 478.0], [6.6, 478.0], [6.7, 478.0], [6.8, 486.0], [6.9, 486.0], [7.0, 486.0], [7.1, 486.0], [7.2, 486.0], [7.3, 487.0], [7.4, 487.0], [7.5, 487.0], [7.6, 487.0], [7.7, 487.0], [7.8, 487.0], [7.9, 488.0], [8.0, 488.0], [8.1, 488.0], [8.2, 488.0], [8.3, 488.0], [8.4, 489.0], [8.5, 489.0], [8.6, 489.0], [8.7, 489.0], [8.8, 489.0], [8.9, 489.0], [9.0, 494.0], [9.1, 494.0], [9.2, 494.0], [9.3, 494.0], [9.4, 494.0], [9.5, 496.0], [9.6, 496.0], [9.7, 496.0], [9.8, 496.0], [9.9, 496.0], [10.0, 496.0], [10.1, 499.0], [10.2, 499.0], [10.3, 499.0], [10.4, 499.0], [10.5, 499.0], [10.6, 499.0], [10.7, 500.0], [10.8, 500.0], [10.9, 500.0], [11.0, 500.0], [11.1, 500.0], [11.2, 500.0], [11.3, 500.0], [11.4, 500.0], [11.5, 500.0], [11.6, 500.0], [11.7, 500.0], [11.8, 502.0], [11.9, 502.0], [12.0, 502.0], [12.1, 502.0], [12.2, 502.0], [12.3, 506.0], [12.4, 506.0], [12.5, 506.0], [12.6, 506.0], [12.7, 506.0], [12.8, 506.0], [12.9, 510.0], [13.0, 510.0], [13.1, 510.0], [13.2, 510.0], [13.3, 510.0], [13.4, 510.0], [13.5, 511.0], [13.6, 511.0], [13.7, 511.0], [13.8, 511.0], [13.9, 511.0], [14.0, 518.0], [14.1, 518.0], [14.2, 518.0], [14.3, 518.0], [14.4, 518.0], [14.5, 518.0], [14.6, 522.0], [14.7, 522.0], [14.8, 522.0], [14.9, 522.0], [15.0, 522.0], [15.1, 523.0], [15.2, 523.0], [15.3, 523.0], [15.4, 523.0], [15.5, 523.0], [15.6, 523.0], [15.7, 524.0], [15.8, 524.0], [15.9, 524.0], [16.0, 524.0], [16.1, 524.0], [16.2, 524.0], [16.3, 525.0], [16.4, 525.0], [16.5, 525.0], [16.6, 525.0], [16.7, 525.0], [16.8, 526.0], [16.9, 526.0], [17.0, 526.0], [17.1, 526.0], [17.2, 526.0], [17.3, 526.0], [17.4, 531.0], [17.5, 531.0], [17.6, 531.0], [17.7, 531.0], [17.8, 531.0], [17.9, 536.0], [18.0, 536.0], [18.1, 536.0], [18.2, 536.0], [18.3, 536.0], [18.4, 536.0], [18.5, 536.0], [18.6, 536.0], [18.7, 536.0], [18.8, 536.0], [18.9, 536.0], [19.0, 540.0], [19.1, 540.0], [19.2, 540.0], [19.3, 540.0], [19.4, 540.0], [19.5, 540.0], [19.6, 541.0], [19.7, 541.0], [19.8, 541.0], [19.9, 541.0], [20.0, 541.0], [20.1, 541.0], [20.2, 542.0], [20.3, 542.0], [20.4, 542.0], [20.5, 542.0], [20.6, 542.0], [20.7, 546.0], [20.8, 546.0], [20.9, 546.0], [21.0, 546.0], [21.1, 546.0], [21.2, 546.0], [21.3, 551.0], [21.4, 551.0], [21.5, 551.0], [21.6, 551.0], [21.7, 551.0], [21.8, 566.0], [21.9, 566.0], [22.0, 566.0], [22.1, 566.0], [22.2, 566.0], [22.3, 566.0], [22.4, 569.0], [22.5, 569.0], [22.6, 569.0], [22.7, 569.0], [22.8, 569.0], [22.9, 569.0], [23.0, 573.0], [23.1, 573.0], [23.2, 573.0], [23.3, 573.0], [23.4, 573.0], [23.5, 575.0], [23.6, 575.0], [23.7, 575.0], [23.8, 575.0], [23.9, 575.0], [24.0, 575.0], [24.1, 581.0], [24.2, 581.0], [24.3, 581.0], [24.4, 581.0], [24.5, 581.0], [24.6, 582.0], [24.7, 582.0], [24.8, 582.0], [24.9, 582.0], [25.0, 582.0], [25.1, 582.0], [25.2, 592.0], [25.3, 592.0], [25.4, 592.0], [25.5, 592.0], [25.6, 592.0], [25.7, 595.0], [25.8, 595.0], [25.9, 595.0], [26.0, 595.0], [26.1, 595.0], [26.2, 595.0], [26.3, 595.0], [26.4, 595.0], [26.5, 595.0], [26.6, 595.0], [26.7, 595.0], [26.8, 595.0], [26.9, 598.0], [27.0, 598.0], [27.1, 598.0], [27.2, 598.0], [27.3, 598.0], [27.4, 599.0], [27.5, 599.0], [27.6, 599.0], [27.7, 599.0], [27.8, 599.0], [27.9, 599.0], [28.0, 605.0], [28.1, 605.0], [28.2, 605.0], [28.3, 605.0], [28.4, 605.0], [28.5, 607.0], [28.6, 607.0], [28.7, 607.0], [28.8, 607.0], [28.9, 607.0], [29.0, 607.0], [29.1, 639.0], [29.2, 639.0], [29.3, 639.0], [29.4, 639.0], [29.5, 639.0], [29.6, 639.0], [29.7, 642.0], [29.8, 642.0], [29.9, 642.0], [30.0, 642.0], [30.1, 642.0], [30.2, 651.0], [30.3, 651.0], [30.4, 651.0], [30.5, 651.0], [30.6, 651.0], [30.7, 651.0], [30.8, 654.0], [30.9, 654.0], [31.0, 654.0], [31.1, 654.0], [31.2, 654.0], [31.3, 654.0], [31.4, 654.0], [31.5, 654.0], [31.6, 654.0], [31.7, 654.0], [31.8, 654.0], [31.9, 657.0], [32.0, 657.0], [32.1, 657.0], [32.2, 657.0], [32.3, 657.0], [32.4, 657.0], [32.5, 659.0], [32.6, 659.0], [32.7, 659.0], [32.8, 659.0], [32.9, 659.0], [33.0, 659.0], [33.1, 659.0], [33.2, 659.0], [33.3, 659.0], [33.4, 659.0], [33.5, 659.0], [33.6, 670.0], [33.7, 670.0], [33.8, 670.0], [33.9, 670.0], [34.0, 670.0], [34.1, 675.0], [34.2, 675.0], [34.3, 675.0], [34.4, 675.0], [34.5, 675.0], [34.6, 675.0], [34.7, 676.0], [34.8, 676.0], [34.9, 676.0], [35.0, 676.0], [35.1, 676.0], [35.2, 680.0], [35.3, 680.0], [35.4, 680.0], [35.5, 680.0], [35.6, 680.0], [35.7, 680.0], [35.8, 680.0], [35.9, 680.0], [36.0, 680.0], [36.1, 680.0], [36.2, 680.0], [36.3, 680.0], [36.4, 680.0], [36.5, 680.0], [36.6, 680.0], [36.7, 680.0], [36.8, 680.0], [36.9, 680.0], [37.0, 680.0], [37.1, 680.0], [37.2, 680.0], [37.3, 680.0], [37.4, 680.0], [37.5, 684.0], [37.6, 684.0], [37.7, 684.0], [37.8, 684.0], [37.9, 684.0], [38.0, 701.0], [38.1, 701.0], [38.2, 701.0], [38.3, 701.0], [38.4, 701.0], [38.5, 701.0], [38.6, 717.0], [38.7, 717.0], [38.8, 717.0], [38.9, 717.0], [39.0, 717.0], [39.1, 717.0], [39.2, 724.0], [39.3, 724.0], [39.4, 724.0], [39.5, 724.0], [39.6, 724.0], [39.7, 727.0], [39.8, 727.0], [39.9, 727.0], [40.0, 727.0], [40.1, 727.0], [40.2, 727.0], [40.3, 731.0], [40.4, 731.0], [40.5, 731.0], [40.6, 731.0], [40.7, 731.0], [40.8, 740.0], [40.9, 740.0], [41.0, 740.0], [41.1, 740.0], [41.2, 740.0], [41.3, 740.0], [41.4, 741.0], [41.5, 741.0], [41.6, 741.0], [41.7, 741.0], [41.8, 741.0], [41.9, 747.0], [42.0, 747.0], [42.1, 747.0], [42.2, 747.0], [42.3, 747.0], [42.4, 747.0], [42.5, 747.0], [42.6, 747.0], [42.7, 747.0], [42.8, 747.0], [42.9, 747.0], [43.0, 747.0], [43.1, 751.0], [43.2, 751.0], [43.3, 751.0], [43.4, 751.0], [43.5, 751.0], [43.6, 781.0], [43.7, 781.0], [43.8, 781.0], [43.9, 781.0], [44.0, 781.0], [44.1, 781.0], [44.2, 785.0], [44.3, 785.0], [44.4, 785.0], [44.5, 785.0], [44.6, 785.0], [44.7, 789.0], [44.8, 789.0], [44.9, 789.0], [45.0, 789.0], [45.1, 789.0], [45.2, 789.0], [45.3, 793.0], [45.4, 793.0], [45.5, 793.0], [45.6, 793.0], [45.7, 793.0], [45.8, 793.0], [45.9, 796.0], [46.0, 796.0], [46.1, 796.0], [46.2, 796.0], [46.3, 796.0], [46.4, 813.0], [46.5, 813.0], [46.6, 813.0], [46.7, 813.0], [46.8, 813.0], [46.9, 813.0], [47.0, 818.0], [47.1, 818.0], [47.2, 818.0], [47.3, 818.0], [47.4, 818.0], [47.5, 818.0], [47.6, 818.0], [47.7, 818.0], [47.8, 818.0], [47.9, 818.0], [48.0, 818.0], [48.1, 819.0], [48.2, 819.0], [48.3, 819.0], [48.4, 819.0], [48.5, 819.0], [48.6, 819.0], [48.7, 822.0], [48.8, 822.0], [48.9, 822.0], [49.0, 822.0], [49.1, 822.0], [49.2, 822.0], [49.3, 822.0], [49.4, 822.0], [49.5, 822.0], [49.6, 822.0], [49.7, 822.0], [49.8, 843.0], [49.9, 843.0], [50.0, 843.0], [50.1, 843.0], [50.2, 843.0], [50.3, 853.0], [50.4, 853.0], [50.5, 853.0], [50.6, 853.0], [50.7, 853.0], [50.8, 853.0], [50.9, 864.0], [51.0, 864.0], [51.1, 864.0], [51.2, 864.0], [51.3, 864.0], [51.4, 870.0], [51.5, 870.0], [51.6, 870.0], [51.7, 870.0], [51.8, 870.0], [51.9, 870.0], [52.0, 895.0], [52.1, 895.0], [52.2, 895.0], [52.3, 895.0], [52.4, 895.0], [52.5, 895.0], [52.6, 908.0], [52.7, 908.0], [52.8, 908.0], [52.9, 908.0], [53.0, 908.0], [53.1, 929.0], [53.2, 929.0], [53.3, 929.0], [53.4, 929.0], [53.5, 929.0], [53.6, 929.0], [53.7, 939.0], [53.8, 939.0], [53.9, 939.0], [54.0, 939.0], [54.1, 939.0], [54.2, 958.0], [54.3, 958.0], [54.4, 958.0], [54.5, 958.0], [54.6, 958.0], [54.7, 958.0], [54.8, 969.0], [54.9, 969.0], [55.0, 969.0], [55.1, 969.0], [55.2, 969.0], [55.3, 969.0], [55.4, 973.0], [55.5, 973.0], [55.6, 973.0], [55.7, 973.0], [55.8, 973.0], [55.9, 978.0], [56.0, 978.0], [56.1, 978.0], [56.2, 978.0], [56.3, 978.0], [56.4, 978.0], [56.5, 996.0], [56.6, 996.0], [56.7, 996.0], [56.8, 996.0], [56.9, 996.0], [57.0, 1017.0], [57.1, 1017.0], [57.2, 1017.0], [57.3, 1017.0], [57.4, 1017.0], [57.5, 1017.0], [57.6, 1023.0], [57.7, 1023.0], [57.8, 1023.0], [57.9, 1023.0], [58.0, 1023.0], [58.1, 1023.0], [58.2, 1027.0], [58.3, 1027.0], [58.4, 1027.0], [58.5, 1027.0], [58.6, 1027.0], [58.7, 1032.0], [58.8, 1032.0], [58.9, 1032.0], [59.0, 1032.0], [59.1, 1032.0], [59.2, 1032.0], [59.3, 1058.0], [59.4, 1058.0], [59.5, 1058.0], [59.6, 1058.0], [59.7, 1058.0], [59.8, 1065.0], [59.9, 1065.0], [60.0, 1065.0], [60.1, 1065.0], [60.2, 1065.0], [60.3, 1065.0], [60.4, 1074.0], [60.5, 1074.0], [60.6, 1074.0], [60.7, 1074.0], [60.8, 1074.0], [60.9, 1086.0], [61.0, 1086.0], [61.1, 1086.0], [61.2, 1086.0], [61.3, 1086.0], [61.4, 1086.0], [61.5, 1089.0], [61.6, 1089.0], [61.7, 1089.0], [61.8, 1089.0], [61.9, 1089.0], [62.0, 1089.0], [62.1, 1091.0], [62.2, 1091.0], [62.3, 1091.0], [62.4, 1091.0], [62.5, 1091.0], [62.6, 1099.0], [62.7, 1099.0], [62.8, 1099.0], [62.9, 1099.0], [63.0, 1099.0], [63.1, 1099.0], [63.2, 1111.0], [63.3, 1111.0], [63.4, 1111.0], [63.5, 1111.0], [63.6, 1111.0], [63.7, 1129.0], [63.8, 1129.0], [63.9, 1129.0], [64.0, 1129.0], [64.1, 1129.0], [64.2, 1129.0], [64.3, 1132.0], [64.4, 1132.0], [64.5, 1132.0], [64.6, 1132.0], [64.7, 1132.0], [64.8, 1132.0], [64.9, 1172.0], [65.0, 1172.0], [65.1, 1172.0], [65.2, 1172.0], [65.3, 1172.0], [65.4, 1260.0], [65.5, 1260.0], [65.6, 1260.0], [65.7, 1260.0], [65.8, 1260.0], [65.9, 1260.0], [66.0, 1266.0], [66.1, 1266.0], [66.2, 1266.0], [66.3, 1266.0], [66.4, 1266.0], [66.5, 1267.0], [66.6, 1267.0], [66.7, 1267.0], [66.8, 1267.0], [66.9, 1267.0], [67.0, 1267.0], [67.1, 1283.0], [67.2, 1283.0], [67.3, 1283.0], [67.4, 1283.0], [67.5, 1283.0], [67.6, 1288.0], [67.7, 1288.0], [67.8, 1288.0], [67.9, 1288.0], [68.0, 1288.0], [68.1, 1288.0], [68.2, 1316.0], [68.3, 1316.0], [68.4, 1316.0], [68.5, 1316.0], [68.6, 1316.0], [68.7, 1316.0], [68.8, 1321.0], [68.9, 1321.0], [69.0, 1321.0], [69.1, 1321.0], [69.2, 1321.0], [69.3, 1408.0], [69.4, 1408.0], [69.5, 1408.0], [69.6, 1408.0], [69.7, 1408.0], [69.8, 1408.0], [69.9, 1422.0], [70.0, 1422.0], [70.1, 1422.0], [70.2, 1422.0], [70.3, 1422.0], [70.4, 1437.0], [70.5, 1437.0], [70.6, 1437.0], [70.7, 1437.0], [70.8, 1437.0], [70.9, 1437.0], [71.0, 1438.0], [71.1, 1438.0], [71.2, 1438.0], [71.3, 1438.0], [71.4, 1438.0], [71.5, 1438.0], [71.6, 1448.0], [71.7, 1448.0], [71.8, 1448.0], [71.9, 1448.0], [72.0, 1448.0], [72.1, 1482.0], [72.2, 1482.0], [72.3, 1482.0], [72.4, 1482.0], [72.5, 1482.0], [72.6, 1482.0], [72.7, 1506.0], [72.8, 1506.0], [72.9, 1506.0], [73.0, 1506.0], [73.1, 1506.0], [73.2, 1527.0], [73.3, 1527.0], [73.4, 1527.0], [73.5, 1527.0], [73.6, 1527.0], [73.7, 1527.0], [73.8, 1560.0], [73.9, 1560.0], [74.0, 1560.0], [74.1, 1560.0], [74.2, 1560.0], [74.3, 1560.0], [74.4, 1567.0], [74.5, 1567.0], [74.6, 1567.0], [74.7, 1567.0], [74.8, 1567.0], [74.9, 1626.0], [75.0, 1626.0], [75.1, 1626.0], [75.2, 1626.0], [75.3, 1626.0], [75.4, 1626.0], [75.5, 1664.0], [75.6, 1664.0], [75.7, 1664.0], [75.8, 1664.0], [75.9, 1664.0], [76.0, 1699.0], [76.1, 1699.0], [76.2, 1699.0], [76.3, 1699.0], [76.4, 1699.0], [76.5, 1699.0], [76.6, 1712.0], [76.7, 1712.0], [76.8, 1712.0], [76.9, 1712.0], [77.0, 1712.0], [77.1, 1742.0], [77.2, 1742.0], [77.3, 1742.0], [77.4, 1742.0], [77.5, 1742.0], [77.6, 1742.0], [77.7, 1793.0], [77.8, 1793.0], [77.9, 1793.0], [78.0, 1793.0], [78.1, 1793.0], [78.2, 1793.0], [78.3, 1823.0], [78.4, 1823.0], [78.5, 1823.0], [78.6, 1823.0], [78.7, 1823.0], [78.8, 1974.0], [78.9, 1974.0], [79.0, 1974.0], [79.1, 1974.0], [79.2, 1974.0], [79.3, 1974.0], [79.4, 2016.0], [79.5, 2016.0], [79.6, 2016.0], [79.7, 2016.0], [79.8, 2016.0], [79.9, 2144.0], [80.0, 2144.0], [80.1, 2144.0], [80.2, 2144.0], [80.3, 2144.0], [80.4, 2144.0], [80.5, 2183.0], [80.6, 2183.0], [80.7, 2183.0], [80.8, 2183.0], [80.9, 2183.0], [81.0, 2183.0], [81.1, 2235.0], [81.2, 2235.0], [81.3, 2235.0], [81.4, 2235.0], [81.5, 2235.0], [81.6, 2242.0], [81.7, 2242.0], [81.8, 2242.0], [81.9, 2242.0], [82.0, 2242.0], [82.1, 2242.0], [82.2, 2250.0], [82.3, 2250.0], [82.4, 2250.0], [82.5, 2250.0], [82.6, 2250.0], [82.7, 2287.0], [82.8, 2287.0], [82.9, 2287.0], [83.0, 2287.0], [83.1, 2287.0], [83.2, 2287.0], [83.3, 2311.0], [83.4, 2311.0], [83.5, 2311.0], [83.6, 2311.0], [83.7, 2311.0], [83.8, 2324.0], [83.9, 2324.0], [84.0, 2324.0], [84.1, 2324.0], [84.2, 2324.0], [84.3, 2324.0], [84.4, 2447.0], [84.5, 2447.0], [84.6, 2447.0], [84.7, 2447.0], [84.8, 2447.0], [84.9, 2447.0], [85.0, 2453.0], [85.1, 2453.0], [85.2, 2453.0], [85.3, 2453.0], [85.4, 2453.0], [85.5, 2459.0], [85.6, 2459.0], [85.7, 2459.0], [85.8, 2459.0], [85.9, 2459.0], [86.0, 2459.0], [86.1, 2461.0], [86.2, 2461.0], [86.3, 2461.0], [86.4, 2461.0], [86.5, 2461.0], [86.6, 2561.0], [86.7, 2561.0], [86.8, 2561.0], [86.9, 2561.0], [87.0, 2561.0], [87.1, 2561.0], [87.2, 2691.0], [87.3, 2691.0], [87.4, 2691.0], [87.5, 2691.0], [87.6, 2691.0], [87.7, 2691.0], [87.8, 2789.0], [87.9, 2789.0], [88.0, 2789.0], [88.1, 2789.0], [88.2, 2789.0], [88.3, 2843.0], [88.4, 2843.0], [88.5, 2843.0], [88.6, 2843.0], [88.7, 2843.0], [88.8, 2843.0], [88.9, 2851.0], [89.0, 2851.0], [89.1, 2851.0], [89.2, 2851.0], [89.3, 2851.0], [89.4, 2855.0], [89.5, 2855.0], [89.6, 2855.0], [89.7, 2855.0], [89.8, 2855.0], [89.9, 2855.0], [90.0, 2857.0], [90.1, 2857.0], [90.2, 2857.0], [90.3, 2857.0], [90.4, 2857.0], [90.5, 2857.0], [90.6, 2967.0], [90.7, 2967.0], [90.8, 2967.0], [90.9, 2967.0], [91.0, 2967.0], [91.1, 2968.0], [91.2, 2968.0], [91.3, 2968.0], [91.4, 2968.0], [91.5, 2968.0], [91.6, 2968.0], [91.7, 2969.0], [91.8, 2969.0], [91.9, 2969.0], [92.0, 2969.0], [92.1, 2969.0], [92.2, 3048.0], [92.3, 3048.0], [92.4, 3048.0], [92.5, 3048.0], [92.6, 3048.0], [92.7, 3048.0], [92.8, 3137.0], [92.9, 3137.0], [93.0, 3137.0], [93.1, 3137.0], [93.2, 3137.0], [93.3, 3219.0], [93.4, 3219.0], [93.5, 3219.0], [93.6, 3219.0], [93.7, 3219.0], [93.8, 3219.0], [93.9, 3388.0], [94.0, 3388.0], [94.1, 3388.0], [94.2, 3388.0], [94.3, 3388.0], [94.4, 3388.0], [94.5, 3399.0], [94.6, 3399.0], [94.7, 3399.0], [94.8, 3399.0], [94.9, 3399.0], [95.0, 3519.0], [95.1, 3519.0], [95.2, 3519.0], [95.3, 3519.0], [95.4, 3519.0], [95.5, 3519.0], [95.6, 3605.0], [95.7, 3605.0], [95.8, 3605.0], [95.9, 3605.0], [96.0, 3605.0], [96.1, 3614.0], [96.2, 3614.0], [96.3, 3614.0], [96.4, 3614.0], [96.5, 3614.0], [96.6, 3614.0], [96.7, 3823.0], [96.8, 3823.0], [96.9, 3823.0], [97.0, 3823.0], [97.1, 3823.0], [97.2, 3823.0], [97.3, 3852.0], [97.4, 3852.0], [97.5, 3852.0], [97.6, 3852.0], [97.7, 3852.0], [97.8, 3867.0], [97.9, 3867.0], [98.0, 3867.0], [98.1, 3867.0], [98.2, 3867.0], [98.3, 3867.0], [98.4, 4431.0], [98.5, 4431.0], [98.6, 4431.0], [98.7, 4431.0], [98.8, 4431.0], [98.9, 4783.0], [99.0, 4783.0], [99.1, 4783.0], [99.2, 4783.0], [99.3, 4783.0], [99.4, 4783.0], [99.5, 5259.0], [99.6, 5259.0], [99.7, 5259.0], [99.8, 5259.0], [99.9, 5259.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[0.0, 1741.0], [0.1, 1741.0], [0.2, 1741.0], [0.3, 1741.0], [0.4, 1741.0], [0.5, 1741.0], [0.6, 1753.0], [0.7, 1753.0], [0.8, 1753.0], [0.9, 1753.0], [1.0, 1753.0], [1.1, 1753.0], [1.2, 1773.0], [1.3, 1773.0], [1.4, 1773.0], [1.5, 1773.0], [1.6, 1773.0], [1.7, 1885.0], [1.8, 1885.0], [1.9, 1885.0], [2.0, 1885.0], [2.1, 1885.0], [2.2, 1885.0], [2.3, 1933.0], [2.4, 1933.0], [2.5, 1933.0], [2.6, 1933.0], [2.7, 1933.0], [2.8, 2067.0], [2.9, 2067.0], [3.0, 2067.0], [3.1, 2067.0], [3.2, 2067.0], [3.3, 2067.0], [3.4, 2080.0], [3.5, 2080.0], [3.6, 2080.0], [3.7, 2080.0], [3.8, 2080.0], [3.9, 2080.0], [4.0, 2146.0], [4.1, 2146.0], [4.2, 2146.0], [4.3, 2146.0], [4.4, 2146.0], [4.5, 2161.0], [4.6, 2161.0], [4.7, 2161.0], [4.8, 2161.0], [4.9, 2161.0], [5.0, 2161.0], [5.1, 2203.0], [5.2, 2203.0], [5.3, 2203.0], [5.4, 2203.0], [5.5, 2203.0], [5.6, 2229.0], [5.7, 2229.0], [5.8, 2229.0], [5.9, 2229.0], [6.0, 2229.0], [6.1, 2229.0], [6.2, 2232.0], [6.3, 2232.0], [6.4, 2232.0], [6.5, 2232.0], [6.6, 2232.0], [6.7, 2232.0], [6.8, 2251.0], [6.9, 2251.0], [7.0, 2251.0], [7.1, 2251.0], [7.2, 2251.0], [7.3, 2257.0], [7.4, 2257.0], [7.5, 2257.0], [7.6, 2257.0], [7.7, 2257.0], [7.8, 2257.0], [7.9, 2288.0], [8.0, 2288.0], [8.1, 2288.0], [8.2, 2288.0], [8.3, 2288.0], [8.4, 2291.0], [8.5, 2291.0], [8.6, 2291.0], [8.7, 2291.0], [8.8, 2291.0], [8.9, 2291.0], [9.0, 2324.0], [9.1, 2324.0], [9.2, 2324.0], [9.3, 2324.0], [9.4, 2324.0], [9.5, 2328.0], [9.6, 2328.0], [9.7, 2328.0], [9.8, 2328.0], [9.9, 2328.0], [10.0, 2328.0], [10.1, 2390.0], [10.2, 2390.0], [10.3, 2390.0], [10.4, 2390.0], [10.5, 2390.0], [10.6, 2390.0], [10.7, 2420.0], [10.8, 2420.0], [10.9, 2420.0], [11.0, 2420.0], [11.1, 2420.0], [11.2, 2448.0], [11.3, 2448.0], [11.4, 2448.0], [11.5, 2448.0], [11.6, 2448.0], [11.7, 2448.0], [11.8, 2458.0], [11.9, 2458.0], [12.0, 2458.0], [12.1, 2458.0], [12.2, 2458.0], [12.3, 2494.0], [12.4, 2494.0], [12.5, 2494.0], [12.6, 2494.0], [12.7, 2494.0], [12.8, 2494.0], [12.9, 2532.0], [13.0, 2532.0], [13.1, 2532.0], [13.2, 2532.0], [13.3, 2532.0], [13.4, 2532.0], [13.5, 2540.0], [13.6, 2540.0], [13.7, 2540.0], [13.8, 2540.0], [13.9, 2540.0], [14.0, 2591.0], [14.1, 2591.0], [14.2, 2591.0], [14.3, 2591.0], [14.4, 2591.0], [14.5, 2591.0], [14.6, 2640.0], [14.7, 2640.0], [14.8, 2640.0], [14.9, 2640.0], [15.0, 2640.0], [15.1, 2642.0], [15.2, 2642.0], [15.3, 2642.0], [15.4, 2642.0], [15.5, 2642.0], [15.6, 2642.0], [15.7, 2655.0], [15.8, 2655.0], [15.9, 2655.0], [16.0, 2655.0], [16.1, 2655.0], [16.2, 2655.0], [16.3, 2667.0], [16.4, 2667.0], [16.5, 2667.0], [16.6, 2667.0], [16.7, 2667.0], [16.8, 2711.0], [16.9, 2711.0], [17.0, 2711.0], [17.1, 2711.0], [17.2, 2711.0], [17.3, 2711.0], [17.4, 2715.0], [17.5, 2715.0], [17.6, 2715.0], [17.7, 2715.0], [17.8, 2715.0], [17.9, 2747.0], [18.0, 2747.0], [18.1, 2747.0], [18.2, 2747.0], [18.3, 2747.0], [18.4, 2747.0], [18.5, 2748.0], [18.6, 2748.0], [18.7, 2748.0], [18.8, 2748.0], [18.9, 2748.0], [19.0, 2795.0], [19.1, 2795.0], [19.2, 2795.0], [19.3, 2795.0], [19.4, 2795.0], [19.5, 2795.0], [19.6, 2801.0], [19.7, 2801.0], [19.8, 2801.0], [19.9, 2801.0], [20.0, 2801.0], [20.1, 2801.0], [20.2, 2833.0], [20.3, 2833.0], [20.4, 2833.0], [20.5, 2833.0], [20.6, 2833.0], [20.7, 2834.0], [20.8, 2834.0], [20.9, 2834.0], [21.0, 2834.0], [21.1, 2834.0], [21.2, 2834.0], [21.3, 2835.0], [21.4, 2835.0], [21.5, 2835.0], [21.6, 2835.0], [21.7, 2835.0], [21.8, 2848.0], [21.9, 2848.0], [22.0, 2848.0], [22.1, 2848.0], [22.2, 2848.0], [22.3, 2848.0], [22.4, 2882.0], [22.5, 2882.0], [22.6, 2882.0], [22.7, 2882.0], [22.8, 2882.0], [22.9, 2882.0], [23.0, 2906.0], [23.1, 2906.0], [23.2, 2906.0], [23.3, 2906.0], [23.4, 2906.0], [23.5, 2920.0], [23.6, 2920.0], [23.7, 2920.0], [23.8, 2920.0], [23.9, 2920.0], [24.0, 2920.0], [24.1, 2920.0], [24.2, 2920.0], [24.3, 2920.0], [24.4, 2920.0], [24.5, 2920.0], [24.6, 2934.0], [24.7, 2934.0], [24.8, 2934.0], [24.9, 2934.0], [25.0, 2934.0], [25.1, 2934.0], [25.2, 3007.0], [25.3, 3007.0], [25.4, 3007.0], [25.5, 3007.0], [25.6, 3007.0], [25.7, 3087.0], [25.8, 3087.0], [25.9, 3087.0], [26.0, 3087.0], [26.1, 3087.0], [26.2, 3087.0], [26.3, 3090.0], [26.4, 3090.0], [26.5, 3090.0], [26.6, 3090.0], [26.7, 3090.0], [26.8, 3090.0], [26.9, 3091.0], [27.0, 3091.0], [27.1, 3091.0], [27.2, 3091.0], [27.3, 3091.0], [27.4, 3102.0], [27.5, 3102.0], [27.6, 3102.0], [27.7, 3102.0], [27.8, 3102.0], [27.9, 3102.0], [28.0, 3125.0], [28.1, 3125.0], [28.2, 3125.0], [28.3, 3125.0], [28.4, 3125.0], [28.5, 3160.0], [28.6, 3160.0], [28.7, 3160.0], [28.8, 3160.0], [28.9, 3160.0], [29.0, 3160.0], [29.1, 3179.0], [29.2, 3179.0], [29.3, 3179.0], [29.4, 3179.0], [29.5, 3179.0], [29.6, 3179.0], [29.7, 3258.0], [29.8, 3258.0], [29.9, 3258.0], [30.0, 3258.0], [30.1, 3258.0], [30.2, 3278.0], [30.3, 3278.0], [30.4, 3278.0], [30.5, 3278.0], [30.6, 3278.0], [30.7, 3278.0], [30.8, 3346.0], [30.9, 3346.0], [31.0, 3346.0], [31.1, 3346.0], [31.2, 3346.0], [31.3, 3468.0], [31.4, 3468.0], [31.5, 3468.0], [31.6, 3468.0], [31.7, 3468.0], [31.8, 3468.0], [31.9, 3468.0], [32.0, 3468.0], [32.1, 3468.0], [32.2, 3468.0], [32.3, 3468.0], [32.4, 3468.0], [32.5, 3479.0], [32.6, 3479.0], [32.7, 3479.0], [32.8, 3479.0], [32.9, 3479.0], [33.0, 3515.0], [33.1, 3515.0], [33.2, 3515.0], [33.3, 3515.0], [33.4, 3515.0], [33.5, 3515.0], [33.6, 3518.0], [33.7, 3518.0], [33.8, 3518.0], [33.9, 3518.0], [34.0, 3518.0], [34.1, 3518.0], [34.2, 3518.0], [34.3, 3518.0], [34.4, 3518.0], [34.5, 3518.0], [34.6, 3518.0], [34.7, 3592.0], [34.8, 3592.0], [34.9, 3592.0], [35.0, 3592.0], [35.1, 3592.0], [35.2, 3598.0], [35.3, 3598.0], [35.4, 3598.0], [35.5, 3598.0], [35.6, 3598.0], [35.7, 3598.0], [35.8, 3613.0], [35.9, 3613.0], [36.0, 3613.0], [36.1, 3613.0], [36.2, 3613.0], [36.3, 3613.0], [36.4, 3615.0], [36.5, 3615.0], [36.6, 3615.0], [36.7, 3615.0], [36.8, 3615.0], [36.9, 3627.0], [37.0, 3627.0], [37.1, 3627.0], [37.2, 3627.0], [37.3, 3627.0], [37.4, 3627.0], [37.5, 3734.0], [37.6, 3734.0], [37.7, 3734.0], [37.8, 3734.0], [37.9, 3734.0], [38.0, 3737.0], [38.1, 3737.0], [38.2, 3737.0], [38.3, 3737.0], [38.4, 3737.0], [38.5, 3737.0], [38.6, 3747.0], [38.7, 3747.0], [38.8, 3747.0], [38.9, 3747.0], [39.0, 3747.0], [39.1, 3747.0], [39.2, 3759.0], [39.3, 3759.0], [39.4, 3759.0], [39.5, 3759.0], [39.6, 3759.0], [39.7, 3790.0], [39.8, 3790.0], [39.9, 3790.0], [40.0, 3790.0], [40.1, 3790.0], [40.2, 3790.0], [40.3, 3809.0], [40.4, 3809.0], [40.5, 3809.0], [40.6, 3809.0], [40.7, 3809.0], [40.8, 3833.0], [40.9, 3833.0], [41.0, 3833.0], [41.1, 3833.0], [41.2, 3833.0], [41.3, 3833.0], [41.4, 3877.0], [41.5, 3877.0], [41.6, 3877.0], [41.7, 3877.0], [41.8, 3877.0], [41.9, 3899.0], [42.0, 3899.0], [42.1, 3899.0], [42.2, 3899.0], [42.3, 3899.0], [42.4, 3899.0], [42.5, 3919.0], [42.6, 3919.0], [42.7, 3919.0], [42.8, 3919.0], [42.9, 3919.0], [43.0, 3919.0], [43.1, 3934.0], [43.2, 3934.0], [43.3, 3934.0], [43.4, 3934.0], [43.5, 3934.0], [43.6, 4018.0], [43.7, 4018.0], [43.8, 4018.0], [43.9, 4018.0], [44.0, 4018.0], [44.1, 4018.0], [44.2, 4048.0], [44.3, 4048.0], [44.4, 4048.0], [44.5, 4048.0], [44.6, 4048.0], [44.7, 4104.0], [44.8, 4104.0], [44.9, 4104.0], [45.0, 4104.0], [45.1, 4104.0], [45.2, 4104.0], [45.3, 4126.0], [45.4, 4126.0], [45.5, 4126.0], [45.6, 4126.0], [45.7, 4126.0], [45.8, 4126.0], [45.9, 4253.0], [46.0, 4253.0], [46.1, 4253.0], [46.2, 4253.0], [46.3, 4253.0], [46.4, 4271.0], [46.5, 4271.0], [46.6, 4271.0], [46.7, 4271.0], [46.8, 4271.0], [46.9, 4271.0], [47.0, 4305.0], [47.1, 4305.0], [47.2, 4305.0], [47.3, 4305.0], [47.4, 4305.0], [47.5, 4318.0], [47.6, 4318.0], [47.7, 4318.0], [47.8, 4318.0], [47.9, 4318.0], [48.0, 4318.0], [48.1, 4342.0], [48.2, 4342.0], [48.3, 4342.0], [48.4, 4342.0], [48.5, 4342.0], [48.6, 4342.0], [48.7, 4387.0], [48.8, 4387.0], [48.9, 4387.0], [49.0, 4387.0], [49.1, 4387.0], [49.2, 4400.0], [49.3, 4400.0], [49.4, 4400.0], [49.5, 4400.0], [49.6, 4400.0], [49.7, 4400.0], [49.8, 4419.0], [49.9, 4419.0], [50.0, 4419.0], [50.1, 4419.0], [50.2, 4419.0], [50.3, 4436.0], [50.4, 4436.0], [50.5, 4436.0], [50.6, 4436.0], [50.7, 4436.0], [50.8, 4436.0], [50.9, 4490.0], [51.0, 4490.0], [51.1, 4490.0], [51.2, 4490.0], [51.3, 4490.0], [51.4, 4554.0], [51.5, 4554.0], [51.6, 4554.0], [51.7, 4554.0], [51.8, 4554.0], [51.9, 4554.0], [52.0, 4585.0], [52.1, 4585.0], [52.2, 4585.0], [52.3, 4585.0], [52.4, 4585.0], [52.5, 4585.0], [52.6, 4644.0], [52.7, 4644.0], [52.8, 4644.0], [52.9, 4644.0], [53.0, 4644.0], [53.1, 4657.0], [53.2, 4657.0], [53.3, 4657.0], [53.4, 4657.0], [53.5, 4657.0], [53.6, 4657.0], [53.7, 4723.0], [53.8, 4723.0], [53.9, 4723.0], [54.0, 4723.0], [54.1, 4723.0], [54.2, 4734.0], [54.3, 4734.0], [54.4, 4734.0], [54.5, 4734.0], [54.6, 4734.0], [54.7, 4734.0], [54.8, 4806.0], [54.9, 4806.0], [55.0, 4806.0], [55.1, 4806.0], [55.2, 4806.0], [55.3, 4806.0], [55.4, 4807.0], [55.5, 4807.0], [55.6, 4807.0], [55.7, 4807.0], [55.8, 4807.0], [55.9, 4822.0], [56.0, 4822.0], [56.1, 4822.0], [56.2, 4822.0], [56.3, 4822.0], [56.4, 4822.0], [56.5, 4878.0], [56.6, 4878.0], [56.7, 4878.0], [56.8, 4878.0], [56.9, 4878.0], [57.0, 4880.0], [57.1, 4880.0], [57.2, 4880.0], [57.3, 4880.0], [57.4, 4880.0], [57.5, 4880.0], [57.6, 4893.0], [57.7, 4893.0], [57.8, 4893.0], [57.9, 4893.0], [58.0, 4893.0], [58.1, 4893.0], [58.2, 4929.0], [58.3, 4929.0], [58.4, 4929.0], [58.5, 4929.0], [58.6, 4929.0], [58.7, 4976.0], [58.8, 4976.0], [58.9, 4976.0], [59.0, 4976.0], [59.1, 4976.0], [59.2, 4976.0], [59.3, 5032.0], [59.4, 5032.0], [59.5, 5032.0], [59.6, 5032.0], [59.7, 5032.0], [59.8, 5036.0], [59.9, 5036.0], [60.0, 5036.0], [60.1, 5036.0], [60.2, 5036.0], [60.3, 5036.0], [60.4, 5053.0], [60.5, 5053.0], [60.6, 5053.0], [60.7, 5053.0], [60.8, 5053.0], [60.9, 5069.0], [61.0, 5069.0], [61.1, 5069.0], [61.2, 5069.0], [61.3, 5069.0], [61.4, 5069.0], [61.5, 5102.0], [61.6, 5102.0], [61.7, 5102.0], [61.8, 5102.0], [61.9, 5102.0], [62.0, 5102.0], [62.1, 5152.0], [62.2, 5152.0], [62.3, 5152.0], [62.4, 5152.0], [62.5, 5152.0], [62.6, 5162.0], [62.7, 5162.0], [62.8, 5162.0], [62.9, 5162.0], [63.0, 5162.0], [63.1, 5162.0], [63.2, 5209.0], [63.3, 5209.0], [63.4, 5209.0], [63.5, 5209.0], [63.6, 5209.0], [63.7, 5212.0], [63.8, 5212.0], [63.9, 5212.0], [64.0, 5212.0], [64.1, 5212.0], [64.2, 5212.0], [64.3, 5235.0], [64.4, 5235.0], [64.5, 5235.0], [64.6, 5235.0], [64.7, 5235.0], [64.8, 5235.0], [64.9, 5265.0], [65.0, 5265.0], [65.1, 5265.0], [65.2, 5265.0], [65.3, 5265.0], [65.4, 5280.0], [65.5, 5280.0], [65.6, 5280.0], [65.7, 5280.0], [65.8, 5280.0], [65.9, 5280.0], [66.0, 5346.0], [66.1, 5346.0], [66.2, 5346.0], [66.3, 5346.0], [66.4, 5346.0], [66.5, 5353.0], [66.6, 5353.0], [66.7, 5353.0], [66.8, 5353.0], [66.9, 5353.0], [67.0, 5353.0], [67.1, 5371.0], [67.2, 5371.0], [67.3, 5371.0], [67.4, 5371.0], [67.5, 5371.0], [67.6, 5390.0], [67.7, 5390.0], [67.8, 5390.0], [67.9, 5390.0], [68.0, 5390.0], [68.1, 5390.0], [68.2, 5401.0], [68.3, 5401.0], [68.4, 5401.0], [68.5, 5401.0], [68.6, 5401.0], [68.7, 5401.0], [68.8, 5478.0], [68.9, 5478.0], [69.0, 5478.0], [69.1, 5478.0], [69.2, 5478.0], [69.3, 5515.0], [69.4, 5515.0], [69.5, 5515.0], [69.6, 5515.0], [69.7, 5515.0], [69.8, 5515.0], [69.9, 5523.0], [70.0, 5523.0], [70.1, 5523.0], [70.2, 5523.0], [70.3, 5523.0], [70.4, 5591.0], [70.5, 5591.0], [70.6, 5591.0], [70.7, 5591.0], [70.8, 5591.0], [70.9, 5591.0], [71.0, 5609.0], [71.1, 5609.0], [71.2, 5609.0], [71.3, 5609.0], [71.4, 5609.0], [71.5, 5609.0], [71.6, 5649.0], [71.7, 5649.0], [71.8, 5649.0], [71.9, 5649.0], [72.0, 5649.0], [72.1, 5655.0], [72.2, 5655.0], [72.3, 5655.0], [72.4, 5655.0], [72.5, 5655.0], [72.6, 5655.0], [72.7, 5692.0], [72.8, 5692.0], [72.9, 5692.0], [73.0, 5692.0], [73.1, 5692.0], [73.2, 5701.0], [73.3, 5701.0], [73.4, 5701.0], [73.5, 5701.0], [73.6, 5701.0], [73.7, 5701.0], [73.8, 5701.0], [73.9, 5701.0], [74.0, 5701.0], [74.1, 5701.0], [74.2, 5701.0], [74.3, 5701.0], [74.4, 5724.0], [74.5, 5724.0], [74.6, 5724.0], [74.7, 5724.0], [74.8, 5724.0], [74.9, 5854.0], [75.0, 5854.0], [75.1, 5854.0], [75.2, 5854.0], [75.3, 5854.0], [75.4, 5854.0], [75.5, 5864.0], [75.6, 5864.0], [75.7, 5864.0], [75.8, 5864.0], [75.9, 5864.0], [76.0, 5897.0], [76.1, 5897.0], [76.2, 5897.0], [76.3, 5897.0], [76.4, 5897.0], [76.5, 5897.0], [76.6, 6010.0], [76.7, 6010.0], [76.8, 6010.0], [76.9, 6010.0], [77.0, 6010.0], [77.1, 6043.0], [77.2, 6043.0], [77.3, 6043.0], [77.4, 6043.0], [77.5, 6043.0], [77.6, 6043.0], [77.7, 6168.0], [77.8, 6168.0], [77.9, 6168.0], [78.0, 6168.0], [78.1, 6168.0], [78.2, 6168.0], [78.3, 6491.0], [78.4, 6491.0], [78.5, 6491.0], [78.6, 6491.0], [78.7, 6491.0], [78.8, 6745.0], [78.9, 6745.0], [79.0, 6745.0], [79.1, 6745.0], [79.2, 6745.0], [79.3, 6745.0], [79.4, 6770.0], [79.5, 6770.0], [79.6, 6770.0], [79.7, 6770.0], [79.8, 6770.0], [79.9, 6830.0], [80.0, 6830.0], [80.1, 6830.0], [80.2, 6830.0], [80.3, 6830.0], [80.4, 6830.0], [80.5, 7038.0], [80.6, 7038.0], [80.7, 7038.0], [80.8, 7038.0], [80.9, 7038.0], [81.0, 7038.0], [81.1, 7107.0], [81.2, 7107.0], [81.3, 7107.0], [81.4, 7107.0], [81.5, 7107.0], [81.6, 7171.0], [81.7, 7171.0], [81.8, 7171.0], [81.9, 7171.0], [82.0, 7171.0], [82.1, 7171.0], [82.2, 7191.0], [82.3, 7191.0], [82.4, 7191.0], [82.5, 7191.0], [82.6, 7191.0], [82.7, 7358.0], [82.8, 7358.0], [82.9, 7358.0], [83.0, 7358.0], [83.1, 7358.0], [83.2, 7358.0], [83.3, 7563.0], [83.4, 7563.0], [83.5, 7563.0], [83.6, 7563.0], [83.7, 7563.0], [83.8, 7571.0], [83.9, 7571.0], [84.0, 7571.0], [84.1, 7571.0], [84.2, 7571.0], [84.3, 7571.0], [84.4, 7654.0], [84.5, 7654.0], [84.6, 7654.0], [84.7, 7654.0], [84.8, 7654.0], [84.9, 7654.0], [85.0, 7861.0], [85.1, 7861.0], [85.2, 7861.0], [85.3, 7861.0], [85.4, 7861.0], [85.5, 7975.0], [85.6, 7975.0], [85.7, 7975.0], [85.8, 7975.0], [85.9, 7975.0], [86.0, 7975.0], [86.1, 8056.0], [86.2, 8056.0], [86.3, 8056.0], [86.4, 8056.0], [86.5, 8056.0], [86.6, 8403.0], [86.7, 8403.0], [86.8, 8403.0], [86.9, 8403.0], [87.0, 8403.0], [87.1, 8403.0], [87.2, 8590.0], [87.3, 8590.0], [87.4, 8590.0], [87.5, 8590.0], [87.6, 8590.0], [87.7, 8590.0], [87.8, 8616.0], [87.9, 8616.0], [88.0, 8616.0], [88.1, 8616.0], [88.2, 8616.0], [88.3, 8746.0], [88.4, 8746.0], [88.5, 8746.0], [88.6, 8746.0], [88.7, 8746.0], [88.8, 8746.0], [88.9, 8756.0], [89.0, 8756.0], [89.1, 8756.0], [89.2, 8756.0], [89.3, 8756.0], [89.4, 8849.0], [89.5, 8849.0], [89.6, 8849.0], [89.7, 8849.0], [89.8, 8849.0], [89.9, 8849.0], [90.0, 8983.0], [90.1, 8983.0], [90.2, 8983.0], [90.3, 8983.0], [90.4, 8983.0], [90.5, 8983.0], [90.6, 9530.0], [90.7, 9530.0], [90.8, 9530.0], [90.9, 9530.0], [91.0, 9530.0], [91.1, 11201.0], [91.2, 11201.0], [91.3, 11201.0], [91.4, 11201.0], [91.5, 11201.0], [91.6, 11201.0], [91.7, 11222.0], [91.8, 11222.0], [91.9, 11222.0], [92.0, 11222.0], [92.1, 11222.0], [92.2, 12381.0], [92.3, 12381.0], [92.4, 12381.0], [92.5, 12381.0], [92.6, 12381.0], [92.7, 12381.0], [92.8, 13298.0], [92.9, 13298.0], [93.0, 13298.0], [93.1, 13298.0], [93.2, 13298.0], [93.3, 13507.0], [93.4, 13507.0], [93.5, 13507.0], [93.6, 13507.0], [93.7, 13507.0], [93.8, 13507.0], [93.9, 13862.0], [94.0, 13862.0], [94.1, 13862.0], [94.2, 13862.0], [94.3, 13862.0], [94.4, 13862.0], [94.5, 14000.0], [94.6, 14000.0], [94.7, 14000.0], [94.8, 14000.0], [94.9, 14000.0], [95.0, 14733.0], [95.1, 14733.0], [95.2, 14733.0], [95.3, 14733.0], [95.4, 14733.0], [95.5, 14733.0], [95.6, 14980.0], [95.7, 14980.0], [95.8, 14980.0], [95.9, 14980.0], [96.0, 14980.0], [96.1, 15261.0], [96.2, 15261.0], [96.3, 15261.0], [96.4, 15261.0], [96.5, 15261.0], [96.6, 15261.0], [96.7, 15546.0], [96.8, 15546.0], [96.9, 15546.0], [97.0, 15546.0], [97.1, 15546.0], [97.2, 15546.0], [97.3, 15554.0], [97.4, 15554.0], [97.5, 15554.0], [97.6, 15554.0], [97.7, 15554.0], [97.8, 16138.0], [97.9, 16138.0], [98.0, 16138.0], [98.1, 16138.0], [98.2, 16138.0], [98.3, 16138.0], [98.4, 16924.0], [98.5, 16924.0], [98.6, 16924.0], [98.7, 16924.0], [98.8, 16924.0], [98.9, 17315.0], [99.0, 17315.0], [99.1, 17315.0], [99.2, 17315.0], [99.3, 17315.0], [99.4, 17315.0], [99.5, 24370.0], [99.6, 24370.0], [99.7, 24370.0], [99.8, 24370.0], [99.9, 24370.0]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 31.0, "series": [{"data": [[600.0, 18.0], [700.0, 15.0], [800.0, 11.0], [900.0, 8.0], [1000.0, 11.0], [1100.0, 4.0], [1200.0, 5.0], [1300.0, 2.0], [1400.0, 6.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 4.0], [2700.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3800.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [400.0, 19.0], [500.0, 31.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 7.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 4.0], [2800.0, 6.0], [2700.0, 5.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 4.0], [3300.0, 1.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 5.0], [3600.0, 3.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 2.0], [4300.0, 4.0], [4200.0, 2.0], [4400.0, 4.0], [4500.0, 2.0], [4600.0, 2.0], [4800.0, 6.0], [4700.0, 2.0], [5100.0, 3.0], [4900.0, 2.0], [5000.0, 4.0], [5200.0, 5.0], [5300.0, 4.0], [5400.0, 2.0], [5500.0, 3.0], [5600.0, 4.0], [5700.0, 3.0], [5800.0, 3.0], [6000.0, 2.0], [6100.0, 1.0], [6400.0, 1.0], [6800.0, 1.0], [6700.0, 2.0], [7100.0, 3.0], [7000.0, 1.0], [7300.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8000.0, 1.0], [8700.0, 2.0], [8400.0, 1.0], [8600.0, 1.0], [8500.0, 1.0], [8800.0, 1.0], [8900.0, 1.0], [9500.0, 1.0], [11200.0, 2.0], [12300.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13800.0, 1.0], [14000.0, 1.0], [14700.0, 1.0], [15200.0, 1.0], [14900.0, 1.0], [15500.0, 2.0], [16100.0, 1.0], [16900.0, 1.0], [17300.0, 1.0], [24300.0, 1.0]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[600.0, 18.0], [700.0, 15.0], [800.0, 11.0], [900.0, 8.0], [1000.0, 11.0], [1100.0, 4.0], [1200.0, 5.0], [1300.0, 2.0], [1400.0, 6.0], [1500.0, 4.0], [1600.0, 3.0], [1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 1.0], [2100.0, 2.0], [2200.0, 4.0], [2300.0, 2.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 1.0], [2800.0, 4.0], [2700.0, 1.0], [2900.0, 3.0], [3000.0, 1.0], [3100.0, 1.0], [3300.0, 2.0], [3200.0, 1.0], [3500.0, 1.0], [3600.0, 2.0], [3800.0, 3.0], [4400.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [400.0, 19.0], [500.0, 31.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1700.0, 3.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 2.0], [2200.0, 7.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 3.0], [2600.0, 4.0], [2800.0, 6.0], [2700.0, 5.0], [2900.0, 4.0], [3000.0, 4.0], [3100.0, 4.0], [3300.0, 1.0], [3200.0, 2.0], [3400.0, 3.0], [3500.0, 5.0], [3600.0, 3.0], [3700.0, 5.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4100.0, 2.0], [4300.0, 4.0], [4200.0, 2.0], [4400.0, 4.0], [4500.0, 2.0], [4600.0, 2.0], [4800.0, 6.0], [4700.0, 2.0], [5100.0, 3.0], [4900.0, 2.0], [5000.0, 4.0], [5200.0, 5.0], [5300.0, 4.0], [5400.0, 2.0], [5500.0, 3.0], [5600.0, 4.0], [5700.0, 3.0], [5800.0, 3.0], [6000.0, 2.0], [6100.0, 1.0], [6400.0, 1.0], [6800.0, 1.0], [6700.0, 2.0], [7100.0, 3.0], [7000.0, 1.0], [7300.0, 1.0], [7500.0, 2.0], [7600.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8000.0, 1.0], [8700.0, 2.0], [8400.0, 1.0], [8600.0, 1.0], [8500.0, 1.0], [8800.0, 1.0], [8900.0, 1.0], [9500.0, 1.0], [11200.0, 2.0], [12300.0, 1.0], [13200.0, 1.0], [13500.0, 1.0], [13800.0, 1.0], [14000.0, 1.0], [14700.0, 1.0], [15200.0, 1.0], [14900.0, 1.0], [15500.0, 2.0], [16100.0, 1.0], [16900.0, 1.0], [17300.0, 1.0], [24300.0, 1.0]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 228.0, "series": [{"data": [[0.0, 21.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 109.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 228.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.5, "minX": 1.6952724E12, "maxY": 87.93877551020411, "series": [{"data": [[1.6952724E12, 87.93877551020411], [1.69527246E12, 53.95693779904311], [1.69527372E12, 1.5], [1.69527366E12, 67.90782122905027]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527372E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 456.0, "minX": 1.0, "maxY": 24370.0, "series": [{"data": [[2.0, 973.5], [3.0, 477.0], [4.0, 2320.5], [5.0, 1515.5], [6.0, 1465.5], [7.0, 1395.0], [8.0, 2624.0], [9.0, 994.5], [10.0, 1983.5], [11.0, 987.5], [12.0, 2933.0], [13.0, 1075.5], [14.0, 2395.5], [15.0, 2934.5], [16.0, 1099.0], [17.0, 2300.6666666666665], [18.0, 2200.5], [19.0, 1560.0], [20.0, 2251.3333333333335], [21.0, 2059.5], [22.0, 1935.0], [23.0, 2492.0], [24.0, 748.5], [25.0, 3040.0], [26.0, 1792.0], [27.0, 1770.0], [28.0, 2447.0], [29.0, 741.0], [30.0, 595.0], [31.0, 2557.0], [33.0, 659.5], [32.0, 1886.0], [35.0, 1997.0], [34.0, 1454.5], [37.0, 1665.5], [36.0, 1184.0], [39.0, 1385.5], [38.0, 2657.0], [41.0, 1170.5], [40.0, 2417.5], [43.0, 916.0], [42.0, 1289.5], [45.0, 804.5], [44.0, 1677.5], [47.0, 1198.5], [46.0, 1157.5], [49.0, 2082.5], [48.0, 1452.0], [51.0, 1236.5], [50.0, 872.0], [53.0, 700.0], [52.0, 1962.5], [55.0, 634.5], [54.0, 631.5], [57.0, 588.0], [56.0, 633.0], [59.0, 793.5], [58.0, 784.5], [61.0, 664.0], [60.0, 886.5], [63.0, 1225.0], [62.0, 1144.0], [67.0, 697.5], [66.0, 882.5], [65.0, 1050.5], [64.0, 949.0], [71.0, 588.0], [70.0, 1359.0], [69.0, 755.5], [68.0, 1153.5], [75.0, 698.6666666666666], [74.0, 569.0], [73.0, 663.5], [72.0, 563.5], [79.0, 649.5], [78.0, 818.5], [77.0, 589.5], [76.0, 680.0], [83.0, 492.5], [82.0, 816.0], [81.0, 611.5], [80.0, 546.5], [87.0, 538.5], [86.0, 456.0], [85.0, 505.5], [84.0, 482.0], [90.0, 746.5], [89.0, 749.0], [88.0, 775.5], [1.0, 1260.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[45.78770949720668, 1290.932960893855]], "isOverall": false, "label": "HTTP Request - Carrer-Aggregated", "isController": false}, {"data": [[87.0, 16924.0], [86.0, 15546.0], [90.0, 5131.090909090908], [50.0, 24370.0]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[89.7374301675978, 5362.636871508383]], "isOverall": false, "label": "HTTP Request - About Us-Aggregated", "isController": false}, {"data": [[2.0, 973.5], [3.0, 477.0], [4.0, 2320.5], [5.0, 1515.5], [6.0, 1465.5], [7.0, 1395.0], [8.0, 2624.0], [9.0, 994.5], [10.0, 1983.5], [11.0, 987.5], [12.0, 2933.0], [13.0, 1075.5], [14.0, 2395.5], [15.0, 2934.5], [16.0, 1099.0], [17.0, 2300.6666666666665], [18.0, 2200.5], [19.0, 1560.0], [20.0, 2251.3333333333335], [21.0, 2059.5], [22.0, 1935.0], [23.0, 2492.0], [24.0, 748.5], [25.0, 3040.0], [26.0, 1792.0], [27.0, 1770.0], [28.0, 2447.0], [29.0, 741.0], [30.0, 595.0], [31.0, 2557.0], [33.0, 659.5], [32.0, 1886.0], [35.0, 1997.0], [34.0, 1454.5], [37.0, 1665.5], [36.0, 1184.0], [39.0, 1385.5], [38.0, 2657.0], [41.0, 1170.5], [40.0, 2417.5], [43.0, 916.0], [42.0, 1289.5], [45.0, 804.5], [44.0, 1677.5], [47.0, 1198.5], [46.0, 1157.5], [49.0, 2082.5], [48.0, 1452.0], [51.0, 1236.5], [50.0, 872.0], [53.0, 700.0], [52.0, 1962.5], [55.0, 634.5], [54.0, 631.5], [57.0, 588.0], [56.0, 633.0], [59.0, 793.5], [58.0, 784.5], [61.0, 664.0], [60.0, 886.5], [63.0, 1225.0], [62.0, 1144.0], [67.0, 697.5], [66.0, 882.5], [65.0, 1050.5], [64.0, 949.0], [71.0, 588.0], [70.0, 1359.0], [69.0, 755.5], [68.0, 1153.5], [75.0, 698.6666666666666], [74.0, 569.0], [73.0, 663.5], [72.0, 563.5], [79.0, 649.5], [78.0, 818.5], [77.0, 589.5], [76.0, 680.0], [83.0, 492.5], [82.0, 816.0], [81.0, 611.5], [80.0, 546.5], [87.0, 538.5], [86.0, 456.0], [85.0, 505.5], [84.0, 482.0], [90.0, 746.5], [89.0, 749.0], [88.0, 775.5], [1.0, 1260.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[45.78770949720668, 1290.932960893855]], "isOverall": false, "label": "Career-Aggregated", "isController": true}, {"data": [[87.0, 16924.0], [86.0, 15546.0], [90.0, 5131.096590909089], [50.0, 24370.0]], "isOverall": false, "label": "About Us", "isController": true}, {"data": [[89.7374301675978, 5362.6424581005585]], "isOverall": false, "label": "About Us-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 90.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 43.833333333333336, "minX": 1.6952724E12, "maxY": 164130.23333333334, "series": [{"data": [[1.6952724E12, 36061.71666666667], [1.69527246E12, 127723.7], [1.69527372E12, 1494.7666666666667], [1.69527366E12, 164130.23333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6952724E12, 338.25], [1.69527246E12, 2524.5833333333335], [1.69527372E12, 43.833333333333336], [1.69527366E12, 2851.1666666666665]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527372E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 645.8800000000001, "minX": 1.6952724E12, "maxY": 5777.355555555555, "series": [{"data": [[1.69527246E12, 1035.3483146067415], [1.69527372E12, 1348.5], [1.69527366E12, 1548.113636363637]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.6952724E12, 3610.090909090909], [1.69527246E12, 5728.875000000002], [1.69527366E12, 5777.355555555555]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.6952724E12, 645.8800000000001], [1.69527246E12, 1187.4843750000005], [1.69527366E12, 1543.6777777777781]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.6952724E12, 4943.269662921349], [1.69527366E12, 5777.355555555555]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527372E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 475.16, "minX": 1.6952724E12, "maxY": 2724.678571428571, "series": [{"data": [[1.69527246E12, 622.9550561797753], [1.69527372E12, 573.5], [1.69527366E12, 962.159090909091]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.6952724E12, 1490.2424242424247], [1.69527246E12, 2724.678571428571], [1.69527366E12, 1951.3999999999999]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.6952724E12, 475.16], [1.69527246E12, 680.6875], [1.69527366E12, 953.5222222222222]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.6952724E12, 2266.9662921348313], [1.69527366E12, 1951.3999999999999]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527372E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6952724E12, "maxY": 1600.0714285714287, "series": [{"data": [[1.69527246E12, 0.0], [1.69527372E12, 0.0], [1.69527366E12, 0.0]], "isOverall": false, "label": "HTTP Request - Carrer", "isController": false}, {"data": [[1.6952724E12, 385.30303030303037], [1.69527246E12, 1600.0714285714287], [1.69527366E12, 893.7777777777776]], "isOverall": false, "label": "HTTP Request - About Us", "isController": false}, {"data": [[1.6952724E12, 0.0], [1.69527246E12, 0.0], [1.69527366E12, 0.0]], "isOverall": false, "label": "Career", "isController": true}, {"data": [[1.6952724E12, 1149.6516853932585], [1.69527366E12, 893.7777777777776]], "isOverall": false, "label": "About Us", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527372E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 447.0, "minX": 1.6952724E12, "maxY": 24370.0, "series": [{"data": [[1.6952724E12, 7171.0], [1.69527246E12, 16924.0], [1.69527372E12, 1437.0], [1.69527366E12, 24370.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6952724E12, 5442.8], [1.69527246E12, 5916.400000000001], [1.69527372E12, 1437.0], [1.69527366E12, 7579.299999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6952724E12, 7171.0], [1.69527246E12, 16293.799999999988], [1.69527372E12, 1437.0], [1.69527366E12, 18796.550000000057]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6952724E12, 6932.299999999999], [1.69527246E12, 8643.099999999997], [1.69527372E12, 1437.0], [1.69527366E12, 13524.749999999995]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6952724E12, 1885.0], [1.69527246E12, 447.0], [1.69527372E12, 1260.0], [1.69527366E12, 458.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6952724E12, 3592.0], [1.69527246E12, 1560.0], [1.69527372E12, 1348.5], [1.69527366E12, 2849.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527372E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 963.5, "minX": 1.0, "maxY": 5322.0, "series": [{"data": [[2.0, 2561.0], [9.0, 1453.0], [10.0, 2021.5], [11.0, 1527.0], [3.0, 2208.5], [12.0, 3724.0], [14.0, 3746.5], [1.0, 1773.0], [4.0, 1758.5], [18.0, 5322.0], [5.0, 2144.0], [6.0, 963.5], [7.0, 2448.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 587.5, "minX": 1.0, "maxY": 1764.5, "series": [{"data": [[2.0, 1160.5], [9.0, 747.5], [10.0, 1009.0], [11.0, 683.0], [3.0, 1536.5], [12.0, 1724.5], [14.0, 1764.5], [1.0, 1268.0], [4.0, 1062.5], [18.0, 1511.0], [5.0, 1097.0], [6.0, 587.5], [7.0, 900.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 18.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6952724E12, "maxY": 2.966666666666667, "series": [{"data": [[1.6952724E12, 1.3], [1.69527246E12, 1.6666666666666667], [1.69527372E12, 0.03333333333333333], [1.69527366E12, 2.966666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527372E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6952724E12, "maxY": 2.966666666666667, "series": [{"data": [[1.6952724E12, 0.55], [1.69527246E12, 2.4166666666666665], [1.69527372E12, 0.03333333333333333], [1.69527366E12, 2.966666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69527372E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6952724E12, "maxY": 1.5, "series": [{"data": [[1.6952724E12, 0.4166666666666667], [1.69527246E12, 1.0666666666666667], [1.69527366E12, 1.5]], "isOverall": false, "label": "Career-success", "isController": true}, {"data": [[1.6952724E12, 0.55], [1.69527246E12, 0.9333333333333333], [1.69527366E12, 1.5]], "isOverall": false, "label": "HTTP Request - About Us-success", "isController": false}, {"data": [[1.6952724E12, 1.4833333333333334], [1.69527366E12, 1.5]], "isOverall": false, "label": "About Us-success", "isController": true}, {"data": [[1.69527246E12, 1.4833333333333334], [1.69527372E12, 0.03333333333333333], [1.69527366E12, 1.4666666666666666]], "isOverall": false, "label": "HTTP Request - Carrer-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527372E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.6952724E12, "maxY": 5.966666666666667, "series": [{"data": [[1.6952724E12, 2.45], [1.69527246E12, 3.4833333333333334], [1.69527372E12, 0.03333333333333333], [1.69527366E12, 5.966666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69527372E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

